   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_hash_md5.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	HASH_MD5
  20              		.thumb
  21              		.thumb_func
  23              	HASH_MD5:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @file    stm32f4xx_hash_md5.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief   This file provides high level functions to compute the HASH MD5 and
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          HMAC MD5 Digest of an input message.
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          peripheral.
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *  @verbatim
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *    
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          ===================================================================
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *                                   How to use this driver
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          ===================================================================
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          1. Enable The HASH controller clock using 
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          2. Calculate the HASH MD5 Digest using HASH_MD5() function.
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          3. Calculate the HMAC MD5 Digest using HMAC_MD5() function.
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *  @endverbatim
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @attention
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Includes ------------------------------------------------------------------*/
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** #include "stm32f4xx_hash.h"
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief HASH driver modules
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private typedef -----------------------------------------------------------*/
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private define ------------------------------------------------------------*/
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** #define MD5BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private macro -------------------------------------------------------------*/
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private variables ---------------------------------------------------------*/
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private function prototypes -----------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private functions ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Private_Functions
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */ 
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Group7 High Level MD5 functions
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  *  @brief   High Level MD5 Hash and HMAC functions 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** @verbatim   
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****                           High Level MD5 Hash and HMAC functions
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** @endverbatim
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HASH MD5 digest.
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** ErrorStatus HASH_MD5(uint8_t *Input, uint32_t Ilen, uint8_t Output[16])
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** {
  26              		.loc 1 88 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 48
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 8DB0     		sub	sp, sp, #52
  39              		.cfi_def_cfa_offset 72
  40 0004 0E46     		mov	r6, r1
  41 0006 1746     		mov	r7, r2
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
  42              		.loc 1 91 0
  43 0008 0024     		movs	r4, #0
  44 000a ADF80A40 		strh	r4, [sp, #10]	@ movhi
  45              	.LVL1:
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
  46              		.loc 1 93 0
  47 000e 0194     		str	r4, [sp, #4]
  48              	.LVL2:
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
  49              		.loc 1 96 0
  50 0010 0546     		mov	r5, r0
  51              	.LVL3:
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  52              		.loc 1 101 0
  53 0012 01F00303 		and	r3, r1, #3
  54 0016 DB00     		lsls	r3, r3, #3
  55 0018 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
  56              		.loc 1 104 0
  57 001c FFF7FEFF 		bl	HASH_DeInit
  58              	.LVL4:
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
  59              		.loc 1 107 0
  60 0020 8023     		movs	r3, #128
  61 0022 0893     		str	r3, [sp, #32]
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  62              		.loc 1 108 0
  63 0024 0994     		str	r4, [sp, #36]
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  64              		.loc 1 109 0
  65 0026 2023     		movs	r3, #32
  66 0028 0A93     		str	r3, [sp, #40]
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
  67              		.loc 1 110 0
  68 002a 0DEB0300 		add	r0, sp, r3
  69 002e FFF7FEFF 		bl	HASH_Init
  70              	.LVL5:
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the data */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  71              		.loc 1 113 0
  72 0032 BDF80A00 		ldrh	r0, [sp, #10]
  73 0036 80B2     		uxth	r0, r0
  74 0038 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
  75              	.LVL6:
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Write the Input block in the IN FIFO */
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Ilen; i+=4)
  76              		.loc 1 116 0
  77 003c 04E0     		b	.L2
  78              	.LVL7:
  79              	.L3:
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
  80              		.loc 1 118 0 discriminator 2
  81 003e 55F8040B 		ldr	r0, [r5], #4
  82              	.LVL8:
  83 0042 FFF7FEFF 		bl	HASH_DataIn
  84              	.LVL9:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Ilen; i+=4)
  85              		.loc 1 116 0 discriminator 2
  86 0046 0434     		adds	r4, r4, #4
  87              	.LVL10:
  88              	.L2:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Ilen; i+=4)
  89              		.loc 1 116 0 is_stmt 0 discriminator 1
  90 0048 B442     		cmp	r4, r6
  91 004a F8D3     		bcc	.L3
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     inputaddr+=4;
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
  92              		.loc 1 123 0 is_stmt 1
  93 004c FFF7FEFF 		bl	HASH_StartDigest
  94              	.LVL11:
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   do
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
  95              		.loc 1 128 0
  96 0050 0824     		movs	r4, #8
  97              	.LVL12:
  98              	.L5:
  99              		.loc 1 128 0 is_stmt 0 discriminator 1
 100 0052 2046     		mov	r0, r4
 101 0054 FFF7FEFF 		bl	HASH_GetFlagStatus
 102              	.LVL13:
 103 0058 0246     		mov	r2, r0
 104              	.LVL14:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter++;
 105              		.loc 1 129 0 is_stmt 1 discriminator 1
 106 005a 019B     		ldr	r3, [sp, #4]
 107 005c 0133     		adds	r3, r3, #1
 108 005e 0193     		str	r3, [sp, #4]
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 109              		.loc 1 130 0 discriminator 1
 110 0060 019B     		ldr	r3, [sp, #4]
 111 0062 B3F5803F 		cmp	r3, #65536
 112 0066 01D0     		beq	.L4
 113 0068 0028     		cmp	r0, #0
 114 006a F2D1     		bne	.L5
 115              	.L4:
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 116              		.loc 1 132 0
 117 006c 82B9     		cbnz	r2, .L7
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Read the message digest */
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_GetDigest(&MD5_MessageDigest);
 118              		.loc 1 139 0
 119 006e 03A8     		add	r0, sp, #12
 120              	.LVL15:
 121 0070 FFF7FEFF 		bl	HASH_GetDigest
 122              	.LVL16:
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 123              		.loc 1 140 0
 124 0074 039B     		ldr	r3, [sp, #12]
 125              	.LVL17:
 126              	.LBB18:
 127              	.LBB19:
 128              		.file 2 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\CMSIS\\Include/core_cmInstr.h
   1:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /**************************************************************************//**
   2:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @version  V2.10
   5:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @date     19. July 2011
   6:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  *
   7:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @note
   8:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  *
  10:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @par
  11:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  *
  15:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * @par
  16:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  *
  22:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  ******************************************************************************/
  23:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  24:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  27:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  28:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   Access to dedicated instructions
  31:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   @{
  32:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** */
  33:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  34:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /* ARM armcc specific functions */
  36:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  37:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #endif
  40:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  41:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  42:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
  43:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  44:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  46:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __NOP                             __nop
  47:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  48:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  49:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  51:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
  53:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  54:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __WFI                             __wfi
  55:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  56:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  57:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
  58:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  59:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  62:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __WFE                             __wfe
  63:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  64:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  65:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
  66:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  67:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  69:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __SEV                             __sev
  70:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  71:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  72:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  74:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  77:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  78:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  80:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  81:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  83:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  86:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  88:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  89:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  91:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
  94:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  96:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  97:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
  99:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 101:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 103:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 104:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __REV                             __rev
 105:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 106:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 107:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 109:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 111:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 113:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 114:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 116:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   rev16 r0, r0
 117:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   bx lr
 118:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 119:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 120:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 121:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 123:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 125:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 127:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 128:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 130:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   revsh r0, r0
 131:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   bx lr
 132:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 133:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 134:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 135:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 137:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 139:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 141:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 143:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 144:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __RBIT                            __rbit
 145:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 146:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 147:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 149:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 151:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 154:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 156:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 157:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 159:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 161:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 164:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 166:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 167:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 169:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 171:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 174:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 176:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 177:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 179:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 181:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 182:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 184:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 185:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 186:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 188:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 189:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 191:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 193:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 194:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 196:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 197:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 198:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 200:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 201:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 203:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 205:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 206:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 208:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 209:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 210:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 212:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 213:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 215:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 217:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 218:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __CLREX                           __clrex
 219:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 220:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 221:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Signed Saturate
 222:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 223:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function saturates a signed value.
 224:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 225:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 228:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 229:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __SSAT                            __ssat
 230:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 231:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 232:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 234:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function saturates an unsigned value.
 235:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 236:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 239:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 240:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __USAT                            __usat
 241:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 242:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 243:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Count leading zeros
 244:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 245:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 247:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return             number of leading zeros in value
 249:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 250:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #define __CLZ                             __clz 
 251:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 252:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 254:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 255:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 256:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /* IAR iccarm specific functions */
 258:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 259:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #include <cmsis_iar.h>
 260:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 261:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 262:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /* GNU gcc specific functions */
 264:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 265:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
 266:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 267:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 269:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 271:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("nop");
 272:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 273:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 274:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 275:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 277:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
 279:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 280:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 282:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 283:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 284:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 285:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 286:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
 287:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 288:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 291:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 293:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 294:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 295:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 296:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 297:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
 298:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 299:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 301:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 303:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("sev");
 304:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 305:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 306:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 307:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 309:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
 312:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 313:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 315:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("isb");
 316:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 317:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 318:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 319:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 321:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 324:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 326:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dsb");
 327:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 328:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 329:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 330:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 332:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 335:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 337:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dmb");
 338:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** }
 339:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 340:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 341:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 343:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** 
 345:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 347:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****  */
 348:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h **** {
 350:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   uint32_t result;
 351:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   
 352:C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 129              		.loc 2 352 0
 130              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 131 0076 1BBA     		rev r3, r3
 132              	@ 0 "" 2
 133              	.LVL18:
 134              		.thumb
 135              	.LBE19:
 136              	.LBE18:
 137              		.loc 1 140 0
 138 0078 3B60     		str	r3, [r7]
 139              	.LVL19:
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 140              		.loc 1 142 0
 141 007a 049B     		ldr	r3, [sp, #16]
 142              	.LVL20:
 143              	.LBB20:
 144              	.LBB21:
 145              		.loc 2 352 0
 146              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 147 007c 1BBA     		rev r3, r3
 148              	@ 0 "" 2
 149              	.LVL21:
 150              		.thumb
 151              	.LBE21:
 152              	.LBE20:
 153              		.loc 1 142 0
 154 007e 7B60     		str	r3, [r7, #4]
 155              	.LVL22:
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 156              		.loc 1 144 0
 157 0080 059B     		ldr	r3, [sp, #20]
 158              	.LVL23:
 159              	.LBB22:
 160              	.LBB23:
 161              		.loc 2 352 0
 162              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 163 0082 1BBA     		rev r3, r3
 164              	@ 0 "" 2
 165              	.LVL24:
 166              		.thumb
 167              	.LBE23:
 168              	.LBE22:
 169              		.loc 1 144 0
 170 0084 BB60     		str	r3, [r7, #8]
 171              	.LVL25:
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 172              		.loc 1 146 0
 173 0086 069B     		ldr	r3, [sp, #24]
 174              	.LVL26:
 175              	.LBB24:
 176              	.LBB25:
 177              		.loc 2 352 0
 178              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 179 0088 1BBA     		rev r3, r3
 180              	@ 0 "" 2
 181              	.LVL27:
 182              		.thumb
 183              	.LBE25:
 184              	.LBE24:
 185              		.loc 1 146 0
 186 008a FB60     		str	r3, [r7, #12]
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
 187              		.loc 1 95 0
 188 008c 0120     		movs	r0, #1
 189 008e 00E0     		b	.L6
 190              	.LVL28:
 191              	.L7:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 192              		.loc 1 134 0
 193 0090 0020     		movs	r0, #0
 194              	.LVL29:
 195              	.L6:
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   return status; 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** }
 196              		.loc 1 149 0
 197 0092 0DB0     		add	sp, sp, #52
 198              		@ sp needed
 199 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 200              		.cfi_endproc
 201              	.LFE110:
 203 0096 00BF     		.align	2
 204              		.global	HMAC_MD5
 205              		.thumb
 206              		.thumb_func
 208              	HMAC_MD5:
 209              	.LFB111:
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HMAC MD5 digest.
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Key: pointer to the Key used for HMAC.
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Keylen: length of the Key used for HMAC.
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest  
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** ErrorStatus HMAC_MD5(uint8_t *Key, uint32_t Keylen, uint8_t *Input, 
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****                      uint32_t Ilen, uint8_t Output[16])
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** {
 210              		.loc 1 164 0
 211              		.cfi_startproc
 212              		@ args = 4, pretend = 0, frame = 48
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              	.LVL30:
 215 0098 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 216              		.cfi_def_cfa_offset 28
 217              		.cfi_offset 4, -28
 218              		.cfi_offset 5, -24
 219              		.cfi_offset 6, -20
 220              		.cfi_offset 7, -16
 221              		.cfi_offset 8, -12
 222              		.cfi_offset 9, -8
 223              		.cfi_offset 14, -4
 224 009c 8DB0     		sub	sp, sp, #52
 225              		.cfi_def_cfa_offset 80
 226 009e 8146     		mov	r9, r0
 227 00a0 0D46     		mov	r5, r1
 228 00a2 1F46     		mov	r7, r3
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
 229              		.loc 1 167 0
 230 00a4 0023     		movs	r3, #0
 231              	.LVL31:
 232 00a6 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitskey = 0;
 233              		.loc 1 168 0
 234 00aa ADF80830 		strh	r3, [sp, #8]	@ movhi
 235              	.LVL32:
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
 236              		.loc 1 170 0
 237 00ae 0193     		str	r3, [sp, #4]
 238              	.LVL33:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t keyaddr    = (uint32_t)Key;
 239              		.loc 1 173 0
 240 00b0 8046     		mov	r8, r0
 241              	.LVL34:
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
 242              		.loc 1 174 0
 243 00b2 1646     		mov	r6, r2
 244              	.LVL35:
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 245              		.loc 1 178 0
 246 00b4 07F00303 		and	r3, r7, #3
 247 00b8 DB00     		lsls	r3, r3, #3
 248 00ba ADF80A30 		strh	r3, [sp, #10]	@ movhi
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Key */
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 249              		.loc 1 181 0
 250 00be 01F00303 		and	r3, r1, #3
 251 00c2 DB00     		lsls	r3, r3, #3
 252 00c4 ADF80830 		strh	r3, [sp, #8]	@ movhi
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****    
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
 253              		.loc 1 184 0
 254 00c8 FFF7FEFF 		bl	HASH_DeInit
 255              	.LVL36:
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
 256              		.loc 1 187 0
 257 00cc 8023     		movs	r3, #128
 258 00ce 0893     		str	r3, [sp, #32]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 259              		.loc 1 188 0
 260 00d0 4023     		movs	r3, #64
 261 00d2 0993     		str	r3, [sp, #36]
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 262              		.loc 1 189 0
 263 00d4 2023     		movs	r3, #32
 264 00d6 0A93     		str	r3, [sp, #40]
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if(Keylen > 64)
 265              		.loc 1 190 0
 266 00d8 402D     		cmp	r5, #64
 267 00da 03D9     		bls	.L10
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* HMAC long Key */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 268              		.loc 1 193 0
 269 00dc 4FF48033 		mov	r3, #65536
 270 00e0 0B93     		str	r3, [sp, #44]
 271 00e2 01E0     		b	.L11
 272              	.L10:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* HMAC short Key */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 273              		.loc 1 198 0
 274 00e4 0023     		movs	r3, #0
 275 00e6 0B93     		str	r3, [sp, #44]
 276              	.L11:
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
 277              		.loc 1 200 0
 278 00e8 08A8     		add	r0, sp, #32
 279 00ea FFF7FEFF 		bl	HASH_Init
 280              	.LVL37:
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the Key */
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 281              		.loc 1 203 0
 282 00ee BDF80800 		ldrh	r0, [sp, #8]
 283 00f2 80B2     		uxth	r0, r0
 284 00f4 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 285              	.LVL38:
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Write the Key */
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Keylen; i+=4)
 286              		.loc 1 206 0
 287 00f8 0024     		movs	r4, #0
 288 00fa 04E0     		b	.L12
 289              	.LVL39:
 290              	.L13:
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 291              		.loc 1 208 0 discriminator 2
 292 00fc 59F8040B 		ldr	r0, [r9], #4
 293              	.LVL40:
 294 0100 FFF7FEFF 		bl	HASH_DataIn
 295              	.LVL41:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Keylen; i+=4)
 296              		.loc 1 206 0 discriminator 2
 297 0104 0434     		adds	r4, r4, #4
 298              	.LVL42:
 299              	.L12:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Keylen; i+=4)
 300              		.loc 1 206 0 is_stmt 0 discriminator 1
 301 0106 AC42     		cmp	r4, r5
 302 0108 F8D3     		bcc	.L13
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     keyaddr+=4;
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
 303              		.loc 1 213 0 is_stmt 1
 304 010a FFF7FEFF 		bl	HASH_StartDigest
 305              	.LVL43:
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   do
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 306              		.loc 1 218 0
 307 010e 4FF00809 		mov	r9, #8
 308              	.LVL44:
 309              	.L15:
 310              		.loc 1 218 0 is_stmt 0 discriminator 1
 311 0112 4846     		mov	r0, r9
 312 0114 FFF7FEFF 		bl	HASH_GetFlagStatus
 313              	.LVL45:
 314 0118 0346     		mov	r3, r0
 315              	.LVL46:
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter++;
 316              		.loc 1 219 0 is_stmt 1 discriminator 1
 317 011a 019C     		ldr	r4, [sp, #4]
 318 011c 0134     		adds	r4, r4, #1
 319 011e 0194     		str	r4, [sp, #4]
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 320              		.loc 1 220 0 discriminator 1
 321 0120 019C     		ldr	r4, [sp, #4]
 322 0122 B4F5803F 		cmp	r4, #65536
 323 0126 01D0     		beq	.L14
 324 0128 0028     		cmp	r0, #0
 325 012a F2D1     		bne	.L15
 326              	.L14:
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 327              		.loc 1 222 0
 328 012c 002B     		cmp	r3, #0
 329 012e 54D1     		bne	.L25
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Configure the number of valid bits in last word of the Input data */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 330              		.loc 1 229 0
 331 0130 BDF80A00 		ldrh	r0, [sp, #10]
 332              	.LVL47:
 333 0134 80B2     		uxth	r0, r0
 334 0136 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 335              	.LVL48:
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Write the Input block in the IN FIFO */
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     for(i=0; i<Ilen; i+=4)
 336              		.loc 1 232 0
 337 013a 0024     		movs	r4, #0
 338 013c 04E0     		b	.L17
 339              	.LVL49:
 340              	.L18:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 341              		.loc 1 234 0 discriminator 2
 342 013e 56F8040B 		ldr	r0, [r6], #4
 343              	.LVL50:
 344 0142 FFF7FEFF 		bl	HASH_DataIn
 345              	.LVL51:
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     for(i=0; i<Ilen; i+=4)
 346              		.loc 1 232 0 discriminator 2
 347 0146 0434     		adds	r4, r4, #4
 348              	.LVL52:
 349              	.L17:
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     for(i=0; i<Ilen; i+=4)
 350              		.loc 1 232 0 is_stmt 0 discriminator 1
 351 0148 BC42     		cmp	r4, r7
 352 014a F8D3     		bcc	.L18
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       inputaddr+=4;
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Start the HASH processor */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_StartDigest();
 353              		.loc 1 239 0 is_stmt 1
 354 014c FFF7FEFF 		bl	HASH_StartDigest
 355              	.LVL53:
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* wait until the Busy flag is RESET */
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter =0;
 356              		.loc 1 242 0
 357 0150 0023     		movs	r3, #0
 358 0152 0193     		str	r3, [sp, #4]
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     do
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 359              		.loc 1 245 0
 360 0154 0824     		movs	r4, #8
 361              	.LVL54:
 362              	.L20:
 363              		.loc 1 245 0 is_stmt 0 discriminator 1
 364 0156 2046     		mov	r0, r4
 365 0158 FFF7FEFF 		bl	HASH_GetFlagStatus
 366              	.LVL55:
 367 015c 0246     		mov	r2, r0
 368              	.LVL56:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        counter++;
 369              		.loc 1 246 0 is_stmt 1 discriminator 1
 370 015e 019B     		ldr	r3, [sp, #4]
 371 0160 0133     		adds	r3, r3, #1
 372 0162 0193     		str	r3, [sp, #4]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 373              		.loc 1 247 0 discriminator 1
 374 0164 019B     		ldr	r3, [sp, #4]
 375 0166 B3F5803F 		cmp	r3, #65536
 376 016a 01D0     		beq	.L19
 377 016c 0028     		cmp	r0, #0
 378 016e F2D1     		bne	.L20
 379              	.L19:
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     if (busystatus != RESET)
 380              		.loc 1 249 0
 381 0170 002A     		cmp	r2, #0
 382 0172 34D1     		bne	.L26
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       status = ERROR;
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     else
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {  
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       /* Configure the number of valid bits in last word of the Key */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 383              		.loc 1 256 0
 384 0174 BDF80800 		ldrh	r0, [sp, #8]
 385              	.LVL57:
 386 0178 80B2     		uxth	r0, r0
 387 017a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 388              	.LVL58:
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       /* Write the Key */
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       keyaddr = (uint32_t)Key;
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 389              		.loc 1 260 0
 390 017e 0024     		movs	r4, #0
 391 0180 04E0     		b	.L21
 392              	.LVL59:
 393              	.L22:
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 394              		.loc 1 262 0 discriminator 2
 395 0182 58F8040B 		ldr	r0, [r8], #4
 396              	.LVL60:
 397 0186 FFF7FEFF 		bl	HASH_DataIn
 398              	.LVL61:
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 399              		.loc 1 260 0 discriminator 2
 400 018a 0434     		adds	r4, r4, #4
 401              	.LVL62:
 402              	.L21:
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 403              		.loc 1 260 0 is_stmt 0 discriminator 1
 404 018c AC42     		cmp	r4, r5
 405 018e F8D3     		bcc	.L22
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****         keyaddr+=4;
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        /* Start the HASH processor */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        HASH_StartDigest();
 406              		.loc 1 267 0 is_stmt 1
 407 0190 FFF7FEFF 		bl	HASH_StartDigest
 408              	.LVL63:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        /* wait until the Busy flag is RESET */
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        counter =0;
 409              		.loc 1 270 0
 410 0194 0023     		movs	r3, #0
 411 0196 0193     		str	r3, [sp, #4]
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        do
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        {
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****           busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 412              		.loc 1 273 0
 413 0198 0824     		movs	r4, #8
 414              	.LVL64:
 415              	.L24:
 416              		.loc 1 273 0 is_stmt 0 discriminator 1
 417 019a 2046     		mov	r0, r4
 418 019c FFF7FEFF 		bl	HASH_GetFlagStatus
 419              	.LVL65:
 420 01a0 0246     		mov	r2, r0
 421              	.LVL66:
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****           counter++;
 422              		.loc 1 274 0 is_stmt 1 discriminator 1
 423 01a2 019B     		ldr	r3, [sp, #4]
 424 01a4 0133     		adds	r3, r3, #1
 425 01a6 0193     		str	r3, [sp, #4]
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 426              		.loc 1 275 0 discriminator 1
 427 01a8 019B     		ldr	r3, [sp, #4]
 428 01aa B3F5803F 		cmp	r3, #65536
 429 01ae 01D0     		beq	.L23
 430 01b0 0028     		cmp	r0, #0
 431 01b2 F2D1     		bne	.L24
 432              	.L23:
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       if (busystatus != RESET)
 433              		.loc 1 277 0
 434 01b4 AAB9     		cbnz	r2, .L27
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          status = ERROR;
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       else
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          /* Read the message digest */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          HASH_GetDigest(&MD5_MessageDigest);
 435              		.loc 1 284 0
 436 01b6 03A8     		add	r0, sp, #12
 437              	.LVL67:
 438 01b8 FFF7FEFF 		bl	HASH_GetDigest
 439              	.LVL68:
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 440              		.loc 1 285 0
 441 01bc 039B     		ldr	r3, [sp, #12]
 442              	.LVL69:
 443              	.LBB26:
 444              	.LBB27:
 445              		.loc 2 352 0
 446              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 447 01be 1BBA     		rev r3, r3
 448              	@ 0 "" 2
 449              	.LVL70:
 450              		.thumb
 451              	.LBE27:
 452              	.LBE26:
 453              		.loc 1 285 0
 454 01c0 149A     		ldr	r2, [sp, #80]
 455 01c2 1360     		str	r3, [r2]
 456              	.LVL71:
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 457              		.loc 1 287 0
 458 01c4 049B     		ldr	r3, [sp, #16]
 459              	.LVL72:
 460              	.LBB28:
 461              	.LBB29:
 462              		.loc 2 352 0
 463              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 464 01c6 1BBA     		rev r3, r3
 465              	@ 0 "" 2
 466              	.LVL73:
 467              		.thumb
 468              	.LBE29:
 469              	.LBE28:
 470              		.loc 1 287 0
 471 01c8 5360     		str	r3, [r2, #4]
 472              	.LVL74:
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 473              		.loc 1 289 0
 474 01ca 059B     		ldr	r3, [sp, #20]
 475              	.LVL75:
 476              	.LBB30:
 477              	.LBB31:
 478              		.loc 2 352 0
 479              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 480 01cc 1BBA     		rev r3, r3
 481              	@ 0 "" 2
 482              	.LVL76:
 483              		.thumb
 484              	.LBE31:
 485              	.LBE30:
 486              		.loc 1 289 0
 487 01ce 9360     		str	r3, [r2, #8]
 488              	.LVL77:
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 489              		.loc 1 291 0
 490 01d0 069B     		ldr	r3, [sp, #24]
 491              	.LVL78:
 492              	.LBB32:
 493              	.LBB33:
 494              		.loc 2 352 0
 495              	@ 352 "C:\Users\Filip\Git\STM32F4Discovery\Eclipse\WattMetr\CMSIS\Include/core_cmInstr.h" 1
 496 01d2 1BBA     		rev r3, r3
 497              	@ 0 "" 2
 498              	.LVL79:
 499              		.thumb
 500              	.LBE33:
 501              	.LBE32:
 502              		.loc 1 291 0
 503 01d4 D360     		str	r3, [r2, #12]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
 504              		.loc 1 172 0
 505 01d6 0120     		movs	r0, #1
 506 01d8 04E0     		b	.L16
 507              	.LVL80:
 508              	.L25:
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 509              		.loc 1 224 0
 510 01da 0020     		movs	r0, #0
 511              	.LVL81:
 512 01dc 02E0     		b	.L16
 513              	.LVL82:
 514              	.L26:
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       status = ERROR;
 515              		.loc 1 251 0
 516 01de 0020     		movs	r0, #0
 517              	.LVL83:
 518 01e0 00E0     		b	.L16
 519              	.LVL84:
 520              	.L27:
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          status = ERROR;
 521              		.loc 1 279 0
 522 01e2 0020     		movs	r0, #0
 523              	.LVL85:
 524              	.L16:
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   return status;  
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** }
 525              		.loc 1 296 0
 526 01e4 0DB0     		add	sp, sp, #52
 527              		@ sp needed
 528 01e6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 529              		.cfi_endproc
 530              	.LFE111:
 532              	.Letext0:
 533              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\mach
 534              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\stdi
 535              		.file 5 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\STM32F4xx\\Include/stm32f4xx.
 536              		.file 6 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\STM32F4xx_StdPeriph_Driver\\i
 537              		.file 7 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_md5.c
C:\Users\Filip\AppData\Local\Temp\ccMUVFBK.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\ccMUVFBK.s:23     .text:00000000 HASH_MD5
C:\Users\Filip\AppData\Local\Temp\ccMUVFBK.s:208    .text:00000098 HMAC_MD5
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1c01c98cf54d5aaab4df87c6bb476f00
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_hash.h.89.9ba18c49c32633e81d41c07ca4cb2830

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
