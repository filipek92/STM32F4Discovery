   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	DAC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	DAC_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  26              		.loc 1 175 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  34              		.loc 1 177 0
  35 0002 4FF00050 		mov	r0, #536870912
  36 0006 0121     		movs	r1, #1
  37 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  38              	.LVL0:
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  39              		.loc 1 179 0
  40 000c 4FF00050 		mov	r0, #536870912
  41 0010 0021     		movs	r1, #0
  42 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  43              	.LVL1:
  44 0016 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE110:
  48              		.align	2
  49              		.global	DAC_Init
  50              		.thumb
  51              		.thumb_func
  53              	DAC_Init:
  54              	.LFB111:
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  55              		.loc 1 194 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
  61 0018 30B4     		push	{r4, r5}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 5, -4
  65              	.LVL3:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  66              		.loc 1 205 0
  67 001a 0A4B     		ldr	r3, .L3
  68 001c 1A68     		ldr	r2, [r3]
  69              	.LVL4:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  70              		.loc 1 207 0
  71 001e 40F6FE75 		movw	r5, #4094
  72 0022 8540     		lsls	r5, r5, r0
  73 0024 22EA0505 		bic	r5, r2, r5
  74              	.LVL5:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  75              		.loc 1 214 0
  76 0028 0C68     		ldr	r4, [r1]
  77 002a 4A68     		ldr	r2, [r1, #4]
  78 002c 1443     		orrs	r4, r4, r2
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  79              		.loc 1 215 0
  80 002e 8A68     		ldr	r2, [r1, #8]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  81              		.loc 1 214 0
  82 0030 2243     		orrs	r2, r2, r4
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
  83              		.loc 1 216 0
  84 0032 C968     		ldr	r1, [r1, #12]
  85              	.LVL6:
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  86              		.loc 1 214 0
  87 0034 0A43     		orrs	r2, r2, r1
  88              	.LVL7:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
  89              		.loc 1 218 0
  90 0036 02FA00F0 		lsl	r0, r2, r0
  91              	.LVL8:
  92 003a 2843     		orrs	r0, r0, r5
  93              	.LVL9:
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
  94              		.loc 1 220 0
  95 003c 1860     		str	r0, [r3]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  96              		.loc 1 221 0
  97 003e 30BC     		pop	{r4, r5}
  98 0040 7047     		bx	lr
  99              	.L4:
 100 0042 00BF     		.align	2
 101              	.L3:
 102 0044 00740040 		.word	1073771520
 103              		.cfi_endproc
 104              	.LFE111:
 106              		.align	2
 107              		.global	DAC_StructInit
 108              		.thumb
 109              		.thumb_func
 111              	DAC_StructInit:
 112              	.LFB112:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 113              		.loc 1 230 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL10:
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 119              		.loc 1 233 0
 120 0048 0023     		movs	r3, #0
 121 004a 0360     		str	r3, [r0]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 122              		.loc 1 235 0
 123 004c 4360     		str	r3, [r0, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 124              		.loc 1 237 0
 125 004e 8360     		str	r3, [r0, #8]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 126              		.loc 1 239 0
 127 0050 C360     		str	r3, [r0, #12]
 128 0052 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE112:
 132              		.align	2
 133              		.global	DAC_Cmd
 134              		.thumb
 135              		.thumb_func
 137              	DAC_Cmd:
 138              	.LFB113:
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 139              		.loc 1 254 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL11:
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 145              		.loc 1 259 0
 146 0054 39B1     		cbz	r1, .L7
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 147              		.loc 1 262 0
 148 0056 084B     		ldr	r3, .L9
 149 0058 1A68     		ldr	r2, [r3]
 150 005a 0121     		movs	r1, #1
 151              	.LVL12:
 152 005c 01FA00F0 		lsl	r0, r1, r0
 153              	.LVL13:
 154 0060 1043     		orrs	r0, r0, r2
 155 0062 1860     		str	r0, [r3]
 156 0064 7047     		bx	lr
 157              	.LVL14:
 158              	.L7:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 159              		.loc 1 267 0
 160 0066 044B     		ldr	r3, .L9
 161 0068 1A68     		ldr	r2, [r3]
 162 006a 0121     		movs	r1, #1
 163              	.LVL15:
 164 006c 01FA00F0 		lsl	r0, r1, r0
 165              	.LVL16:
 166 0070 22EA0000 		bic	r0, r2, r0
 167 0074 1860     		str	r0, [r3]
 168 0076 7047     		bx	lr
 169              	.L10:
 170              		.align	2
 171              	.L9:
 172 0078 00740040 		.word	1073771520
 173              		.cfi_endproc
 174              	.LFE113:
 176              		.align	2
 177              		.global	DAC_SoftwareTriggerCmd
 178              		.thumb
 179              		.thumb_func
 181              	DAC_SoftwareTriggerCmd:
 182              	.LFB114:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 183              		.loc 1 282 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL17:
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 189              		.loc 1 287 0
 190 007c 41B1     		cbz	r1, .L12
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 191              		.loc 1 290 0
 192 007e 094B     		ldr	r3, .L14
 193 0080 5A68     		ldr	r2, [r3, #4]
 194 0082 0009     		lsrs	r0, r0, #4
 195              	.LVL18:
 196 0084 0121     		movs	r1, #1
 197              	.LVL19:
 198 0086 01FA00F0 		lsl	r0, r1, r0
 199 008a 1043     		orrs	r0, r0, r2
 200 008c 5860     		str	r0, [r3, #4]
 201 008e 7047     		bx	lr
 202              	.LVL20:
 203              	.L12:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 204              		.loc 1 295 0
 205 0090 044B     		ldr	r3, .L14
 206 0092 5A68     		ldr	r2, [r3, #4]
 207 0094 0009     		lsrs	r0, r0, #4
 208              	.LVL21:
 209 0096 0121     		movs	r1, #1
 210              	.LVL22:
 211 0098 01FA00F0 		lsl	r0, r1, r0
 212 009c 22EA0000 		bic	r0, r2, r0
 213 00a0 5860     		str	r0, [r3, #4]
 214 00a2 7047     		bx	lr
 215              	.L15:
 216              		.align	2
 217              	.L14:
 218 00a4 00740040 		.word	1073771520
 219              		.cfi_endproc
 220              	.LFE114:
 222              		.align	2
 223              		.global	DAC_DualSoftwareTriggerCmd
 224              		.thumb
 225              		.thumb_func
 227              	DAC_DualSoftwareTriggerCmd:
 228              	.LFB115:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 229              		.loc 1 306 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL23:
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 235              		.loc 1 310 0
 236 00a8 28B1     		cbz	r0, .L17
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 237              		.loc 1 313 0
 238 00aa 064B     		ldr	r3, .L19
 239 00ac 5A68     		ldr	r2, [r3, #4]
 240 00ae 42F00302 		orr	r2, r2, #3
 241 00b2 5A60     		str	r2, [r3, #4]
 242 00b4 7047     		bx	lr
 243              	.L17:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 244              		.loc 1 318 0
 245 00b6 034B     		ldr	r3, .L19
 246 00b8 5A68     		ldr	r2, [r3, #4]
 247 00ba 22F00302 		bic	r2, r2, #3
 248 00be 5A60     		str	r2, [r3, #4]
 249 00c0 7047     		bx	lr
 250              	.L20:
 251 00c2 00BF     		.align	2
 252              	.L19:
 253 00c4 00740040 		.word	1073771520
 254              		.cfi_endproc
 255              	.LFE115:
 257              		.align	2
 258              		.global	DAC_WaveGenerationCmd
 259              		.thumb
 260              		.thumb_func
 262              	DAC_WaveGenerationCmd:
 263              	.LFB116:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 264              		.loc 1 337 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL24:
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 270              		.loc 1 343 0
 271 00c8 3AB1     		cbz	r2, .L22
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 272              		.loc 1 346 0
 273 00ca 074B     		ldr	r3, .L24
 274 00cc 1A68     		ldr	r2, [r3]
 275              	.LVL25:
 276 00ce 01FA00F0 		lsl	r0, r1, r0
 277              	.LVL26:
 278 00d2 42EA0001 		orr	r1, r2, r0
 279              	.LVL27:
 280 00d6 1960     		str	r1, [r3]
 281 00d8 7047     		bx	lr
 282              	.LVL28:
 283              	.L22:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 284              		.loc 1 351 0
 285 00da 034B     		ldr	r3, .L24
 286 00dc 1A68     		ldr	r2, [r3]
 287              	.LVL29:
 288 00de 8140     		lsls	r1, r1, r0
 289              	.LVL30:
 290 00e0 22EA0101 		bic	r1, r2, r1
 291 00e4 1960     		str	r1, [r3]
 292 00e6 7047     		bx	lr
 293              	.L25:
 294              		.align	2
 295              	.L24:
 296 00e8 00740040 		.word	1073771520
 297              		.cfi_endproc
 298              	.LFE116:
 300              		.align	2
 301              		.global	DAC_SetChannel1Data
 302              		.thumb
 303              		.thumb_func
 305              	DAC_SetChannel1Data:
 306              	.LFB117:
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 307              		.loc 1 366 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL31:
 313 00ec 82B0     		sub	sp, sp, #8
 314              		.cfi_def_cfa_offset 8
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 315              		.loc 1 367 0
 316 00ee 0023     		movs	r3, #0
 317 00f0 0193     		str	r3, [sp, #4]
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 318              		.loc 1 373 0
 319 00f2 054B     		ldr	r3, .L27
 320 00f4 0193     		str	r3, [sp, #4]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 321              		.loc 1 374 0
 322 00f6 019B     		ldr	r3, [sp, #4]
 323 00f8 1844     		add	r0, r0, r3
 324              	.LVL32:
 325 00fa 00F10803 		add	r3, r0, #8
 326 00fe 0193     		str	r3, [sp, #4]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 327              		.loc 1 377 0
 328 0100 019B     		ldr	r3, [sp, #4]
 329 0102 1960     		str	r1, [r3]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 330              		.loc 1 378 0
 331 0104 02B0     		add	sp, sp, #8
 332              		@ sp needed
 333 0106 7047     		bx	lr
 334              	.L28:
 335              		.align	2
 336              	.L27:
 337 0108 00740040 		.word	1073771520
 338              		.cfi_endproc
 339              	.LFE117:
 341              		.align	2
 342              		.global	DAC_SetChannel2Data
 343              		.thumb
 344              		.thumb_func
 346              	DAC_SetChannel2Data:
 347              	.LFB118:
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 348              		.loc 1 391 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL33:
 354 010c 82B0     		sub	sp, sp, #8
 355              		.cfi_def_cfa_offset 8
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 356              		.loc 1 392 0
 357 010e 0023     		movs	r3, #0
 358 0110 0193     		str	r3, [sp, #4]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 359              		.loc 1 398 0
 360 0112 054B     		ldr	r3, .L30
 361 0114 0193     		str	r3, [sp, #4]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 362              		.loc 1 399 0
 363 0116 019B     		ldr	r3, [sp, #4]
 364 0118 1844     		add	r0, r0, r3
 365              	.LVL34:
 366 011a 00F11403 		add	r3, r0, #20
 367 011e 0193     		str	r3, [sp, #4]
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 368              		.loc 1 402 0
 369 0120 019B     		ldr	r3, [sp, #4]
 370 0122 1960     		str	r1, [r3]
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 371              		.loc 1 403 0
 372 0124 02B0     		add	sp, sp, #8
 373              		@ sp needed
 374 0126 7047     		bx	lr
 375              	.L31:
 376              		.align	2
 377              	.L30:
 378 0128 00740040 		.word	1073771520
 379              		.cfi_endproc
 380              	.LFE118:
 382              		.align	2
 383              		.global	DAC_SetDualChannelData
 384              		.thumb
 385              		.thumb_func
 387              	DAC_SetDualChannelData:
 388              	.LFB119:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 389              		.loc 1 419 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              	.LVL35:
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 395              		.loc 1 428 0
 396 012c 0828     		cmp	r0, #8
 397 012e 02D1     		bne	.L33
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 398              		.loc 1 430 0
 399 0130 42EA0121 		orr	r1, r2, r1, lsl #8
 400              	.LVL36:
 401 0134 01E0     		b	.L34
 402              	.LVL37:
 403              	.L33:
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 404              		.loc 1 434 0
 405 0136 42EA0141 		orr	r1, r2, r1, lsl #16
 406              	.LVL38:
 407              	.L34:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 408              		.loc 1 438 0
 409 013a 014B     		ldr	r3, .L35
 410              	.LVL39:
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 411              		.loc 1 441 0
 412 013c C150     		str	r1, [r0, r3]
 413 013e 7047     		bx	lr
 414              	.L36:
 415              		.align	2
 416              	.L35:
 417 0140 20740040 		.word	1073771552
 418              		.cfi_endproc
 419              	.LFE119:
 421              		.align	2
 422              		.global	DAC_GetDataOutputValue
 423              		.thumb
 424              		.thumb_func
 426              	DAC_GetDataOutputValue:
 427              	.LFB120:
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 428              		.loc 1 453 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433              	.LVL40:
 434 0144 82B0     		sub	sp, sp, #8
 435              		.cfi_def_cfa_offset 8
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 436              		.loc 1 454 0
 437 0146 0023     		movs	r3, #0
 438 0148 0193     		str	r3, [sp, #4]
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 439              		.loc 1 459 0
 440 014a 064B     		ldr	r3, .L38
 441 014c 0193     		str	r3, [sp, #4]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 442              		.loc 1 460 0
 443 014e 019B     		ldr	r3, [sp, #4]
 444 0150 03EB9000 		add	r0, r3, r0, lsr #2
 445              	.LVL41:
 446 0154 00F12C03 		add	r3, r0, #44
 447 0158 0193     		str	r3, [sp, #4]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 448              		.loc 1 463 0
 449 015a 019B     		ldr	r3, [sp, #4]
 450 015c 1868     		ldr	r0, [r3]
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 451              		.loc 1 464 0
 452 015e 80B2     		uxth	r0, r0
 453 0160 02B0     		add	sp, sp, #8
 454              		@ sp needed
 455 0162 7047     		bx	lr
 456              	.L39:
 457              		.align	2
 458              	.L38:
 459 0164 00740040 		.word	1073771520
 460              		.cfi_endproc
 461              	.LFE120:
 463              		.align	2
 464              		.global	DAC_DMACmd
 465              		.thumb
 466              		.thumb_func
 468              	DAC_DMACmd:
 469              	.LFB121:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 470              		.loc 1 498 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL42:
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 476              		.loc 1 503 0
 477 0168 41B1     		cbz	r1, .L41
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 478              		.loc 1 506 0
 479 016a 094B     		ldr	r3, .L43
 480 016c 1A68     		ldr	r2, [r3]
 481 016e 4FF48051 		mov	r1, #4096
 482              	.LVL43:
 483 0172 01FA00F0 		lsl	r0, r1, r0
 484              	.LVL44:
 485 0176 1043     		orrs	r0, r0, r2
 486 0178 1860     		str	r0, [r3]
 487 017a 7047     		bx	lr
 488              	.LVL45:
 489              	.L41:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 490              		.loc 1 511 0
 491 017c 044B     		ldr	r3, .L43
 492 017e 1A68     		ldr	r2, [r3]
 493 0180 4FF48051 		mov	r1, #4096
 494              	.LVL46:
 495 0184 01FA00F0 		lsl	r0, r1, r0
 496              	.LVL47:
 497 0188 22EA0000 		bic	r0, r2, r0
 498 018c 1860     		str	r0, [r3]
 499 018e 7047     		bx	lr
 500              	.L44:
 501              		.align	2
 502              	.L43:
 503 0190 00740040 		.word	1073771520
 504              		.cfi_endproc
 505              	.LFE121:
 507              		.align	2
 508              		.global	DAC_ITConfig
 509              		.thumb
 510              		.thumb_func
 512              	DAC_ITConfig:
 513              	.LFB122:
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 514              		.loc 1 546 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL48:
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 520              		.loc 1 552 0
 521 0194 3AB1     		cbz	r2, .L46
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 522              		.loc 1 555 0
 523 0196 074B     		ldr	r3, .L48
 524 0198 1A68     		ldr	r2, [r3]
 525              	.LVL49:
 526 019a 01FA00F0 		lsl	r0, r1, r0
 527              	.LVL50:
 528 019e 42EA0001 		orr	r1, r2, r0
 529              	.LVL51:
 530 01a2 1960     		str	r1, [r3]
 531 01a4 7047     		bx	lr
 532              	.LVL52:
 533              	.L46:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 534              		.loc 1 560 0
 535 01a6 034B     		ldr	r3, .L48
 536 01a8 1A68     		ldr	r2, [r3]
 537              	.LVL53:
 538 01aa 8140     		lsls	r1, r1, r0
 539              	.LVL54:
 540 01ac 22EA0101 		bic	r1, r2, r1
 541 01b0 1960     		str	r1, [r3]
 542 01b2 7047     		bx	lr
 543              	.L49:
 544              		.align	2
 545              	.L48:
 546 01b4 00740040 		.word	1073771520
 547              		.cfi_endproc
 548              	.LFE122:
 550              		.align	2
 551              		.global	DAC_GetFlagStatus
 552              		.thumb
 553              		.thumb_func
 555              	DAC_GetFlagStatus:
 556              	.LFB123:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 557              		.loc 1 578 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL55:
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 563              		.loc 1 585 0
 564 01b8 044B     		ldr	r3, .L53
 565 01ba 5B6B     		ldr	r3, [r3, #52]
 566 01bc 8140     		lsls	r1, r1, r0
 567              	.LVL56:
 568 01be 0B42     		tst	r3, r1
 569 01c0 01D0     		beq	.L52
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 570              		.loc 1 588 0
 571 01c2 0120     		movs	r0, #1
 572              	.LVL57:
 573 01c4 7047     		bx	lr
 574              	.LVL58:
 575              	.L52:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 576              		.loc 1 593 0
 577 01c6 0020     		movs	r0, #0
 578              	.LVL59:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 579              		.loc 1 597 0
 580 01c8 7047     		bx	lr
 581              	.L54:
 582 01ca 00BF     		.align	2
 583              	.L53:
 584 01cc 00740040 		.word	1073771520
 585              		.cfi_endproc
 586              	.LFE123:
 588              		.align	2
 589              		.global	DAC_ClearFlag
 590              		.thumb
 591              		.thumb_func
 593              	DAC_ClearFlag:
 594              	.LFB124:
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 595              		.loc 1 613 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL60:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 601              		.loc 1 619 0
 602 01d0 8140     		lsls	r1, r1, r0
 603              	.LVL61:
 604 01d2 014B     		ldr	r3, .L56
 605 01d4 5963     		str	r1, [r3, #52]
 606 01d6 7047     		bx	lr
 607              	.L57:
 608              		.align	2
 609              	.L56:
 610 01d8 00740040 		.word	1073771520
 611              		.cfi_endproc
 612              	.LFE124:
 614              		.align	2
 615              		.global	DAC_GetITStatus
 616              		.thumb
 617              		.thumb_func
 619              	DAC_GetITStatus:
 620              	.LFB125:
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 621              		.loc 1 636 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626              	.LVL62:
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 627              		.loc 1 645 0
 628 01dc 064B     		ldr	r3, .L62
 629 01de 1A68     		ldr	r2, [r3]
 630 01e0 8140     		lsls	r1, r1, r0
 631              	.LVL63:
 632 01e2 0A40     		ands	r2, r2, r1
 633              	.LVL64:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 634              		.loc 1 648 0
 635 01e4 5B6B     		ldr	r3, [r3, #52]
 636 01e6 1942     		tst	r1, r3
 637 01e8 02D0     		beq	.L60
 638              		.loc 1 648 0 is_stmt 0 discriminator 1
 639 01ea 1AB9     		cbnz	r2, .L61
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 640              		.loc 1 656 0 is_stmt 1
 641 01ec 0020     		movs	r0, #0
 642              	.LVL65:
 643 01ee 7047     		bx	lr
 644              	.LVL66:
 645              	.L60:
 646 01f0 0020     		movs	r0, #0
 647              	.LVL67:
 648 01f2 7047     		bx	lr
 649              	.LVL68:
 650              	.L61:
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 651              		.loc 1 651 0
 652 01f4 0120     		movs	r0, #1
 653              	.LVL69:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 654              		.loc 1 660 0
 655 01f6 7047     		bx	lr
 656              	.L63:
 657              		.align	2
 658              	.L62:
 659 01f8 00740040 		.word	1073771520
 660              		.cfi_endproc
 661              	.LFE125:
 663              		.align	2
 664              		.global	DAC_ClearITPendingBit
 665              		.thumb
 666              		.thumb_func
 668              	DAC_ClearITPendingBit:
 669              	.LFB126:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 670              		.loc 1 676 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675              	.LVL70:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 676              		.loc 1 682 0
 677 01fc 8140     		lsls	r1, r1, r0
 678              	.LVL71:
 679 01fe 014B     		ldr	r3, .L65
 680 0200 5963     		str	r1, [r3, #52]
 681 0202 7047     		bx	lr
 682              	.L66:
 683              		.align	2
 684              	.L65:
 685 0204 00740040 		.word	1073771520
 686              		.cfi_endproc
 687              	.LFE126:
 689              	.Letext0:
 690              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\mach
 691              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\stdi
 692              		.file 4 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\STM32F4xx\\Include/stm32f4xx.
 693              		.file 5 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\STM32F4xx_StdPeriph_Driver\\i
 694              		.file 6 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\CMSIS\\Include/core_cm4.h"
 695              		.file 7 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\WattMetr\\STM32F4xx_StdPeriph_Driver\\i
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:23     .text:00000000 DAC_DeInit
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:53     .text:00000018 DAC_Init
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:102    .text:00000044 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:106    .text:00000048 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:111    .text:00000048 DAC_StructInit
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:137    .text:00000054 DAC_Cmd
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:172    .text:00000078 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:176    .text:0000007c $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:181    .text:0000007c DAC_SoftwareTriggerCmd
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:218    .text:000000a4 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:222    .text:000000a8 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:227    .text:000000a8 DAC_DualSoftwareTriggerCmd
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:253    .text:000000c4 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:257    .text:000000c8 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:262    .text:000000c8 DAC_WaveGenerationCmd
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:296    .text:000000e8 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:300    .text:000000ec $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:305    .text:000000ec DAC_SetChannel1Data
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:337    .text:00000108 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:341    .text:0000010c $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:346    .text:0000010c DAC_SetChannel2Data
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:378    .text:00000128 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:382    .text:0000012c $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:387    .text:0000012c DAC_SetDualChannelData
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:417    .text:00000140 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:421    .text:00000144 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:426    .text:00000144 DAC_GetDataOutputValue
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:459    .text:00000164 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:463    .text:00000168 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:468    .text:00000168 DAC_DMACmd
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:503    .text:00000190 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:507    .text:00000194 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:512    .text:00000194 DAC_ITConfig
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:546    .text:000001b4 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:550    .text:000001b8 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:555    .text:000001b8 DAC_GetFlagStatus
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:584    .text:000001cc $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:588    .text:000001d0 $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:593    .text:000001d0 DAC_ClearFlag
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:610    .text:000001d8 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:614    .text:000001dc $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:619    .text:000001dc DAC_GetITStatus
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:659    .text:000001f8 $d
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:663    .text:000001fc $t
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:668    .text:000001fc DAC_ClearITPendingBit
C:\Users\Filip\AppData\Local\Temp\cc3JXT7i.s:685    .text:00000204 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1c01c98cf54d5aaab4df87c6bb476f00
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:00000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_dac.h.75.4f919957dc5d31ec63535c317a2ce634

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
