
Template.elf:     file format elf32-littlearm
Template.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080004f1

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00000540 memsz 0x00000540 flags r-x
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x08000540 align 2**15
         filesz 0x00000014 memsz 0x0000041c flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .isr_vector   00000188  08000000  08000000  00008000  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003b8  08000188  08000188  00008188  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .data         00000014  20000000  08000540  00010000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000008  20000014  08000554  00010014  2**2  ALLOC
  4 ._user_heap_stack 00000400  2000001c  0800055c  00010014  2**0  ALLOC
  5 .ARM.attributes 00000031  00000000  00000000  00010014  2**0  CONTENTS, READONLY
  6 .debug_info   00001328  00000000  00000000  00010045  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005f0  00000000  00000000  0001136d  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000028b  00000000  00000000  0001195d  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000000a8  00000000  00000000  00011be8  2**3  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0000d684  00000000  00000000  00011c90  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000015f2  00000000  00000000  0001f314  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000562e3  00000000  00000000  00020906  2**0  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000070  00000000  00000000  00076be9  2**0  CONTENTS, READONLY
 14 .debug_frame  000001f4  00000000  00000000  00076c5c  2**2  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000020  00000000  00000000  00076e50  2**3  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
08000188 l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000014 l    d  .bss	00000000 .bss
2000001c l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ./STM32F4xx/Source/startup_stm32f4xx.o
080004fe l       .text	00000000 LoopCopyDataInit
080004f6 l       .text	00000000 CopyDataInit
08000516 l       .text	00000000 LoopFillZerobss
08000510 l       .text	00000000 FillZerobss
0800053c l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 stm32f4xx_it.c
00000000 l    df *ABS*	00000000 system_stm32f4xx.c
0800024c l     F .text	000000c0 SetSysClock
00000000 l    df *ABS*	00000000 stm32f4xx_exti.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 _Min_Stack_Size
00000000 l       *ABS*	00000000 _Min_Heap_Size
0800053c  w    F .text	00000004 RTC_Alarm_IRQHandler
0800053c  w    F .text	00000004 HASH_RNG_IRQHandler
0800053c  w    F .text	00000004 EXTI2_IRQHandler
0800053c  w    F .text	00000004 TIM8_CC_IRQHandler
080001e0 g     F .text	00000002 DebugMon_Handler
0800053c  w    F .text	00000004 TIM1_CC_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream5_IRQHandler
080001cc g     F .text	00000002 HardFault_Handler
0800053c  w    F .text	00000004 DMA1_Stream5_IRQHandler
0800022c g     F .text	00000020 SysTick_Handler
0800053c  w    F .text	00000004 PVD_IRQHandler
0800053c  w    F .text	00000004 SDIO_IRQHandler
0800053c  w    F .text	00000004 TAMP_STAMP_IRQHandler
08000540 g       .text	00000000 _sidata
080001e4 g     F .text	00000002 PendSV_Handler
080001c8 g     F .text	00000002 NMI_Handler
08000540 g       .data	00000000 __exidx_end
0800053c  w    F .text	00000004 CAN2_RX1_IRQHandler
0800053c  w    F .text	00000004 EXTI3_IRQHandler
0800053c  w    F .text	00000004 TIM8_TRG_COM_TIM14_IRQHandler
0800053c  w    F .text	00000004 TIM1_UP_TIM10_IRQHandler
08000540 g       .text	00000000 _etext
20000014 g       .bss	00000000 _sbss
0800053c  w    F .text	00000004 TIM8_UP_TIM13_IRQHandler
0800053c  w    F .text	00000004 I2C3_ER_IRQHandler
080003dc g     F .text	0000001c EXTI_DeInit
080001e8 g     F .text	00000012 EXTI0_IRQHandler
0800053c  w    F .text	00000004 I2C2_EV_IRQHandler
0800053c  w    F .text	00000004 DMA1_Stream2_IRQHandler
0800053c  w    F .text	00000004 CAN1_RX0_IRQHandler
0800053c  w    F .text	00000004 FPU_IRQHandler
20000000 g     O .data	00000004 SystemCoreClock
0800053c  w    F .text	00000004 OTG_HS_WKUP_IRQHandler
080001d8 g     F .text	00000002 UsageFault_Handler
0800053c  w    F .text	00000004 CAN2_SCE_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream2_IRQHandler
20000014 g       .bss	00000000 __bss_start__
20000000 g       .data	00000000 _sdata
0800053c  w    F .text	00000004 SPI1_IRQHandler
0800053c  w    F .text	00000004 TIM6_DAC_IRQHandler
0800053c  w    F .text	00000004 TIM1_BRK_TIM9_IRQHandler
0800053c  w    F .text	00000004 DCMI_IRQHandler
0800053c  w    F .text	00000004 CAN2_RX0_IRQHandler
08000540 g       .data	00000000 __exidx_start
0800053c  w    F .text	00000004 DMA2_Stream3_IRQHandler
0800053c  w    F .text	00000004 USART6_IRQHandler
0800053c  w    F .text	00000004 USART3_IRQHandler
080004e4 g     F .text	0000000c EXTI_ClearITPendingBit
20000014 g     O .bss	00000004 TimingDelay
0800053c  w    F .text	00000004 CRYP_IRQHandler
2000001c g       .bss	00000000 _ebss
080004f0  w    F .text	00000038 Reset_Handler
0800053c  w    F .text	00000004 CAN1_RX1_IRQHandler
0800053c  w    F .text	00000004 UART5_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream0_IRQHandler
0800053c  w    F .text	00000004 TIM4_IRQHandler
080004a8 g     F .text	00000014 EXTI_GetFlagStatus
0800053c  w    F .text	00000004 I2C1_EV_IRQHandler
0800053c  w    F .text	00000004 DMA1_Stream6_IRQHandler
0800053c  w    F .text	00000004 DMA1_Stream1_IRQHandler
0800053c  w    F .text	00000004 UART4_IRQHandler
08000498 g     F .text	00000010 EXTI_GenerateSWInterrupt
2000001c g       .bss	00000000 __bss_end__
0800053c  w    F .text	00000004 TIM3_IRQHandler
0800053c  w    F .text	00000004 RCC_IRQHandler
0800053c  w    F .text	00000004 TIM8_BRK_TIM12_IRQHandler
0800053c g       .text	00000004 Default_Handler
20000004 g     O .data	00000010 AHBPrescTable
080004bc g     F .text	0000000c EXTI_ClearFlag
0800053c  w    F .text	00000004 EXTI15_10_IRQHandler
0800053c  w    F .text	00000004 ADC_IRQHandler
080003f8 g     F .text	00000090 EXTI_Init
0800053c  w    F .text	00000004 DMA1_Stream7_IRQHandler
0800053c  w    F .text	00000004 TIM7_IRQHandler
0800053c  w    F .text	00000004 CAN2_TX_IRQHandler
0800053c  w    F .text	00000004 TIM5_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream7_IRQHandler
0800053c  w    F .text	00000004 I2C3_EV_IRQHandler
0800053c  w    F .text	00000004 EXTI9_5_IRQHandler
0800053c  w    F .text	00000004 RTC_WKUP_IRQHandler
0800053c  w    F .text	00000004 ETH_WKUP_IRQHandler
080004c8 g     F .text	0000001c EXTI_GetITStatus
0800053c  w    F .text	00000004 SPI2_IRQHandler
0800053c  w    F .text	00000004 OTG_HS_EP1_IN_IRQHandler
080001d0 g     F .text	00000002 MemManage_Handler
08000188 g     F .text	00000040 main
0800053c  w    F .text	00000004 DMA1_Stream0_IRQHandler
0800053c  w    F .text	00000004 CAN1_TX_IRQHandler
080001dc g     F .text	00000002 SVC_Handler
08000488 g     F .text	0000000e EXTI_StructInit
0800053c  w    F .text	00000004 EXTI4_IRQHandler
0800030c g     F .text	00000044 SystemInit
0800053c  w    F .text	00000004 FSMC_IRQHandler
0800053c  w    F .text	00000004 ETH_IRQHandler
0800053c  w    F .text	00000004 OTG_HS_EP1_OUT_IRQHandler
0800053c  w    F .text	00000004 WWDG_IRQHandler
080001fc g     F .text	0000001c Delay
0800053c  w    F .text	00000004 TIM2_IRQHandler
0800053c  w    F .text	00000004 OTG_FS_WKUP_IRQHandler
0800053c  w    F .text	00000004 TIM1_TRG_COM_TIM11_IRQHandler
0800053c  w    F .text	00000004 OTG_HS_IRQHandler
20020000 g       *ABS*	00000000 _estack
0800053c  w    F .text	00000004 EXTI1_IRQHandler
20000018 g     O .bss	00000004 Time
20000014 g       .data	00000000 _edata
0800053c  w    F .text	00000004 USART2_IRQHandler
08000000 g     O .isr_vector	00000000 g_pfnVectors
08000350 g     F .text	0000008c SystemCoreClockUpdate
0800053c  w    F .text	00000004 I2C2_ER_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream1_IRQHandler
08000218 g     F .text	00000014 TimingDelay_Decrement
0800053c  w    F .text	00000004 CAN1_SCE_IRQHandler
0800053c  w    F .text	00000004 FLASH_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream4_IRQHandler
080001d4 g     F .text	00000002 BusFault_Handler
0800053c  w    F .text	00000004 USART1_IRQHandler
0800053c  w    F .text	00000004 OTG_FS_IRQHandler
0800053c  w    F .text	00000004 SPI3_IRQHandler
0800053c  w    F .text	00000004 DMA1_Stream4_IRQHandler
0800053c  w    F .text	00000004 I2C1_ER_IRQHandler
0800053c  w    F .text	00000004 DMA2_Stream6_IRQHandler
0800053c  w    F .text	00000004 DMA1_Stream3_IRQHandler



Disassembly of section .text:

08000188 <main>:
main():
C:\Users\Filip\Eclipse\Template\Debug/../src/main.c:8

//extern volatile uint32_t Time;

int main(void)
{	
  SysTick_Config(SystemCoreClock/1000);
 8000188:	4b0a      	ldr	r3, [pc, #40]	; (80001b4 <main+0x2c>)
 800018a:	681a      	ldr	r2, [r3, #0]
 800018c:	4b0a      	ldr	r3, [pc, #40]	; (80001b8 <main+0x30>)
 800018e:	fba3 1202 	umull	r1, r2, r3, r2
SysTick_Config():
C:\Users\Filip\Eclipse\Template\CMSIS\Include/core_cm4.h:1285
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 8000192:	0992      	lsrs	r2, r2, #6
 8000194:	3a01      	subs	r2, #1
 8000196:	4b09      	ldr	r3, [pc, #36]	; (80001bc <main+0x34>)
 8000198:	605a      	str	r2, [r3, #4]
NVIC_SetPriority():
C:\Users\Filip\Eclipse\Template\CMSIS\Include/core_cm4.h:1159
    \param [in]  priority  Priority to set
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 800019a:	21f0      	movs	r1, #240	; 0xf0
 800019c:	4a08      	ldr	r2, [pc, #32]	; (80001c0 <main+0x38>)
 800019e:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
SysTick_Config():
C:\Users\Filip\Eclipse\Template\CMSIS\Include/core_cm4.h:1287
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 80001a2:	2200      	movs	r2, #0
 80001a4:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\CMSIS\Include/core_cm4.h:1288
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80001a6:	2207      	movs	r2, #7
 80001a8:	601a      	str	r2, [r3, #0]
main():
C:\Users\Filip\Eclipse\Template\Debug/../src/main.c:9
  GPIO_SetPin(GPIOC, GPIO_Pin_5);
 80001aa:	2220      	movs	r2, #32
 80001ac:	4b05      	ldr	r3, [pc, #20]	; (80001c4 <main+0x3c>)
 80001ae:	831a      	strh	r2, [r3, #24]
 80001b0:	e7fe      	b.n	80001b0 <main+0x28>
 80001b2:	bf00      	nop
 80001b4:	20000000 	.word	0x20000000
 80001b8:	10624dd3 	.word	0x10624dd3
 80001bc:	e000e010 	.word	0xe000e010
 80001c0:	e000ed00 	.word	0xe000ed00
 80001c4:	40020800 	.word	0x40020800

080001c8 <NMI_Handler>:
NMI_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:19
  * @brief   This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 80001c8:	4770      	bx	lr
 80001ca:	bf00      	nop

080001cc <HardFault_Handler>:
HardFault_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:29
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 80001cc:	e7fe      	b.n	80001cc <HardFault_Handler>
 80001ce:	bf00      	nop

080001d0 <MemManage_Handler>:
MemManage_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:43
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 80001d0:	e7fe      	b.n	80001d0 <MemManage_Handler>
 80001d2:	bf00      	nop

080001d4 <BusFault_Handler>:
BusFault_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:57
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 80001d4:	e7fe      	b.n	80001d4 <BusFault_Handler>
 80001d6:	bf00      	nop

080001d8 <UsageFault_Handler>:
UsageFault_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:71
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 80001d8:	e7fe      	b.n	80001d8 <UsageFault_Handler>
 80001da:	bf00      	nop

080001dc <SVC_Handler>:
SVC_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:85
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 80001dc:	4770      	bx	lr
 80001de:	bf00      	nop

080001e0 <DebugMon_Handler>:
DebugMon_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:95
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 80001e0:	4770      	bx	lr
 80001e2:	bf00      	nop

080001e4 <PendSV_Handler>:
PendSV_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:105
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 80001e4:	4770      	bx	lr
 80001e6:	bf00      	nop

080001e8 <EXTI0_IRQHandler>:
EXTI0_IRQHandler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:131
/*  available peripheral interrupt handler's name please refer to the startup */
/*  file (startup_stm32f4xx.s).                                               */
/******************************************************************************/

void EXTI0_IRQHandler(void)
{
 80001e8:	b508      	push	{r3, lr}
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:133
	uint32_t i;
  if(EXTI_GetITStatus(EXTI_Line0) != RESET)
 80001ea:	2001      	movs	r0, #1
 80001ec:	f000 f96c 	bl	80004c8 <EXTI_GetITStatus>
 80001f0:	b110      	cbz	r0, 80001f8 <EXTI0_IRQHandler+0x10>
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:135
  {
    EXTI_ClearITPendingBit(EXTI_Line0);
 80001f2:	2001      	movs	r0, #1
 80001f4:	f000 f976 	bl	80004e4 <EXTI_ClearITPendingBit>
 80001f8:	bd08      	pop	{r3, pc}
 80001fa:	bf00      	nop

080001fc <Delay>:
Delay():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:143

/******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
__IO uint32_t TimingDelay = 0;

void Delay(__IO uint32_t nTime)
{ 
 80001fc:	b082      	sub	sp, #8
 80001fe:	9001      	str	r0, [sp, #4]
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:144
  TimingDelay = nTime;
 8000200:	9a01      	ldr	r2, [sp, #4]
 8000202:	4b04      	ldr	r3, [pc, #16]	; (8000214 <Delay+0x18>)
 8000204:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:146

  while(TimingDelay != 0);
 8000206:	461a      	mov	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:146 (discriminator 1)
 8000208:	6813      	ldr	r3, [r2, #0]
 800020a:	2b00      	cmp	r3, #0
 800020c:	d1fc      	bne.n	8000208 <Delay+0xc>
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:147
}
 800020e:	b002      	add	sp, #8
 8000210:	4770      	bx	lr
 8000212:	bf00      	nop
 8000214:	20000014 	.word	0x20000014

08000218 <TimingDelay_Decrement>:
TimingDelay_Decrement():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:151

void TimingDelay_Decrement(void)
{
  if (TimingDelay != 0x00)
 8000218:	4b03      	ldr	r3, [pc, #12]	; (8000228 <TimingDelay_Decrement+0x10>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	b11b      	cbz	r3, 8000226 <TimingDelay_Decrement+0xe>
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:153
  { 
    TimingDelay--;
 800021e:	4b02      	ldr	r3, [pc, #8]	; (8000228 <TimingDelay_Decrement+0x10>)
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	3a01      	subs	r2, #1
 8000224:	601a      	str	r2, [r3, #0]
 8000226:	4770      	bx	lr
 8000228:	20000014 	.word	0x20000014

0800022c <SysTick_Handler>:
SysTick_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:115
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{  
 800022c:	b508      	push	{r3, lr}
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:116
  if (TimingDelay != 0x00)
 800022e:	4b05      	ldr	r3, [pc, #20]	; (8000244 <SysTick_Handler+0x18>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	b10b      	cbz	r3, 8000238 <SysTick_Handler+0xc>
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:118
  {
    TimingDelay_Decrement();
 8000234:	f7ff fff0 	bl	8000218 <TimingDelay_Decrement>
C:\Users\Filip\Eclipse\Template\Debug/../src/stm32f4xx_it.c:120
  }
	Time++;
 8000238:	4b03      	ldr	r3, [pc, #12]	; (8000248 <SysTick_Handler+0x1c>)
 800023a:	681a      	ldr	r2, [r3, #0]
 800023c:	3201      	adds	r2, #1
 800023e:	601a      	str	r2, [r3, #0]
 8000240:	bd08      	pop	{r3, pc}
 8000242:	bf00      	nop
 8000244:	20000014 	.word	0x20000014
 8000248:	20000018 	.word	0x20000018

0800024c <SetSysClock>:
SetSysClock():
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:334
  *         is reset to the default reset state (done in SystemInit() function).   
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 800024c:	b082      	sub	sp, #8
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:338
/******************************************************************************/
/*            PLL (clocked by HSE) used as System clock source                */
/******************************************************************************/
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 800024e:	2300      	movs	r3, #0
 8000250:	9301      	str	r3, [sp, #4]
 8000252:	9300      	str	r3, [sp, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:341
  
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8000254:	4b29      	ldr	r3, [pc, #164]	; (80002fc <SetSysClock+0xb0>)
 8000256:	681a      	ldr	r2, [r3, #0]
 8000258:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800025c:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:346
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 800025e:	461a      	mov	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:346 (discriminator 1)
 8000260:	6813      	ldr	r3, [r2, #0]
 8000262:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000266:	9300      	str	r3, [sp, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:347 (discriminator 1)
    StartUpCounter++;
 8000268:	9b01      	ldr	r3, [sp, #4]
 800026a:	3301      	adds	r3, #1
 800026c:	9301      	str	r3, [sp, #4]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:348 (discriminator 1)
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 800026e:	9b00      	ldr	r3, [sp, #0]
 8000270:	b91b      	cbnz	r3, 800027a <SetSysClock+0x2e>
 8000272:	9b01      	ldr	r3, [sp, #4]
 8000274:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8000278:	d1f2      	bne.n	8000260 <SetSysClock+0x14>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:350

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800027a:	4b20      	ldr	r3, [pc, #128]	; (80002fc <SetSysClock+0xb0>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:352
  {
    HSEStatus = (uint32_t)0x01;
 8000282:	bf14      	ite	ne
 8000284:	2301      	movne	r3, #1
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:356
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8000286:	2300      	moveq	r3, #0
 8000288:	9300      	str	r3, [sp, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:359
  }

  if (HSEStatus == (uint32_t)0x01)
 800028a:	9b00      	ldr	r3, [sp, #0]
 800028c:	2b01      	cmp	r3, #1
 800028e:	d132      	bne.n	80002f6 <SetSysClock+0xaa>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:362
  {
    /* Enable high performance mode, System frequency up to 168 MHz */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000290:	4b1a      	ldr	r3, [pc, #104]	; (80002fc <SetSysClock+0xb0>)
 8000292:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000294:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000298:	641a      	str	r2, [r3, #64]	; 0x40
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:363
    PWR->CR |= PWR_CR_PMODE;  
 800029a:	4a19      	ldr	r2, [pc, #100]	; (8000300 <SetSysClock+0xb4>)
 800029c:	6811      	ldr	r1, [r2, #0]
 800029e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80002a2:	6011      	str	r1, [r2, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:366

    /* HCLK = SYSCLK / 1*/
    RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 80002a4:	689a      	ldr	r2, [r3, #8]
 80002a6:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:369
      
    /* PCLK2 = HCLK / 2*/
    RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 80002a8:	689a      	ldr	r2, [r3, #8]
 80002aa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80002ae:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:372
    
    /* PCLK1 = HCLK / 4*/
    RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 80002b0:	689a      	ldr	r2, [r3, #8]
 80002b2:	f442 52a0 	orr.w	r2, r2, #5120	; 0x1400
 80002b6:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:375

    /* Configure the main PLL */
    RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 80002b8:	4a12      	ldr	r2, [pc, #72]	; (8000304 <SetSysClock+0xb8>)
 80002ba:	605a      	str	r2, [r3, #4]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:379
                   (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);

    /* Enable the main PLL */
    RCC->CR |= RCC_CR_PLLON;
 80002bc:	681a      	ldr	r2, [r3, #0]
 80002be:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80002c2:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:382

    /* Wait till the main PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 80002c4:	461a      	mov	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:382 (discriminator 1)
 80002c6:	6813      	ldr	r3, [r2, #0]
 80002c8:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80002cc:	d0fb      	beq.n	80002c6 <SetSysClock+0x7a>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:387
    {
    }
   
    /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
    FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 80002ce:	f240 6205 	movw	r2, #1541	; 0x605
 80002d2:	4b0d      	ldr	r3, [pc, #52]	; (8000308 <SetSysClock+0xbc>)
 80002d4:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:390

    /* Select the main PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80002d6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80002da:	689a      	ldr	r2, [r3, #8]
 80002dc:	f022 0203 	bic.w	r2, r2, #3
 80002e0:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:391
    RCC->CFGR |= RCC_CFGR_SW_PLL;
 80002e2:	689a      	ldr	r2, [r3, #8]
 80002e4:	f042 0202 	orr.w	r2, r2, #2
 80002e8:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:394

    /* Wait till the main PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 80002ea:	461a      	mov	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:394 (discriminator 1)
 80002ec:	6893      	ldr	r3, [r2, #8]
 80002ee:	f003 030c 	and.w	r3, r3, #12
 80002f2:	2b08      	cmp	r3, #8
 80002f4:	d1fa      	bne.n	80002ec <SetSysClock+0xa0>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:403
  else
  { /* If HSE fails to start-up, the application will have wrong clock
         configuration. User can add here some code to deal with this error */
  }

}
 80002f6:	b002      	add	sp, #8
 80002f8:	4770      	bx	lr
 80002fa:	bf00      	nop
 80002fc:	40023800 	.word	0x40023800
 8000300:	40007000 	.word	0x40007000
 8000304:	07405408 	.word	0x07405408
 8000308:	40023c00 	.word	0x40023c00

0800030c <SystemInit>:
SystemInit():
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:205
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800030c:	b508      	push	{r3, lr}
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:208
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800030e:	4b0d      	ldr	r3, [pc, #52]	; (8000344 <SystemInit+0x38>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	f042 0201 	orr.w	r2, r2, #1
 8000316:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:211

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8000318:	2100      	movs	r1, #0
 800031a:	6099      	str	r1, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:214

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8000322:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000326:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:217

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8000328:	4a07      	ldr	r2, [pc, #28]	; (8000348 <SystemInit+0x3c>)
 800032a:	605a      	str	r2, [r3, #4]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:220

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000332:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:223

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000334:	60d9      	str	r1, [r3, #12]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:231
  SystemInit_ExtMemCtl(); 
#endif /* DATA_IN_ExtSRAM */
         
  /* Configure the System clock source, PLL Multiplier and Divider factors, 
     AHB/APBx prescalers and Flash settings ----------------------------------*/
  SetSysClock();
 8000336:	f7ff ff89 	bl	800024c <SetSysClock>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:237

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800033a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800033e:	4b03      	ldr	r3, [pc, #12]	; (800034c <SystemInit+0x40>)
 8000340:	609a      	str	r2, [r3, #8]
 8000342:	bd08      	pop	{r3, pc}
 8000344:	40023800 	.word	0x40023800
 8000348:	24003010 	.word	0x24003010
 800034c:	e000ed00 	.word	0xe000ed00

08000350 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:282
void SystemCoreClockUpdate(void)
{
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8000350:	4b1e      	ldr	r3, [pc, #120]	; (80003cc <SystemCoreClockUpdate+0x7c>)
 8000352:	689b      	ldr	r3, [r3, #8]
 8000354:	f003 030c 	and.w	r3, r3, #12
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:284

  switch (tmp)
 8000358:	2b04      	cmp	r3, #4
 800035a:	d006      	beq.n	800036a <SystemCoreClockUpdate+0x1a>
 800035c:	2b08      	cmp	r3, #8
 800035e:	d008      	beq.n	8000372 <SystemCoreClockUpdate+0x22>
 8000360:	bb23      	cbnz	r3, 80003ac <SystemCoreClockUpdate+0x5c>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:287
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8000362:	4a1b      	ldr	r2, [pc, #108]	; (80003d0 <SystemCoreClockUpdate+0x80>)
 8000364:	4b1b      	ldr	r3, [pc, #108]	; (80003d4 <SystemCoreClockUpdate+0x84>)
 8000366:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:288
      break;
 8000368:	e023      	b.n	80003b2 <SystemCoreClockUpdate+0x62>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:290
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 800036a:	4a1b      	ldr	r2, [pc, #108]	; (80003d8 <SystemCoreClockUpdate+0x88>)
 800036c:	4b19      	ldr	r3, [pc, #100]	; (80003d4 <SystemCoreClockUpdate+0x84>)
 800036e:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:291
      break;
 8000370:	e01f      	b.n	80003b2 <SystemCoreClockUpdate+0x62>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:297
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8000372:	4b16      	ldr	r3, [pc, #88]	; (80003cc <SystemCoreClockUpdate+0x7c>)
 8000374:	6859      	ldr	r1, [r3, #4]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:298
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8000376:	685b      	ldr	r3, [r3, #4]
 8000378:	f003 033f 	and.w	r3, r3, #63	; 0x3f
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:300
      
      if (pllsource != 0)
 800037c:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:303
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8000380:	bf14      	ite	ne
 8000382:	4a15      	ldrne	r2, [pc, #84]	; (80003d8 <SystemCoreClockUpdate+0x88>)
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:308
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 8000384:	4a12      	ldreq	r2, [pc, #72]	; (80003d0 <SystemCoreClockUpdate+0x80>)
 8000386:	fbb2 f3f3 	udiv	r3, r2, r3
 800038a:	4a10      	ldr	r2, [pc, #64]	; (80003cc <SystemCoreClockUpdate+0x7c>)
 800038c:	6852      	ldr	r2, [r2, #4]
 800038e:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8000392:	fb02 f203 	mul.w	r2, r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:311
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8000396:	4b0d      	ldr	r3, [pc, #52]	; (80003cc <SystemCoreClockUpdate+0x7c>)
 8000398:	685b      	ldr	r3, [r3, #4]
 800039a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800039e:	3301      	adds	r3, #1
 80003a0:	005b      	lsls	r3, r3, #1
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:312
      SystemCoreClock = pllvco/pllp;
 80003a2:	fbb2 f2f3 	udiv	r2, r2, r3
 80003a6:	4b0b      	ldr	r3, [pc, #44]	; (80003d4 <SystemCoreClockUpdate+0x84>)
 80003a8:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:313
      break;
 80003aa:	e002      	b.n	80003b2 <SystemCoreClockUpdate+0x62>
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:315
    default:
      SystemCoreClock = HSI_VALUE;
 80003ac:	4a08      	ldr	r2, [pc, #32]	; (80003d0 <SystemCoreClockUpdate+0x80>)
 80003ae:	4b09      	ldr	r3, [pc, #36]	; (80003d4 <SystemCoreClockUpdate+0x84>)
 80003b0:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:320
      break;
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80003b2:	4b06      	ldr	r3, [pc, #24]	; (80003cc <SystemCoreClockUpdate+0x7c>)
 80003b4:	689a      	ldr	r2, [r3, #8]
 80003b6:	f3c2 1203 	ubfx	r2, r2, #4, #4
 80003ba:	4b06      	ldr	r3, [pc, #24]	; (80003d4 <SystemCoreClockUpdate+0x84>)
 80003bc:	441a      	add	r2, r3
 80003be:	7911      	ldrb	r1, [r2, #4]
 80003c0:	b2c9      	uxtb	r1, r1
C:\Users\Filip\Eclipse\Template\Debug/../src/system_stm32f4xx.c:322
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80003c2:	681a      	ldr	r2, [r3, #0]
 80003c4:	40ca      	lsrs	r2, r1
 80003c6:	601a      	str	r2, [r3, #0]
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	40023800 	.word	0x40023800
 80003d0:	00f42400 	.word	0x00f42400
 80003d4:	20000000 	.word	0x20000000
 80003d8:	007a1200 	.word	0x007a1200

080003dc <EXTI_DeInit>:
EXTI_DeInit():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:105
  * @param  None
  * @retval None
  */
void EXTI_DeInit(void)
{
  EXTI->IMR = 0x00000000;
 80003dc:	4b04      	ldr	r3, [pc, #16]	; (80003f0 <EXTI_DeInit+0x14>)
 80003de:	2200      	movs	r2, #0
 80003e0:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:106
  EXTI->EMR = 0x00000000;
 80003e2:	605a      	str	r2, [r3, #4]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:107
  EXTI->RTSR = 0x00000000;
 80003e4:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:108
  EXTI->FTSR = 0x00000000;
 80003e6:	60da      	str	r2, [r3, #12]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:109
  EXTI->PR = 0x007FFFFF;
 80003e8:	4a02      	ldr	r2, [pc, #8]	; (80003f4 <EXTI_DeInit+0x18>)
 80003ea:	615a      	str	r2, [r3, #20]
 80003ec:	4770      	bx	lr
 80003ee:	bf00      	nop
 80003f0:	40013c00 	.word	0x40013c00
 80003f4:	007fffff 	.word	0x007fffff

080003f8 <EXTI_Init>:
EXTI_Init():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:120
  * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure
  *         that contains the configuration information for the EXTI peripheral.
  * @retval None
  */
void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
{
 80003f8:	b410      	push	{r4}
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:131
  assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
  assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));

  tmp = (uint32_t)EXTI_BASE;
     
  if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
 80003fa:	7983      	ldrb	r3, [r0, #6]
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d033      	beq.n	8000468 <EXTI_Init+0x70>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:134
  {
    /* Clear EXTI line configuration */
    EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
 8000400:	4b20      	ldr	r3, [pc, #128]	; (8000484 <EXTI_Init+0x8c>)
 8000402:	6819      	ldr	r1, [r3, #0]
 8000404:	6802      	ldr	r2, [r0, #0]
 8000406:	ea21 0202 	bic.w	r2, r1, r2
 800040a:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:135
    EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
 800040c:	6859      	ldr	r1, [r3, #4]
 800040e:	6802      	ldr	r2, [r0, #0]
 8000410:	ea21 0202 	bic.w	r2, r1, r2
 8000414:	605a      	str	r2, [r3, #4]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:137
    
    tmp += EXTI_InitStruct->EXTI_Mode;
 8000416:	7902      	ldrb	r2, [r0, #4]
 8000418:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800041c:	f502 329e 	add.w	r2, r2, #80896	; 0x13c00
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:139

    *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 8000420:	6814      	ldr	r4, [r2, #0]
 8000422:	6801      	ldr	r1, [r0, #0]
 8000424:	4321      	orrs	r1, r4
 8000426:	6011      	str	r1, [r2, #0]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:142

    /* Clear Rising Falling edge configuration */
    EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
 8000428:	6899      	ldr	r1, [r3, #8]
 800042a:	6802      	ldr	r2, [r0, #0]
 800042c:	ea21 0202 	bic.w	r2, r1, r2
 8000430:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:143
    EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
 8000432:	68d9      	ldr	r1, [r3, #12]
 8000434:	6802      	ldr	r2, [r0, #0]
 8000436:	ea21 0202 	bic.w	r2, r1, r2
 800043a:	60da      	str	r2, [r3, #12]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:146
    
    /* Select the trigger for the selected external interrupts */
    if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
 800043c:	7943      	ldrb	r3, [r0, #5]
 800043e:	2b10      	cmp	r3, #16
 8000440:	d109      	bne.n	8000456 <EXTI_Init+0x5e>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:149
    {
      /* Rising Falling edge */
      EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
 8000442:	4b10      	ldr	r3, [pc, #64]	; (8000484 <EXTI_Init+0x8c>)
 8000444:	6899      	ldr	r1, [r3, #8]
 8000446:	6802      	ldr	r2, [r0, #0]
 8000448:	430a      	orrs	r2, r1
 800044a:	609a      	str	r2, [r3, #8]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:150
      EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
 800044c:	68d9      	ldr	r1, [r3, #12]
 800044e:	6802      	ldr	r2, [r0, #0]
 8000450:	430a      	orrs	r2, r1
 8000452:	60da      	str	r2, [r3, #12]
 8000454:	e012      	b.n	800047c <EXTI_Init+0x84>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:155
    }
    else
    {
      tmp = (uint32_t)EXTI_BASE;
      tmp += EXTI_InitStruct->EXTI_Trigger;
 8000456:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800045a:	f503 339e 	add.w	r3, r3, #80896	; 0x13c00
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:157

      *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 800045e:	6819      	ldr	r1, [r3, #0]
 8000460:	6802      	ldr	r2, [r0, #0]
 8000462:	430a      	orrs	r2, r1
 8000464:	601a      	str	r2, [r3, #0]
 8000466:	e009      	b.n	800047c <EXTI_Init+0x84>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:162
    }
  }
  else
  {
    tmp += EXTI_InitStruct->EXTI_Mode;
 8000468:	7903      	ldrb	r3, [r0, #4]
 800046a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800046e:	f503 339e 	add.w	r3, r3, #80896	; 0x13c00
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:165

    /* Disable the selected external lines */
    *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
 8000472:	681a      	ldr	r2, [r3, #0]
 8000474:	6801      	ldr	r1, [r0, #0]
 8000476:	ea22 0201 	bic.w	r2, r2, r1
 800047a:	601a      	str	r2, [r3, #0]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:167
  }
}
 800047c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000480:	4770      	bx	lr
 8000482:	bf00      	nop
 8000484:	40013c00 	.word	0x40013c00

08000488 <EXTI_StructInit>:
EXTI_StructInit():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:177
  *         be initialized.
  * @retval None
  */
void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
{
  EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
 8000488:	2300      	movs	r3, #0
 800048a:	6003      	str	r3, [r0, #0]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:178
  EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
 800048c:	7103      	strb	r3, [r0, #4]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:179
  EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
 800048e:	220c      	movs	r2, #12
 8000490:	7142      	strb	r2, [r0, #5]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:180
  EXTI_InitStruct->EXTI_LineCmd = DISABLE;
 8000492:	7183      	strb	r3, [r0, #6]
 8000494:	4770      	bx	lr
 8000496:	bf00      	nop

08000498 <EXTI_GenerateSWInterrupt>:
EXTI_GenerateSWInterrupt():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:195
void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
{
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(EXTI_Line));
  
  EXTI->SWIER |= EXTI_Line;
 8000498:	4b02      	ldr	r3, [pc, #8]	; (80004a4 <EXTI_GenerateSWInterrupt+0xc>)
 800049a:	691a      	ldr	r2, [r3, #16]
 800049c:	4310      	orrs	r0, r2
 800049e:	6118      	str	r0, [r3, #16]
 80004a0:	4770      	bx	lr
 80004a2:	bf00      	nop
 80004a4:	40013c00 	.word	0x40013c00

080004a8 <EXTI_GetFlagStatus>:
EXTI_GetFlagStatus():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:226
{
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_GET_EXTI_LINE(EXTI_Line));
  
  if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
 80004a8:	4b03      	ldr	r3, [pc, #12]	; (80004b8 <EXTI_GetFlagStatus+0x10>)
 80004aa:	695b      	ldr	r3, [r3, #20]
 80004ac:	4018      	ands	r0, r3
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:235
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
 80004ae:	3000      	adds	r0, #0
 80004b0:	bf18      	it	ne
 80004b2:	2001      	movne	r0, #1
 80004b4:	4770      	bx	lr
 80004b6:	bf00      	nop
 80004b8:	40013c00 	.word	0x40013c00

080004bc <EXTI_ClearFlag>:
EXTI_ClearFlag():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:248
void EXTI_ClearFlag(uint32_t EXTI_Line)
{
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(EXTI_Line));
  
  EXTI->PR = EXTI_Line;
 80004bc:	4b01      	ldr	r3, [pc, #4]	; (80004c4 <EXTI_ClearFlag+0x8>)
 80004be:	6158      	str	r0, [r3, #20]
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	40013c00 	.word	0x40013c00

080004c8 <EXTI_GetITStatus>:
EXTI_GetITStatus():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:264
  ITStatus bitstatus = RESET;
  uint32_t enablestatus = 0;
  /* Check the parameters */
  assert_param(IS_GET_EXTI_LINE(EXTI_Line));
  
  enablestatus =  EXTI->IMR & EXTI_Line;
 80004c8:	4b05      	ldr	r3, [pc, #20]	; (80004e0 <EXTI_GetITStatus+0x18>)
 80004ca:	681a      	ldr	r2, [r3, #0]
 80004cc:	4002      	ands	r2, r0
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:265
  if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 80004ce:	695b      	ldr	r3, [r3, #20]
 80004d0:	4203      	tst	r3, r0
 80004d2:	d003      	beq.n	80004dc <EXTI_GetITStatus+0x14>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:271 (discriminator 1)
  {
    bitstatus = SET;
  }
  else
  {
    bitstatus = RESET;
 80004d4:	1c10      	adds	r0, r2, #0
 80004d6:	bf18      	it	ne
 80004d8:	2001      	movne	r0, #1
 80004da:	4770      	bx	lr
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:271
 80004dc:	2000      	movs	r0, #0
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:274
  }
  return bitstatus;
}
 80004de:	4770      	bx	lr
 80004e0:	40013c00 	.word	0x40013c00

080004e4 <EXTI_ClearITPendingBit>:
EXTI_ClearITPendingBit():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c:287
void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
{
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(EXTI_Line));
  
  EXTI->PR = EXTI_Line;
 80004e4:	4b01      	ldr	r3, [pc, #4]	; (80004ec <EXTI_ClearITPendingBit+0x8>)
 80004e6:	6158      	str	r0, [r3, #20]
 80004e8:	4770      	bx	lr
 80004ea:	bf00      	nop
 80004ec:	40013c00 	.word	0x40013c00

080004f0 <Reset_Handler>:
Reset_Handler():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:69
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80004f0:	2100      	movs	r1, #0
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:70
  b  LoopCopyDataInit
 80004f2:	f000 b804 	b.w	80004fe <LoopCopyDataInit>

080004f6 <CopyDataInit>:
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:73

CopyDataInit:
  ldr  r3, =_sidata
 80004f6:	4b0c      	ldr	r3, [pc, #48]	; (8000528 <LoopFillZerobss+0x12>)
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:74
  ldr  r3, [r3, r1]
 80004f8:	585b      	ldr	r3, [r3, r1]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:75
  str  r3, [r0, r1]
 80004fa:	5043      	str	r3, [r0, r1]
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:76
  adds  r1, r1, #4
 80004fc:	3104      	adds	r1, #4

080004fe <LoopCopyDataInit>:
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:79
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80004fe:	480b      	ldr	r0, [pc, #44]	; (800052c <LoopFillZerobss+0x16>)
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:80
  ldr  r3, =_edata
 8000500:	4b0b      	ldr	r3, [pc, #44]	; (8000530 <LoopFillZerobss+0x1a>)
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:81
  adds  r2, r0, r1
 8000502:	1842      	adds	r2, r0, r1
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:82
  cmp  r2, r3
 8000504:	429a      	cmp	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:83
  bcc  CopyDataInit
 8000506:	f4ff aff6 	bcc.w	80004f6 <CopyDataInit>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:84
  ldr  r2, =_sbss
 800050a:	4a0a      	ldr	r2, [pc, #40]	; (8000534 <LoopFillZerobss+0x1e>)
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:85
  b  LoopFillZerobss
 800050c:	f000 b803 	b.w	8000516 <LoopFillZerobss>

08000510 <FillZerobss>:
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:88
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000510:	2300      	movs	r3, #0
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:89
  str  r3, [r2], #4
 8000512:	f842 3b04 	str.w	r3, [r2], #4

08000516 <LoopFillZerobss>:
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:92
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000516:	4b08      	ldr	r3, [pc, #32]	; (8000538 <LoopFillZerobss+0x22>)
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:93
  cmp  r2, r3
 8000518:	429a      	cmp	r2, r3
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:94
  bcc  FillZerobss
 800051a:	f4ff aff9 	bcc.w	8000510 <FillZerobss>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:97

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800051e:	f7ff fef5 	bl	800030c <SystemInit>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:99
/* Call the application's entry point.*/
  bl  main
 8000522:	f7ff fe31 	bl	8000188 <main>
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:100
  bx  lr    
 8000526:	4770      	bx	lr
$d():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:73
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
  b  LoopCopyDataInit

CopyDataInit:
  ldr  r3, =_sidata
 8000528:	08000540 	.word	0x08000540
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:79
  ldr  r3, [r3, r1]
  str  r3, [r0, r1]
  adds  r1, r1, #4
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800052c:	20000000 	.word	0x20000000
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:80
  ldr  r3, =_edata
 8000530:	20000014 	.word	0x20000014
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:84
  adds  r2, r0, r1
  cmp  r2, r3
  bcc  CopyDataInit
  ldr  r2, =_sbss
 8000534:	20000014 	.word	0x20000014
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:92
FillZerobss:
  movs  r3, #0
  str  r3, [r2], #4
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000538:	2000001c 	.word	0x2000001c

0800053c <ADC_IRQHandler>:
RTC_Alarm_IRQHandler():
C:\Users\Filip\Eclipse\Template\Debug/../STM32F4xx/Source/startup_stm32f4xx.S:113
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800053c:	f7ff bffe 	b.w	800053c <ADC_IRQHandler>
