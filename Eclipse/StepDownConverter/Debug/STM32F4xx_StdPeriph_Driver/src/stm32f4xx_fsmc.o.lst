   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_fsmc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	FSMC_NORSRAMDeInit
  20              		.thumb
  21              		.thumb_func
  23              	FSMC_NORSRAMDeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @file    stm32f4xx_fsmc.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  * @brief    This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          functionalities of the FSMC peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with SRAM, PSRAM, NOR and OneNAND memories
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with NAND memories
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with 16-bit PC Card compatible memories  
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interrupts and flags management   
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @attention
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Includes ------------------------------------------------------------------*/
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_fsmc.h"
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_rcc.h"
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief FSMC driver modules
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */ 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private typedef -----------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private define ------------------------------------------------------------*/
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* --------------------- FSMC registers bit mask ---------------------------- */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC BCRx Mask */
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_SET          ((uint32_t)0x00000001)
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_RESET        ((uint32_t)0x000FFFFE)
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_FACCEN_SET         ((uint32_t)0x00000040)
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC PCRx Mask */
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_SET          ((uint32_t)0x00000004)
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_RESET        ((uint32_t)0x000FFFFB)
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_SET          ((uint32_t)0x00000040)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_RESET        ((uint32_t)0x000FFFBF)
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_MEMORYTYPE_NAND    ((uint32_t)0x00000008)
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private macro -------------------------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private variables ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private function prototypes -----------------------------------------------*/
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private functions ---------------------------------------------------------*/
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Private_Functions
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group1 NOR/SRAM Controller functions
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NOR/SRAM Controller functions 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NOR/SRAM Controller functions
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  SRAM, PSRAM, NOR or OneNAND memory connected to the NOR/SRAM Bank:
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NORSRAMInitTypeDef structure, for example:
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NORSRAMInitStructure variable with the allowed values of
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NOR/SRAM Controller by calling the function
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NOR/SRAM Bank, for example:
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);  
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NOR/SRAM Bank. 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NOR/SRAM Banks registers to their default 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *   reset values.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
  26              		.loc 1 117 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM1 */
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
  32              		.loc 1 122 0
  33 0000 0346     		mov	r3, r0
  34 0002 30B9     		cbnz	r0, .L2
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
  35              		.loc 1 124 0
  36 0004 43F2DB01 		movw	r1, #12507
  37 0008 4FF02042 		mov	r2, #-1610612736
  38 000c 42F82010 		str	r1, [r2, r0, lsl #2]
  39 0010 05E0     		b	.L3
  40              	.L2:
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {   
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
  41              		.loc 1 129 0
  42 0012 43F2D201 		movw	r1, #12498
  43 0016 4FF02042 		mov	r2, #-1610612736
  44 001a 42F82010 		str	r1, [r2, r0, lsl #2]
  45              	.L3:
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  46              		.loc 1 131 0
  47 001e 581C     		adds	r0, r3, #1
  48              	.LVL1:
  49 0020 6FF07042 		mvn	r2, #-268435456
  50 0024 4FF02041 		mov	r1, #-1610612736
  51 0028 41F82020 		str	r2, [r1, r0, lsl #2]
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  52              		.loc 1 132 0
  53 002c 01F58271 		add	r1, r1, #260
  54 0030 41F82320 		str	r2, [r1, r3, lsl #2]
  55 0034 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE110:
  59 0036 00BF     		.align	2
  60              		.global	FSMC_NORSRAMInit
  61              		.thumb
  62              		.thumb_func
  64              	FSMC_NORSRAMInit:
  65              	.LFB111:
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NOR/SRAM Banks according to the specified
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         parameters in the FSMC_NORSRAMInitStruct.
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef structure
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC NOR/SRAM 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         specified Banks.                       
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
  66              		.loc 1 144 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL2:
  72 0038 10B4     		push	{r4}
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 4, -4
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_A
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Data
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Bus
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLa
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessM
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM control register configuration */ 
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
  75              		.loc 1 168 0
  76 003a 0368     		ldr	r3, [r0]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
  77              		.loc 1 169 0
  78 003c 4168     		ldr	r1, [r0, #4]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
  79              		.loc 1 170 0
  80 003e 8268     		ldr	r2, [r0, #8]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
  81              		.loc 1 169 0
  82 0040 1143     		orrs	r1, r1, r2
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
  83              		.loc 1 171 0
  84 0042 C268     		ldr	r2, [r0, #12]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
  85              		.loc 1 170 0
  86 0044 1143     		orrs	r1, r1, r2
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
  87              		.loc 1 172 0
  88 0046 0269     		ldr	r2, [r0, #16]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
  89              		.loc 1 171 0
  90 0048 1143     		orrs	r1, r1, r2
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
  91              		.loc 1 173 0
  92 004a 4269     		ldr	r2, [r0, #20]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
  93              		.loc 1 172 0
  94 004c 1143     		orrs	r1, r1, r2
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
  95              		.loc 1 174 0
  96 004e 8269     		ldr	r2, [r0, #24]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
  97              		.loc 1 173 0
  98 0050 1143     		orrs	r1, r1, r2
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
  99              		.loc 1 175 0
 100 0052 C269     		ldr	r2, [r0, #28]
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 101              		.loc 1 174 0
 102 0054 1143     		orrs	r1, r1, r2
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 103              		.loc 1 176 0
 104 0056 026A     		ldr	r2, [r0, #32]
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 105              		.loc 1 175 0
 106 0058 1143     		orrs	r1, r1, r2
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 107              		.loc 1 177 0
 108 005a 426A     		ldr	r2, [r0, #36]
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 109              		.loc 1 176 0
 110 005c 1143     		orrs	r1, r1, r2
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 111              		.loc 1 178 0
 112 005e 826A     		ldr	r2, [r0, #40]
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 113              		.loc 1 177 0
 114 0060 1143     		orrs	r1, r1, r2
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 115              		.loc 1 179 0
 116 0062 C26A     		ldr	r2, [r0, #44]
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 117              		.loc 1 178 0
 118 0064 1143     		orrs	r1, r1, r2
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
 119              		.loc 1 180 0
 120 0066 026B     		ldr	r2, [r0, #48]
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 121              		.loc 1 179 0
 122 0068 0A43     		orrs	r2, r2, r1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 123              		.loc 1 168 0
 124 006a 4FF02041 		mov	r1, #-1610612736
 125 006e 41F82320 		str	r2, [r1, r3, lsl #2]
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
 126              		.loc 1 181 0
 127 0072 8368     		ldr	r3, [r0, #8]
 128 0074 082B     		cmp	r3, #8
 129 0076 07D1     		bne	.L5
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_SET;
 130              		.loc 1 183 0
 131 0078 0268     		ldr	r2, [r0]
 132 007a 0B46     		mov	r3, r1
 133 007c 51F82210 		ldr	r1, [r1, r2, lsl #2]
 134 0080 41F04001 		orr	r1, r1, #64
 135 0084 43F82210 		str	r1, [r3, r2, lsl #2]
 136              	.L5:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register configuration */
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 137              		.loc 1 186 0
 138 0088 0368     		ldr	r3, [r0]
 139 008a 5C1C     		adds	r4, r3, #1
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 140              		.loc 1 187 0
 141 008c 436B     		ldr	r3, [r0, #52]
 142 008e 1A68     		ldr	r2, [r3]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 143              		.loc 1 188 0
 144 0090 5968     		ldr	r1, [r3, #4]
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 145              		.loc 1 187 0
 146 0092 42EA0111 		orr	r1, r2, r1, lsl #4
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 147              		.loc 1 189 0
 148 0096 9A68     		ldr	r2, [r3, #8]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 149              		.loc 1 188 0
 150 0098 41EA0221 		orr	r1, r1, r2, lsl #8
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 151              		.loc 1 190 0
 152 009c DA68     		ldr	r2, [r3, #12]
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 153              		.loc 1 189 0
 154 009e 41EA0241 		orr	r1, r1, r2, lsl #16
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 155              		.loc 1 191 0
 156 00a2 1A69     		ldr	r2, [r3, #16]
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 157              		.loc 1 190 0
 158 00a4 41EA0251 		orr	r1, r1, r2, lsl #20
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 159              		.loc 1 192 0
 160 00a8 5A69     		ldr	r2, [r3, #20]
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 161              		.loc 1 191 0
 162 00aa 41EA0262 		orr	r2, r1, r2, lsl #24
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****              FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
 163              		.loc 1 193 0
 164 00ae 9B69     		ldr	r3, [r3, #24]
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 165              		.loc 1 192 0
 166 00b0 1A43     		orrs	r2, r2, r3
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 167              		.loc 1 186 0
 168 00b2 4FF02041 		mov	r1, #-1610612736
 169 00b6 41F82420 		str	r2, [r1, r4, lsl #2]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
 170              		.loc 1 197 0
 171 00ba C36A     		ldr	r3, [r0, #44]
 172 00bc B3F5804F 		cmp	r3, #16384
 173 00c0 14D1     		bne	.L6
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Ad
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Add
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSe
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision))
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLate
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMod
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 174              		.loc 1 205 0
 175 00c2 0468     		ldr	r4, [r0]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 176              		.loc 1 206 0
 177 00c4 836B     		ldr	r3, [r0, #56]
 178 00c6 1A68     		ldr	r2, [r3]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 179              		.loc 1 207 0
 180 00c8 5968     		ldr	r1, [r3, #4]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 181              		.loc 1 206 0
 182 00ca 42EA0111 		orr	r1, r2, r1, lsl #4
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 183              		.loc 1 208 0
 184 00ce 9A68     		ldr	r2, [r3, #8]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 185              		.loc 1 207 0
 186 00d0 41EA0221 		orr	r1, r1, r2, lsl #8
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 187              		.loc 1 209 0
 188 00d4 1A69     		ldr	r2, [r3, #16]
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 189              		.loc 1 208 0
 190 00d6 41EA0251 		orr	r1, r1, r2, lsl #20
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 191              		.loc 1 210 0
 192 00da 5A69     		ldr	r2, [r3, #20]
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 193              		.loc 1 209 0
 194 00dc 41EA0262 		orr	r2, r1, r2, lsl #24
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
 195              		.loc 1 211 0
 196 00e0 9B69     		ldr	r3, [r3, #24]
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 197              		.loc 1 210 0
 198 00e2 1A43     		orrs	r2, r2, r3
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 199              		.loc 1 205 0
 200 00e4 064B     		ldr	r3, .L8
 201 00e6 43F82420 		str	r2, [r3, r4, lsl #2]
 202 00ea 05E0     		b	.L4
 203              	.L6:
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
 204              		.loc 1 215 0
 205 00ec 0268     		ldr	r2, [r0]
 206 00ee 6FF07041 		mvn	r1, #-268435456
 207 00f2 034B     		ldr	r3, .L8
 208 00f4 43F82210 		str	r1, [r3, r2, lsl #2]
 209              	.L4:
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 210              		.loc 1 217 0
 211 00f8 5DF8044B 		ldr	r4, [sp], #4
 212 00fc 7047     		bx	lr
 213              	.L9:
 214 00fe 00BF     		.align	2
 215              	.L8:
 216 0100 040100A0 		.word	-1610612476
 217              		.cfi_endproc
 218              	.LFE111:
 220              		.align	2
 221              		.global	FSMC_NORSRAMStructInit
 222              		.thumb
 223              		.thumb_func
 225              	FSMC_NORSRAMStructInit:
 226              	.LFB112:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef structure 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {  
 227              		.loc 1 226 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL3:
 233 0104 10B4     		push	{r4}
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 4, -4
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NOR/SRAM Init structure parameters values */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
 236              		.loc 1 228 0
 237 0106 0023     		movs	r3, #0
 238 0108 0360     		str	r3, [r0]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
 239              		.loc 1 229 0
 240 010a 0222     		movs	r2, #2
 241 010c 4260     		str	r2, [r0, #4]
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
 242              		.loc 1 230 0
 243 010e 8360     		str	r3, [r0, #8]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 244              		.loc 1 231 0
 245 0110 C360     		str	r3, [r0, #12]
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
 246              		.loc 1 232 0
 247 0112 0361     		str	r3, [r0, #16]
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
 248              		.loc 1 233 0
 249 0114 4361     		str	r3, [r0, #20]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
 250              		.loc 1 234 0
 251 0116 8361     		str	r3, [r0, #24]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
 252              		.loc 1 235 0
 253 0118 C361     		str	r3, [r0, #28]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
 254              		.loc 1 236 0
 255 011a 0362     		str	r3, [r0, #32]
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
 256              		.loc 1 237 0
 257 011c 4FF48052 		mov	r2, #4096
 258 0120 4262     		str	r2, [r0, #36]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
 259              		.loc 1 238 0
 260 0122 4FF40052 		mov	r2, #8192
 261 0126 8262     		str	r2, [r0, #40]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
 262              		.loc 1 239 0
 263 0128 C362     		str	r3, [r0, #44]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
 264              		.loc 1 240 0
 265 012a 0363     		str	r3, [r0, #48]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 266              		.loc 1 241 0
 267 012c 416B     		ldr	r1, [r0, #52]
 268 012e 0F22     		movs	r2, #15
 269 0130 0A60     		str	r2, [r1]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 270              		.loc 1 242 0
 271 0132 416B     		ldr	r1, [r0, #52]
 272 0134 4A60     		str	r2, [r1, #4]
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 273              		.loc 1 243 0
 274 0136 446B     		ldr	r4, [r0, #52]
 275 0138 FF21     		movs	r1, #255
 276 013a A160     		str	r1, [r4, #8]
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 277              		.loc 1 244 0
 278 013c 446B     		ldr	r4, [r0, #52]
 279 013e E260     		str	r2, [r4, #12]
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
 280              		.loc 1 245 0
 281 0140 446B     		ldr	r4, [r0, #52]
 282 0142 2261     		str	r2, [r4, #16]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
 283              		.loc 1 246 0
 284 0144 446B     		ldr	r4, [r0, #52]
 285 0146 6261     		str	r2, [r4, #20]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
 286              		.loc 1 247 0
 287 0148 446B     		ldr	r4, [r0, #52]
 288 014a A361     		str	r3, [r4, #24]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 289              		.loc 1 248 0
 290 014c 846B     		ldr	r4, [r0, #56]
 291 014e 2260     		str	r2, [r4]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 292              		.loc 1 249 0
 293 0150 846B     		ldr	r4, [r0, #56]
 294 0152 6260     		str	r2, [r4, #4]
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 295              		.loc 1 250 0
 296 0154 846B     		ldr	r4, [r0, #56]
 297 0156 A160     		str	r1, [r4, #8]
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 298              		.loc 1 251 0
 299 0158 816B     		ldr	r1, [r0, #56]
 300 015a CA60     		str	r2, [r1, #12]
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
 301              		.loc 1 252 0
 302 015c 816B     		ldr	r1, [r0, #56]
 303 015e 0A61     		str	r2, [r1, #16]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
 304              		.loc 1 253 0
 305 0160 816B     		ldr	r1, [r0, #56]
 306 0162 4A61     		str	r2, [r1, #20]
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
 307              		.loc 1 254 0
 308 0164 826B     		ldr	r2, [r0, #56]
 309 0166 9361     		str	r3, [r2, #24]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 310              		.loc 1 255 0
 311 0168 5DF8044B 		ldr	r4, [sp], #4
 312 016c 7047     		bx	lr
 313              		.cfi_endproc
 314              	.LFE112:
 316 016e 00BF     		.align	2
 317              		.global	FSMC_NORSRAMCmd
 318              		.thumb
 319              		.thumb_func
 321              	FSMC_NORSRAMCmd:
 322              	.LFB113:
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NOR/SRAM Memory Bank.
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 323              		.loc 1 269 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL4:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 329              		.loc 1 273 0
 330 0170 41B1     		cbz	r1, .L12
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_SET;
 331              		.loc 1 276 0
 332 0172 4FF02043 		mov	r3, #-1610612736
 333 0176 53F82020 		ldr	r2, [r3, r0, lsl #2]
 334 017a 42F00102 		orr	r2, r2, #1
 335 017e 43F82020 		str	r2, [r3, r0, lsl #2]
 336 0182 7047     		bx	lr
 337              	.L12:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_RESET;
 338              		.loc 1 281 0
 339 0184 4FF02042 		mov	r2, #-1610612736
 340 0188 52F82010 		ldr	r1, [r2, r0, lsl #2]
 341              	.LVL5:
 342 018c 024B     		ldr	r3, .L14
 343 018e 0B40     		ands	r3, r3, r1
 344 0190 42F82030 		str	r3, [r2, r0, lsl #2]
 345 0194 7047     		bx	lr
 346              	.L15:
 347 0196 00BF     		.align	2
 348              	.L14:
 349 0198 FEFF0F00 		.word	1048574
 350              		.cfi_endproc
 351              	.LFE113:
 353              		.align	2
 354              		.global	FSMC_NANDDeInit
 355              		.thumb
 356              		.thumb_func
 358              	FSMC_NANDDeInit:
 359              	.LFB114:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group2 NAND Controller functions
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NAND Controller functions 
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NAND Controller functions
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  8-bit or 16-bit NAND memory connected to the NAND Bank:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NANDInitTypeDef structure, for example:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInitTypeDef  FSMC_NANDInitStructure;
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NANDInitStructure variable with the allowed values of
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NAND Controller by calling the function
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInit(&FSMC_NANDInitStructure); 
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NAND Bank, for example:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDCmd(FSMC_Bank3_NAND, ENABLE);  
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NAND Bank. 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @note To enable the Error Correction Code (ECC), you have to use the function
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDECCCmd(FSMC_Bank3_NAND, ENABLE);  
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and to get the current ECC value you have to use the function
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           ECCval = FSMC_GetECC(FSMC_Bank3_NAND); 
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NAND Banks registers to their default reset values.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND 
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDDeInit(uint32_t FSMC_Bank)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 360              		.loc 1 340 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365              	.LVL6:
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 366              		.loc 1 344 0
 367 019c 1028     		cmp	r0, #16
 368 019e 09D1     		bne	.L17
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank2 registers to their reset values */
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = 0x00000018;
 369              		.loc 1 347 0
 370 01a0 094B     		ldr	r3, .L19
 371 01a2 1822     		movs	r2, #24
 372 01a4 1A60     		str	r2, [r3]
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 = 0x00000040;
 373              		.loc 1 348 0
 374 01a6 4022     		movs	r2, #64
 375 01a8 5A60     		str	r2, [r3, #4]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = 0xFCFCFCFC;
 376              		.loc 1 349 0
 377 01aa 4FF0FC32 		mov	r2, #-50529028
 378 01ae 9A60     		str	r2, [r3, #8]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = 0xFCFCFCFC;  
 379              		.loc 1 350 0
 380 01b0 DA60     		str	r2, [r3, #12]
 381 01b2 7047     		bx	lr
 382              	.L17:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank3_NAND */  
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank3 registers to their reset values */
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = 0x00000018;
 383              		.loc 1 356 0
 384 01b4 054B     		ldr	r3, .L19+4
 385 01b6 1822     		movs	r2, #24
 386 01b8 1A60     		str	r2, [r3]
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 = 0x00000040;
 387              		.loc 1 357 0
 388 01ba 4022     		movs	r2, #64
 389 01bc 5A60     		str	r2, [r3, #4]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
 390              		.loc 1 358 0
 391 01be 4FF0FC32 		mov	r2, #-50529028
 392 01c2 9A60     		str	r2, [r3, #8]
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
 393              		.loc 1 359 0
 394 01c4 DA60     		str	r2, [r3, #12]
 395 01c6 7047     		bx	lr
 396              	.L20:
 397              		.align	2
 398              	.L19:
 399 01c8 600000A0 		.word	-1610612640
 400 01cc 800000A0 		.word	-1610612608
 401              		.cfi_endproc
 402              	.LFE114:
 404              		.align	2
 405              		.global	FSMC_NANDInit
 406              		.thumb
 407              		.thumb_func
 409              	FSMC_NANDInit:
 410              	.LFB115:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NAND Banks according to the specified parameters
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_NANDInitStruct.
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef structure that
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         contains the configuration information for the FSMC NAND specified Banks.              
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 411              		.loc 1 371 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL7:
 417 01d0 30B4     		push	{r4, r5}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 5, -4
 421              	.LVL8:
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmppcr = 0x00000000, tmppmem = 0x00000000, tmppatt = 0x00000000; 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupT
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupT
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTim
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSet
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSet
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetup
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 422              		.loc 1 392 0
 423 01d2 4268     		ldr	r2, [r0, #4]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 424              		.loc 1 394 0
 425 01d4 8368     		ldr	r3, [r0, #8]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 426              		.loc 1 393 0
 427 01d6 42EA0304 		orr	r4, r2, r3
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 428              		.loc 1 395 0
 429 01da C368     		ldr	r3, [r0, #12]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 430              		.loc 1 394 0
 431 01dc 1C43     		orrs	r4, r4, r3
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 432              		.loc 1 396 0
 433 01de 0369     		ldr	r3, [r0, #16]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 434              		.loc 1 395 0
 435 01e0 1C43     		orrs	r4, r4, r3
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 436              		.loc 1 397 0
 437 01e2 4369     		ldr	r3, [r0, #20]
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 438              		.loc 1 396 0
 439 01e4 44EA4324 		orr	r4, r4, r3, lsl #9
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
 440              		.loc 1 398 0
 441 01e8 8369     		ldr	r3, [r0, #24]
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 442              		.loc 1 397 0
 443 01ea 44EA4333 		orr	r3, r4, r3, lsl #13
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 444              		.loc 1 392 0
 445 01ee 43F00804 		orr	r4, r3, #8
 446              	.LVL9:
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 447              		.loc 1 401 0
 448 01f2 C369     		ldr	r3, [r0, #28]
 449 01f4 1A68     		ldr	r2, [r3]
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 450              		.loc 1 402 0
 451 01f6 5968     		ldr	r1, [r3, #4]
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 452              		.loc 1 401 0
 453 01f8 42EA0121 		orr	r1, r2, r1, lsl #8
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 454              		.loc 1 403 0
 455 01fc 9A68     		ldr	r2, [r3, #8]
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 456              		.loc 1 402 0
 457 01fe 41EA0242 		orr	r2, r1, r2, lsl #16
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
 458              		.loc 1 404 0
 459 0202 D968     		ldr	r1, [r3, #12]
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 460              		.loc 1 401 0
 461 0204 42EA0165 		orr	r5, r2, r1, lsl #24
 462              	.LVL10:
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 463              		.loc 1 407 0
 464 0208 036A     		ldr	r3, [r0, #32]
 465 020a 1A68     		ldr	r2, [r3]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 466              		.loc 1 408 0
 467 020c 5968     		ldr	r1, [r3, #4]
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 468              		.loc 1 407 0
 469 020e 42EA0121 		orr	r1, r2, r1, lsl #8
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 470              		.loc 1 409 0
 471 0212 9A68     		ldr	r2, [r3, #8]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 472              		.loc 1 408 0
 473 0214 41EA0242 		orr	r2, r1, r2, lsl #16
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
 474              		.loc 1 410 0
 475 0218 DB68     		ldr	r3, [r3, #12]
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 476              		.loc 1 407 0
 477 021a 42EA0362 		orr	r2, r2, r3, lsl #24
 478              	.LVL11:
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
 479              		.loc 1 412 0
 480 021e 0068     		ldr	r0, [r0]
 481              	.LVL12:
 482 0220 1028     		cmp	r0, #16
 483 0222 04D1     		bne	.L22
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank2_NAND registers configuration */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = tmppcr;
 484              		.loc 1 415 0
 485 0224 054B     		ldr	r3, .L24
 486 0226 1C60     		str	r4, [r3]
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = tmppmem;
 487              		.loc 1 416 0
 488 0228 9D60     		str	r5, [r3, #8]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = tmppatt;
 489              		.loc 1 417 0
 490 022a DA60     		str	r2, [r3, #12]
 491 022c 03E0     		b	.L21
 492              	.L22:
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank3_NAND registers configuration */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = tmppcr;
 493              		.loc 1 422 0
 494 022e 044B     		ldr	r3, .L24+4
 495 0230 1C60     		str	r4, [r3]
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = tmppmem;
 496              		.loc 1 423 0
 497 0232 9D60     		str	r5, [r3, #8]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = tmppatt;
 498              		.loc 1 424 0
 499 0234 DA60     		str	r2, [r3, #12]
 500              	.L21:
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 501              		.loc 1 426 0
 502 0236 30BC     		pop	{r4, r5}
 503              	.LVL13:
 504 0238 7047     		bx	lr
 505              	.L25:
 506 023a 00BF     		.align	2
 507              	.L24:
 508 023c 600000A0 		.word	-1610612640
 509 0240 800000A0 		.word	-1610612608
 510              		.cfi_endproc
 511              	.LFE115:
 513              		.align	2
 514              		.global	FSMC_NANDStructInit
 515              		.thumb
 516              		.thumb_func
 518              	FSMC_NANDStructInit:
 519              	.LFB116:
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NANDInitStruct member with its default value.
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef structure which
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         will be initialized.
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
 520              		.loc 1 436 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL14:
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NAND Init structure parameters values */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
 526              		.loc 1 438 0
 527 0244 1023     		movs	r3, #16
 528 0246 0360     		str	r3, [r0]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 529              		.loc 1 439 0
 530 0248 0023     		movs	r3, #0
 531 024a 4360     		str	r3, [r0, #4]
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 532              		.loc 1 440 0
 533 024c 8360     		str	r3, [r0, #8]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
 534              		.loc 1 441 0
 535 024e C360     		str	r3, [r0, #12]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
 536              		.loc 1 442 0
 537 0250 0361     		str	r3, [r0, #16]
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
 538              		.loc 1 443 0
 539 0252 4361     		str	r3, [r0, #20]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
 540              		.loc 1 444 0
 541 0254 8361     		str	r3, [r0, #24]
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 542              		.loc 1 445 0
 543 0256 C269     		ldr	r2, [r0, #28]
 544 0258 FC23     		movs	r3, #252
 545 025a 1360     		str	r3, [r2]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 546              		.loc 1 446 0
 547 025c C269     		ldr	r2, [r0, #28]
 548 025e 5360     		str	r3, [r2, #4]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 549              		.loc 1 447 0
 550 0260 C269     		ldr	r2, [r0, #28]
 551 0262 9360     		str	r3, [r2, #8]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 552              		.loc 1 448 0
 553 0264 C269     		ldr	r2, [r0, #28]
 554 0266 D360     		str	r3, [r2, #12]
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 555              		.loc 1 449 0
 556 0268 026A     		ldr	r2, [r0, #32]
 557 026a 1360     		str	r3, [r2]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 558              		.loc 1 450 0
 559 026c 026A     		ldr	r2, [r0, #32]
 560 026e 5360     		str	r3, [r2, #4]
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 561              		.loc 1 451 0
 562 0270 026A     		ldr	r2, [r0, #32]
 563 0272 9360     		str	r3, [r2, #8]
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
 564              		.loc 1 452 0
 565 0274 026A     		ldr	r2, [r0, #32]
 566 0276 D360     		str	r3, [r2, #12]
 567 0278 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE116:
 571 027a 00BF     		.align	2
 572              		.global	FSMC_NANDCmd
 573              		.thumb
 574              		.thumb_func
 576              	FSMC_NANDCmd:
 577              	.LFB117:
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NAND Memory Bank.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 578              		.loc 1 465 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL15:
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 584              		.loc 1 469 0
 585 027c 69B1     		cbz	r1, .L28
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 586              		.loc 1 472 0
 587 027e 1028     		cmp	r0, #16
 588 0280 05D1     		bne	.L29
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_PBKEN_SET;
 589              		.loc 1 474 0
 590 0282 0D4B     		ldr	r3, .L32
 591 0284 1A68     		ldr	r2, [r3]
 592 0286 42F00402 		orr	r2, r2, #4
 593 028a 1A60     		str	r2, [r3]
 594 028c 7047     		bx	lr
 595              	.L29:
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_PBKEN_SET;
 596              		.loc 1 478 0
 597 028e 0B4B     		ldr	r3, .L32+4
 598 0290 1A68     		ldr	r2, [r3]
 599 0292 42F00402 		orr	r2, r2, #4
 600 0296 1A60     		str	r2, [r3]
 601 0298 7047     		bx	lr
 602              	.L28:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 603              		.loc 1 484 0
 604 029a 1028     		cmp	r0, #16
 605 029c 05D1     		bne	.L31
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_PBKEN_RESET;
 606              		.loc 1 486 0
 607 029e 064A     		ldr	r2, .L32
 608 02a0 1168     		ldr	r1, [r2]
 609              	.LVL16:
 610 02a2 074B     		ldr	r3, .L32+8
 611 02a4 0B40     		ands	r3, r3, r1
 612 02a6 1360     		str	r3, [r2]
 613 02a8 7047     		bx	lr
 614              	.LVL17:
 615              	.L31:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_PBKEN_RESET;
 616              		.loc 1 490 0
 617 02aa 044A     		ldr	r2, .L32+4
 618 02ac 1168     		ldr	r1, [r2]
 619              	.LVL18:
 620 02ae 044B     		ldr	r3, .L32+8
 621 02b0 0B40     		ands	r3, r3, r1
 622 02b2 1360     		str	r3, [r2]
 623 02b4 7047     		bx	lr
 624              	.L33:
 625 02b6 00BF     		.align	2
 626              	.L32:
 627 02b8 600000A0 		.word	-1610612640
 628 02bc 800000A0 		.word	-1610612608
 629 02c0 FBFF0F00 		.word	1048571
 630              		.cfi_endproc
 631              	.LFE117:
 633              		.align	2
 634              		.global	FSMC_NANDECCCmd
 635              		.thumb
 636              		.thumb_func
 638              	FSMC_NANDECCCmd:
 639              	.LFB118:
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the FSMC NAND ECC feature.
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC NAND ECC feature.  
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 640              		.loc 1 505 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL19:
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 646              		.loc 1 509 0
 647 02c4 69B1     		cbz	r1, .L35
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 648              		.loc 1 512 0
 649 02c6 1028     		cmp	r0, #16
 650 02c8 05D1     		bne	.L36
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_ECCEN_SET;
 651              		.loc 1 514 0
 652 02ca 0D4B     		ldr	r3, .L39
 653 02cc 1A68     		ldr	r2, [r3]
 654 02ce 42F04002 		orr	r2, r2, #64
 655 02d2 1A60     		str	r2, [r3]
 656 02d4 7047     		bx	lr
 657              	.L36:
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_ECCEN_SET;
 658              		.loc 1 518 0
 659 02d6 0B4B     		ldr	r3, .L39+4
 660 02d8 1A68     		ldr	r2, [r3]
 661 02da 42F04002 		orr	r2, r2, #64
 662 02de 1A60     		str	r2, [r3]
 663 02e0 7047     		bx	lr
 664              	.L35:
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register *
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 665              		.loc 1 524 0
 666 02e2 1028     		cmp	r0, #16
 667 02e4 05D1     		bne	.L38
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_ECCEN_RESET;
 668              		.loc 1 526 0
 669 02e6 064A     		ldr	r2, .L39
 670 02e8 1168     		ldr	r1, [r2]
 671              	.LVL20:
 672 02ea 074B     		ldr	r3, .L39+8
 673 02ec 0B40     		ands	r3, r3, r1
 674 02ee 1360     		str	r3, [r2]
 675 02f0 7047     		bx	lr
 676              	.LVL21:
 677              	.L38:
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_ECCEN_RESET;
 678              		.loc 1 530 0
 679 02f2 044A     		ldr	r2, .L39+4
 680 02f4 1168     		ldr	r1, [r2]
 681              	.LVL22:
 682 02f6 044B     		ldr	r3, .L39+8
 683 02f8 0B40     		ands	r3, r3, r1
 684 02fa 1360     		str	r3, [r2]
 685 02fc 7047     		bx	lr
 686              	.L40:
 687 02fe 00BF     		.align	2
 688              	.L39:
 689 0300 600000A0 		.word	-1610612640
 690 0304 800000A0 		.word	-1610612608
 691 0308 BFFF0F00 		.word	1048511
 692              		.cfi_endproc
 693              	.LFE118:
 695              		.align	2
 696              		.global	FSMC_GetECC
 697              		.thumb
 698              		.thumb_func
 700              	FSMC_GetECC:
 701              	.LFB119:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Returns the error correction code register value.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The Error Correction Code (ECC) value.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** uint32_t FSMC_GetECC(uint32_t FSMC_Bank)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 702              		.loc 1 544 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL23:
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t eccval = 0x00000000;
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 708              		.loc 1 547 0
 709 030c 1028     		cmp	r0, #16
 710 030e 02D1     		bne	.L42
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR2 register value */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank2->ECCR2;
 711              		.loc 1 550 0
 712 0310 024B     		ldr	r3, .L44
 713 0312 5869     		ldr	r0, [r3, #20]
 714              	.LVL24:
 715 0314 7047     		bx	lr
 716              	.LVL25:
 717              	.L42:
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR3 register value */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank3->ECCR3;
 718              		.loc 1 555 0
 719 0316 024B     		ldr	r3, .L44+4
 720 0318 5869     		ldr	r0, [r3, #20]
 721              	.LVL26:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the error correction code value */
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return(eccval);
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 722              		.loc 1 559 0
 723 031a 7047     		bx	lr
 724              	.L45:
 725              		.align	2
 726              	.L44:
 727 031c 600000A0 		.word	-1610612640
 728 0320 800000A0 		.word	-1610612608
 729              		.cfi_endproc
 730              	.LFE119:
 732              		.align	2
 733              		.global	FSMC_PCCARDDeInit
 734              		.thumb
 735              		.thumb_func
 737              	FSMC_PCCARDDeInit:
 738              	.LFB120:
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group3 PCCARD Controller functions
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   PCCARD Controller functions 
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     PCCARD Controller functions
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  16-bit PC Card compatible memory connected to the PCCARD Bank:
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_PCCARDInitTypeDef structure, for example:
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInitTypeDef  FSMC_PCCARDInitStructure;
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_PCCARDInitStructure variable with the allowed values of
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the PCCARD Controller by calling the function
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInit(&FSMC_PCCARDInitStructure); 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the PCCARD Bank:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDCmd(ENABLE);  
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the PCCARD Bank. 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC PCCARD Bank registers to their default reset values.
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  None                       
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDDeInit(void)
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 739              		.loc 1 608 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the FSMC_Bank4 registers to their reset values */
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = 0x00000018; 
 744              		.loc 1 610 0
 745 0324 054B     		ldr	r3, .L47
 746 0326 1822     		movs	r2, #24
 747 0328 1A60     		str	r2, [r3]
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->SR4 = 0x00000000;	
 748              		.loc 1 611 0
 749 032a 0022     		movs	r2, #0
 750 032c 5A60     		str	r2, [r3, #4]
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
 751              		.loc 1 612 0
 752 032e 4FF0FC32 		mov	r2, #-50529028
 753 0332 9A60     		str	r2, [r3, #8]
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = 0xFCFCFCFC;
 754              		.loc 1 613 0
 755 0334 DA60     		str	r2, [r3, #12]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = 0xFCFCFCFC;
 756              		.loc 1 614 0
 757 0336 1A61     		str	r2, [r3, #16]
 758 0338 7047     		bx	lr
 759              	.L48:
 760 033a 00BF     		.align	2
 761              	.L47:
 762 033c A00000A0 		.word	-1610612576
 763              		.cfi_endproc
 764              	.LFE120:
 766              		.align	2
 767              		.global	FSMC_PCCARDInit
 768              		.thumb
 769              		.thumb_func
 771              	FSMC_PCCARDInit:
 772              	.LFB121:
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC PCCARD Bank according to the specified parameters
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_PCCARDInitStruct.
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef structure
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC PCCARD Bank.                  
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 773              		.loc 1 625 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL27:
 779 0340 10B4     		push	{r4}
 780              		.cfi_def_cfa_offset 4
 781              		.cfi_offset 4, -4
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTi
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetu
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetu
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupT
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_Setu
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitS
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldS
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSet
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime))
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTim
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTim
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime)
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 782              		.loc 1 646 0
 783 0342 0368     		ldr	r3, [r0]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 784              		.loc 1 648 0
 785 0344 4268     		ldr	r2, [r0, #4]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 786              		.loc 1 647 0
 787 0346 43EA4222 		orr	r2, r3, r2, lsl #9
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
 788              		.loc 1 649 0
 789 034a 8368     		ldr	r3, [r0, #8]
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 790              		.loc 1 648 0
 791 034c 42EA4333 		orr	r3, r2, r3, lsl #13
 792 0350 43F01002 		orr	r2, r3, #16
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 793              		.loc 1 646 0
 794 0354 144B     		ldr	r3, .L50
 795 0356 1A60     		str	r2, [r3]
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 796              		.loc 1 652 0
 797 0358 C268     		ldr	r2, [r0, #12]
 798 035a 1168     		ldr	r1, [r2]
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 799              		.loc 1 653 0
 800 035c 5468     		ldr	r4, [r2, #4]
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 801              		.loc 1 652 0
 802 035e 41EA0424 		orr	r4, r1, r4, lsl #8
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 803              		.loc 1 654 0
 804 0362 9168     		ldr	r1, [r2, #8]
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 805              		.loc 1 653 0
 806 0364 44EA0141 		orr	r1, r4, r1, lsl #16
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24
 807              		.loc 1 655 0
 808 0368 D468     		ldr	r4, [r2, #12]
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 809              		.loc 1 654 0
 810 036a 41EA0461 		orr	r1, r1, r4, lsl #24
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 811              		.loc 1 652 0
 812 036e 9960     		str	r1, [r3, #8]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 813              		.loc 1 658 0
 814 0370 0269     		ldr	r2, [r0, #16]
 815 0372 1168     		ldr	r1, [r2]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 816              		.loc 1 659 0
 817 0374 5468     		ldr	r4, [r2, #4]
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 818              		.loc 1 658 0
 819 0376 41EA0424 		orr	r4, r1, r4, lsl #8
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 820              		.loc 1 660 0
 821 037a 9168     		ldr	r1, [r2, #8]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 822              		.loc 1 659 0
 823 037c 44EA0141 		orr	r1, r4, r1, lsl #16
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime <<
 824              		.loc 1 661 0
 825 0380 D468     		ldr	r4, [r2, #12]
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 826              		.loc 1 660 0
 827 0382 41EA0461 		orr	r1, r1, r4, lsl #24
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 828              		.loc 1 658 0
 829 0386 D960     		str	r1, [r3, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 830              		.loc 1 664 0
 831 0388 4269     		ldr	r2, [r0, #20]
 832 038a 1168     		ldr	r1, [r2]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 833              		.loc 1 665 0
 834 038c 5068     		ldr	r0, [r2, #4]
 835              	.LVL28:
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 836              		.loc 1 664 0
 837 038e 41EA0020 		orr	r0, r1, r0, lsl #8
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 838              		.loc 1 666 0
 839 0392 9168     		ldr	r1, [r2, #8]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 840              		.loc 1 665 0
 841 0394 40EA0141 		orr	r1, r0, r1, lsl #16
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);   
 842              		.loc 1 667 0
 843 0398 D068     		ldr	r0, [r2, #12]
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 844              		.loc 1 666 0
 845 039a 41EA0061 		orr	r1, r1, r0, lsl #24
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 846              		.loc 1 664 0
 847 039e 1961     		str	r1, [r3, #16]
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 848              		.loc 1 668 0
 849 03a0 5DF8044B 		ldr	r4, [sp], #4
 850 03a4 7047     		bx	lr
 851              	.L51:
 852 03a6 00BF     		.align	2
 853              	.L50:
 854 03a8 A00000A0 		.word	-1610612576
 855              		.cfi_endproc
 856              	.LFE121:
 858              		.align	2
 859              		.global	FSMC_PCCARDStructInit
 860              		.thumb
 861              		.thumb_func
 863              	FSMC_PCCARDStructInit:
 864              	.LFB122:
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef structure
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 865              		.loc 1 677 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL29:
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset PCCARD Init structure parameters values */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 871              		.loc 1 679 0
 872 03ac 0023     		movs	r3, #0
 873 03ae 0360     		str	r3, [r0]
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
 874              		.loc 1 680 0
 875 03b0 4360     		str	r3, [r0, #4]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
 876              		.loc 1 681 0
 877 03b2 8360     		str	r3, [r0, #8]
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 878              		.loc 1 682 0
 879 03b4 C268     		ldr	r2, [r0, #12]
 880 03b6 FC23     		movs	r3, #252
 881 03b8 1360     		str	r3, [r2]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 882              		.loc 1 683 0
 883 03ba C268     		ldr	r2, [r0, #12]
 884 03bc 5360     		str	r3, [r2, #4]
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 885              		.loc 1 684 0
 886 03be C268     		ldr	r2, [r0, #12]
 887 03c0 9360     		str	r3, [r2, #8]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 888              		.loc 1 685 0
 889 03c2 C268     		ldr	r2, [r0, #12]
 890 03c4 D360     		str	r3, [r2, #12]
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 891              		.loc 1 686 0
 892 03c6 0269     		ldr	r2, [r0, #16]
 893 03c8 1360     		str	r3, [r2]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 894              		.loc 1 687 0
 895 03ca 0269     		ldr	r2, [r0, #16]
 896 03cc 5360     		str	r3, [r2, #4]
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 897              		.loc 1 688 0
 898 03ce 0269     		ldr	r2, [r0, #16]
 899 03d0 9360     		str	r3, [r2, #8]
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
 900              		.loc 1 689 0
 901 03d2 0269     		ldr	r2, [r0, #16]
 902 03d4 D360     		str	r3, [r2, #12]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 903              		.loc 1 690 0
 904 03d6 4269     		ldr	r2, [r0, #20]
 905 03d8 1360     		str	r3, [r2]
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 906              		.loc 1 691 0
 907 03da 4269     		ldr	r2, [r0, #20]
 908 03dc 5360     		str	r3, [r2, #4]
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 909              		.loc 1 692 0
 910 03de 4269     		ldr	r2, [r0, #20]
 911 03e0 9360     		str	r3, [r2, #8]
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 912              		.loc 1 693 0
 913 03e2 4269     		ldr	r2, [r0, #20]
 914 03e4 D360     		str	r3, [r2, #12]
 915 03e6 7047     		bx	lr
 916              		.cfi_endproc
 917              	.LFE122:
 919              		.align	2
 920              		.global	FSMC_PCCARDCmd
 921              		.thumb
 922              		.thumb_func
 924              	FSMC_PCCARDCmd:
 925              	.LFB123:
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the PCCARD Memory Bank.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the PCCARD Memory Bank.  
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 926              		.loc 1 703 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL30:
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 932              		.loc 1 706 0
 933 03e8 28B1     		cbz	r0, .L54
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 |= PCR_PBKEN_SET;
 934              		.loc 1 709 0
 935 03ea 064B     		ldr	r3, .L56
 936 03ec 1A68     		ldr	r2, [r3]
 937 03ee 42F00402 		orr	r2, r2, #4
 938 03f2 1A60     		str	r2, [r3]
 939 03f4 7047     		bx	lr
 940              	.L54:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 &= PCR_PBKEN_RESET;
 941              		.loc 1 714 0
 942 03f6 034A     		ldr	r2, .L56
 943 03f8 1168     		ldr	r1, [r2]
 944 03fa 034B     		ldr	r3, .L56+4
 945 03fc 0B40     		ands	r3, r3, r1
 946 03fe 1360     		str	r3, [r2]
 947 0400 7047     		bx	lr
 948              	.L57:
 949 0402 00BF     		.align	2
 950              	.L56:
 951 0404 A00000A0 		.word	-1610612576
 952 0408 FBFF0F00 		.word	1048571
 953              		.cfi_endproc
 954              	.LFE123:
 956              		.align	2
 957              		.global	FSMC_ITConfig
 958              		.thumb
 959              		.thumb_func
 961              	FSMC_ITConfig:
 962              	.LFB124:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group4  Interrupts and flags management functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief    Interrupts and flags management functions
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      Interrupts and flags management functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified FSMC interrupts.
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt sources to be enabled or disabled.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the specified FSMC interrupts.
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 963              		.loc 1 750 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 968              	.LVL31:
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));	
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 969              		.loc 1 755 0
 970 040c 9AB1     		cbz	r2, .L59
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank2 interrupts */
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 971              		.loc 1 758 0
 972 040e 1028     		cmp	r0, #16
 973 0410 04D1     		bne	.L60
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 |= FSMC_IT;
 974              		.loc 1 760 0
 975 0412 144B     		ldr	r3, .L65
 976 0414 5A68     		ldr	r2, [r3, #4]
 977              	.LVL32:
 978 0416 1143     		orrs	r1, r1, r2
 979              	.LVL33:
 980 0418 5960     		str	r1, [r3, #4]
 981 041a 7047     		bx	lr
 982              	.LVL34:
 983              	.L60:
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank3 interrupts */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 984              		.loc 1 763 0
 985 041c B0F5807F 		cmp	r0, #256
 986 0420 04D1     		bne	.L62
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 |= FSMC_IT;
 987              		.loc 1 765 0
 988 0422 114B     		ldr	r3, .L65+4
 989 0424 5A68     		ldr	r2, [r3, #4]
 990              	.LVL35:
 991 0426 1143     		orrs	r1, r1, r2
 992              	.LVL36:
 993 0428 5960     		str	r1, [r3, #4]
 994 042a 7047     		bx	lr
 995              	.LVL37:
 996              	.L62:
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank4 interrupts */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 |= FSMC_IT;    
 997              		.loc 1 770 0
 998 042c 0F4B     		ldr	r3, .L65+8
 999 042e 5A68     		ldr	r2, [r3, #4]
 1000              	.LVL38:
 1001 0430 1143     		orrs	r1, r1, r2
 1002              	.LVL39:
 1003 0432 5960     		str	r1, [r3, #4]
 1004 0434 7047     		bx	lr
 1005              	.LVL40:
 1006              	.L59:
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank2 interrupts */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1007              		.loc 1 776 0
 1008 0436 1028     		cmp	r0, #16
 1009 0438 05D1     		bne	.L63
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 &= (uint32_t)~FSMC_IT;
 1010              		.loc 1 779 0
 1011 043a 0A4B     		ldr	r3, .L65
 1012 043c 5A68     		ldr	r2, [r3, #4]
 1013              	.LVL41:
 1014 043e 22EA0101 		bic	r1, r2, r1
 1015              	.LVL42:
 1016 0442 5960     		str	r1, [r3, #4]
 1017 0444 7047     		bx	lr
 1018              	.LVL43:
 1019              	.L63:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank3 interrupts */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1020              		.loc 1 782 0
 1021 0446 B0F5807F 		cmp	r0, #256
 1022 044a 05D1     		bne	.L64
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 &= (uint32_t)~FSMC_IT;
 1023              		.loc 1 784 0
 1024 044c 064B     		ldr	r3, .L65+4
 1025 044e 5A68     		ldr	r2, [r3, #4]
 1026              	.LVL44:
 1027 0450 22EA0101 		bic	r1, r2, r1
 1028              	.LVL45:
 1029 0454 5960     		str	r1, [r3, #4]
 1030 0456 7047     		bx	lr
 1031              	.LVL46:
 1032              	.L64:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank4 interrupts */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 &= (uint32_t)~FSMC_IT;    
 1033              		.loc 1 789 0
 1034 0458 044B     		ldr	r3, .L65+8
 1035 045a 5A68     		ldr	r2, [r3, #4]
 1036              	.LVL47:
 1037 045c 22EA0101 		bic	r1, r2, r1
 1038              	.LVL48:
 1039 0460 5960     		str	r1, [r3, #4]
 1040 0462 7047     		bx	lr
 1041              	.L66:
 1042              		.align	2
 1043              	.L65:
 1044 0464 600000A0 		.word	-1610612640
 1045 0468 800000A0 		.word	-1610612608
 1046 046c A00000A0 		.word	-1610612576
 1047              		.cfi_endproc
 1048              	.LFE124:
 1050              		.align	2
 1051              		.global	FSMC_GetFlagStatus
 1052              		.thumb
 1053              		.thumb_func
 1055              	FSMC_GetFlagStatus:
 1056              	.LFB125:
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC flag is set or not.
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to check.
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FEMPT: Fifo empty Flag. 
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_FLAG (SET or RESET).
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1057              		.loc 1 810 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062              	.LVL49:
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FlagStatus bitstatus = RESET;
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x00000000;
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1063              		.loc 1 818 0
 1064 0470 1028     		cmp	r0, #16
 1065 0472 02D1     		bne	.L68
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1066              		.loc 1 820 0
 1067 0474 084B     		ldr	r3, .L73
 1068 0476 5B68     		ldr	r3, [r3, #4]
 1069              	.LVL50:
 1070 0478 07E0     		b	.L69
 1071              	.LVL51:
 1072              	.L68:
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1073              		.loc 1 822 0
 1074 047a B0F5807F 		cmp	r0, #256
 1075 047e 02D1     		bne	.L70
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1076              		.loc 1 824 0
 1077 0480 064B     		ldr	r3, .L73+4
 1078 0482 5B68     		ldr	r3, [r3, #4]
 1079              	.LVL52:
 1080 0484 01E0     		b	.L69
 1081              	.LVL53:
 1082              	.L70:
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1083              		.loc 1 829 0
 1084 0486 064B     		ldr	r3, .L73+8
 1085 0488 5B68     		ldr	r3, [r3, #4]
 1086              	.LVL54:
 1087              	.L69:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Get the flag status */
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((tmpsr & FSMC_FLAG) != (uint16_t)RESET )
 1088              		.loc 1 833 0
 1089 048a 0B42     		tst	r3, r1
 1090 048c 01D0     		beq	.L72
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1091              		.loc 1 835 0
 1092 048e 0120     		movs	r0, #1
 1093              	.LVL55:
 1094 0490 7047     		bx	lr
 1095              	.LVL56:
 1096              	.L72:
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1097              		.loc 1 839 0
 1098 0492 0020     		movs	r0, #0
 1099              	.LVL57:
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the flag status */
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus;
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1100              		.loc 1 843 0
 1101 0494 7047     		bx	lr
 1102              	.L74:
 1103 0496 00BF     		.align	2
 1104              	.L73:
 1105 0498 600000A0 		.word	-1610612640
 1106 049c 800000A0 		.word	-1610612608
 1107 04a0 A00000A0 		.word	-1610612576
 1108              		.cfi_endproc
 1109              	.LFE125:
 1111              		.align	2
 1112              		.global	FSMC_ClearFlag
 1113              		.thumb
 1114              		.thumb_func
 1116              	FSMC_ClearFlag:
 1117              	.LFB126:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's pending flags.
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to clear.
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1118              		.loc 1 860 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL58:
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  /* Check the parameters */
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1124              		.loc 1 865 0
 1125 04a4 1028     		cmp	r0, #16
 1126 04a6 05D1     		bne	.L76
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
 1127              		.loc 1 867 0
 1128 04a8 0A4B     		ldr	r3, .L79
 1129 04aa 5A68     		ldr	r2, [r3, #4]
 1130 04ac 22EA0101 		bic	r1, r2, r1
 1131              	.LVL59:
 1132 04b0 5960     		str	r1, [r3, #4]
 1133 04b2 7047     		bx	lr
 1134              	.LVL60:
 1135              	.L76:
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1136              		.loc 1 869 0
 1137 04b4 B0F5807F 		cmp	r0, #256
 1138 04b8 05D1     		bne	.L78
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~FSMC_FLAG;
 1139              		.loc 1 871 0
 1140 04ba 074B     		ldr	r3, .L79+4
 1141 04bc 5A68     		ldr	r2, [r3, #4]
 1142 04be 22EA0101 		bic	r1, r2, r1
 1143              	.LVL61:
 1144 04c2 5960     		str	r1, [r3, #4]
 1145 04c4 7047     		bx	lr
 1146              	.LVL62:
 1147              	.L78:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~FSMC_FLAG;
 1148              		.loc 1 876 0
 1149 04c6 054B     		ldr	r3, .L79+8
 1150 04c8 5A68     		ldr	r2, [r3, #4]
 1151 04ca 22EA0101 		bic	r1, r2, r1
 1152              	.LVL63:
 1153 04ce 5960     		str	r1, [r3, #4]
 1154 04d0 7047     		bx	lr
 1155              	.L80:
 1156 04d2 00BF     		.align	2
 1157              	.L79:
 1158 04d4 600000A0 		.word	-1610612640
 1159 04d8 800000A0 		.word	-1610612608
 1160 04dc A00000A0 		.word	-1610612576
 1161              		.cfi_endproc
 1162              	.LFE126:
 1164              		.align	2
 1165              		.global	FSMC_GetITStatus
 1166              		.thumb
 1167              		.thumb_func
 1169              	FSMC_GetITStatus:
 1170              	.LFB127:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC interrupt has occurred or not.
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt source to check.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt. 
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_IT (SET or RESET).
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1171              		.loc 1 895 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL64:
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ITStatus bitstatus = RESET;
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x0, itstatus = 0x0, itenable = 0x0; 
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_IT(FSMC_IT));
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1177              		.loc 1 903 0
 1178 04e0 1028     		cmp	r0, #16
 1179 04e2 02D1     		bne	.L82
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1180              		.loc 1 905 0
 1181 04e4 0A4B     		ldr	r3, .L88
 1182 04e6 5B68     		ldr	r3, [r3, #4]
 1183              	.LVL65:
 1184 04e8 07E0     		b	.L83
 1185              	.LVL66:
 1186              	.L82:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1187              		.loc 1 907 0
 1188 04ea B0F5807F 		cmp	r0, #256
 1189 04ee 02D1     		bne	.L84
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1190              		.loc 1 909 0
 1191 04f0 084B     		ldr	r3, .L88+4
 1192 04f2 5B68     		ldr	r3, [r3, #4]
 1193              	.LVL67:
 1194 04f4 01E0     		b	.L83
 1195              	.LVL68:
 1196              	.L84:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1197              		.loc 1 914 0
 1198 04f6 084B     		ldr	r3, .L88+8
 1199 04f8 5B68     		ldr	r3, [r3, #4]
 1200              	.LVL69:
 1201              	.L83:
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itstatus = tmpsr & FSMC_IT;
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itenable = tmpsr & (FSMC_IT >> 3);
 1202              		.loc 1 919 0
 1203 04fa 03EAD102 		and	r2, r3, r1, lsr #3
 1204              	.LVL70:
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((itstatus != (uint32_t)RESET)  && (itenable != (uint32_t)RESET))
 1205              		.loc 1 920 0
 1206 04fe 0B42     		tst	r3, r1
 1207 0500 02D0     		beq	.L86
 1208              		.loc 1 920 0 is_stmt 0 discriminator 1
 1209 0502 1AB9     		cbnz	r2, .L87
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1210              		.loc 1 926 0 is_stmt 1
 1211 0504 0020     		movs	r0, #0
 1212              	.LVL71:
 1213 0506 7047     		bx	lr
 1214              	.LVL72:
 1215              	.L86:
 1216 0508 0020     		movs	r0, #0
 1217              	.LVL73:
 1218 050a 7047     		bx	lr
 1219              	.LVL74:
 1220              	.L87:
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1221              		.loc 1 922 0
 1222 050c 0120     		movs	r0, #1
 1223              	.LVL75:
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus; 
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1224              		.loc 1 929 0
 1225 050e 7047     		bx	lr
 1226              	.L89:
 1227              		.align	2
 1228              	.L88:
 1229 0510 600000A0 		.word	-1610612640
 1230 0514 800000A0 		.word	-1610612608
 1231 0518 A00000A0 		.word	-1610612576
 1232              		.cfi_endproc
 1233              	.LFE127:
 1235              		.align	2
 1236              		.global	FSMC_ClearITPendingBit
 1237              		.thumb
 1238              		.thumb_func
 1240              	FSMC_ClearITPendingBit:
 1241              	.LFB128:
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's interrupt pending bits.
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the interrupt pending bit to clear.
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1242              		.loc 1 946 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL76:
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1248              		.loc 1 951 0
 1249 051c 1028     		cmp	r0, #16
 1250 051e 05D1     		bne	.L91
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
 1251              		.loc 1 953 0
 1252 0520 0A4B     		ldr	r3, .L94
 1253 0522 5A68     		ldr	r2, [r3, #4]
 1254 0524 22EAD101 		bic	r1, r2, r1, lsr #3
 1255              	.LVL77:
 1256 0528 5960     		str	r1, [r3, #4]
 1257 052a 7047     		bx	lr
 1258              	.LVL78:
 1259              	.L91:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1260              		.loc 1 955 0
 1261 052c B0F5807F 		cmp	r0, #256
 1262 0530 05D1     		bne	.L93
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
 1263              		.loc 1 957 0
 1264 0532 074B     		ldr	r3, .L94+4
 1265 0534 5A68     		ldr	r2, [r3, #4]
 1266 0536 22EAD101 		bic	r1, r2, r1, lsr #3
 1267              	.LVL79:
 1268 053a 5960     		str	r1, [r3, #4]
 1269 053c 7047     		bx	lr
 1270              	.LVL80:
 1271              	.L93:
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
 1272              		.loc 1 962 0
 1273 053e 054B     		ldr	r3, .L94+8
 1274 0540 5A68     		ldr	r2, [r3, #4]
 1275 0542 22EAD101 		bic	r1, r2, r1, lsr #3
 1276              	.LVL81:
 1277 0546 5960     		str	r1, [r3, #4]
 1278 0548 7047     		bx	lr
 1279              	.L95:
 1280 054a 00BF     		.align	2
 1281              	.L94:
 1282 054c 600000A0 		.word	-1610612640
 1283 0550 800000A0 		.word	-1610612608
 1284 0554 A00000A0 		.word	-1610612576
 1285              		.cfi_endproc
 1286              	.LFE128:
 1288              	.Letext0:
 1289              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\mach
 1290              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\stdi
 1291              		.file 4 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\STM32F4xx\\Include/s
 1292              		.file 5 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\STM32F4xx_StdPeriph_
 1293              		.file 6 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\CMSIS\\Include/core_
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_fsmc.c
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:23     .text:00000000 FSMC_NORSRAMDeInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:64     .text:00000038 FSMC_NORSRAMInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:216    .text:00000100 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:220    .text:00000104 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:225    .text:00000104 FSMC_NORSRAMStructInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:321    .text:00000170 FSMC_NORSRAMCmd
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:349    .text:00000198 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:353    .text:0000019c $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:358    .text:0000019c FSMC_NANDDeInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:399    .text:000001c8 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:404    .text:000001d0 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:409    .text:000001d0 FSMC_NANDInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:508    .text:0000023c $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:513    .text:00000244 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:518    .text:00000244 FSMC_NANDStructInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:576    .text:0000027c FSMC_NANDCmd
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:627    .text:000002b8 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:633    .text:000002c4 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:638    .text:000002c4 FSMC_NANDECCCmd
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:689    .text:00000300 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:695    .text:0000030c $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:700    .text:0000030c FSMC_GetECC
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:727    .text:0000031c $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:732    .text:00000324 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:737    .text:00000324 FSMC_PCCARDDeInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:762    .text:0000033c $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:766    .text:00000340 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:771    .text:00000340 FSMC_PCCARDInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:854    .text:000003a8 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:858    .text:000003ac $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:863    .text:000003ac FSMC_PCCARDStructInit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:924    .text:000003e8 FSMC_PCCARDCmd
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:951    .text:00000404 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:956    .text:0000040c $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:961    .text:0000040c FSMC_ITConfig
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1044   .text:00000464 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1050   .text:00000470 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1055   .text:00000470 FSMC_GetFlagStatus
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1105   .text:00000498 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1111   .text:000004a4 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1116   .text:000004a4 FSMC_ClearFlag
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1158   .text:000004d4 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1164   .text:000004e0 $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1169   .text:000004e0 FSMC_GetITStatus
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1229   .text:00000510 $d
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1235   .text:0000051c $t
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1240   .text:0000051c FSMC_ClearITPendingBit
C:\Users\Filip\AppData\Local\Temp\cchkgwlD.s:1282   .text:0000054c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1c01c98cf54d5aaab4df87c6bb476f00
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_fsmc.h.241.6213be450776ba272e78f517c98865a5

NO UNDEFINED SYMBOLS
