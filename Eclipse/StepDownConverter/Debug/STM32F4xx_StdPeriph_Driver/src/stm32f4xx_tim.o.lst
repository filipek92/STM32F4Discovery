   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.thumb
  20              		.thumb_func
  22              	TI1_Config:
  23              	.LFB198:
  24              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
1788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
1818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
1821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
1909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
1919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
1923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
1954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
1968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
1969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
1975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
1977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
1981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
1984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
1986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
1990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
1995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
2246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
2265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
2270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
2290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
2295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
2314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
2319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
2373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
2378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
2408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
2444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
2517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
2590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
2619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
2624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
2644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
2649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
2680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
2734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
2743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
2782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
2825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
2930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
3014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
3062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
3063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
3075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
3090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
3116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
3119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
3124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
3168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  25              		.loc 1 3193 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 30B4     		push	{r4, r5}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 5, -4
  35              	.LVL1:
3194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
  36              		.loc 1 3197 0
  37 0002 048C     		ldrh	r4, [r0, #32]
  38 0004 24F00104 		bic	r4, r4, #1
  39 0008 2404     		lsls	r4, r4, #16
  40 000a 240C     		lsrs	r4, r4, #16
  41 000c 0484     		strh	r4, [r0, #32]	@ movhi
3198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  42              		.loc 1 3198 0
  43 000e 048B     		ldrh	r4, [r0, #24]
  44              	.LVL2:
3199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
  45              		.loc 1 3199 0
  46 0010 058C     		ldrh	r5, [r0, #32]
  47              	.LVL3:
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
  48              		.loc 1 3202 0
  49 0012 24F0F304 		bic	r4, r4, #243
  50              	.LVL4:
  51 0016 2404     		lsls	r4, r4, #16
  52 0018 240C     		lsrs	r4, r4, #16
  53              	.LVL5:
3203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  54              		.loc 1 3203 0
  55 001a 1B01     		lsls	r3, r3, #4
  56              	.LVL6:
  57 001c 9BB2     		uxth	r3, r3
  58 001e 1A43     		orrs	r2, r2, r3
  59              	.LVL7:
  60 0020 1443     		orrs	r4, r4, r2
  61              	.LVL8:
3204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  62              		.loc 1 3206 0
  63 0022 25F00A03 		bic	r3, r5, #10
  64 0026 1B04     		lsls	r3, r3, #16
  65 0028 1B0C     		lsrs	r3, r3, #16
  66              	.LVL9:
3207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  67              		.loc 1 3207 0
  68 002a 1943     		orrs	r1, r1, r3
  69              	.LVL10:
  70 002c 41F00103 		orr	r3, r1, #1
  71              	.LVL11:
3208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  72              		.loc 1 3210 0
  73 0030 0483     		strh	r4, [r0, #24]	@ movhi
3211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
  74              		.loc 1 3211 0
  75 0032 0384     		strh	r3, [r0, #32]	@ movhi
3212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
  76              		.loc 1 3212 0
  77 0034 30BC     		pop	{r4, r5}
  78              	.LVL12:
  79 0036 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE198:
  83              		.align	2
  84              		.thumb
  85              		.thumb_func
  87              	TI2_Config:
  88              	.LFB199:
3213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  89              		.loc 1 3234 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL13:
  95 0038 30B4     		push	{r4, r5}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 5, -4
  99              	.LVL14:
3235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
3236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 100              		.loc 1 3238 0
 101 003a 048C     		ldrh	r4, [r0, #32]
 102 003c 24F01004 		bic	r4, r4, #16
 103 0040 2404     		lsls	r4, r4, #16
 104 0042 240C     		lsrs	r4, r4, #16
 105 0044 0484     		strh	r4, [r0, #32]	@ movhi
3239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 106              		.loc 1 3239 0
 107 0046 058B     		ldrh	r5, [r0, #24]
 108              	.LVL15:
3240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 109              		.loc 1 3240 0
 110 0048 048C     		ldrh	r4, [r0, #32]
 111              	.LVL16:
3241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 112              		.loc 1 3241 0
 113 004a 0901     		lsls	r1, r1, #4
 114              	.LVL17:
 115 004c 89B2     		uxth	r1, r1
 116              	.LVL18:
3242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 117              		.loc 1 3244 0
 118 004e 25F44075 		bic	r5, r5, #768
 119              	.LVL19:
 120 0052 2D05     		lsls	r5, r5, #20
 121 0054 2D0D     		lsrs	r5, r5, #20
 122              	.LVL20:
3245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 123              		.loc 1 3245 0
 124 0056 1B03     		lsls	r3, r3, #12
 125              	.LVL21:
 126 0058 9BB2     		uxth	r3, r3
 127 005a 1D43     		orrs	r5, r5, r3
 128              	.LVL22:
3246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 129              		.loc 1 3246 0
 130 005c 1202     		lsls	r2, r2, #8
 131              	.LVL23:
 132 005e 92B2     		uxth	r2, r2
 133 0060 1543     		orrs	r5, r5, r2
 134              	.LVL24:
3247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 135              		.loc 1 3249 0
 136 0062 24F0A003 		bic	r3, r4, #160
 137 0066 1B04     		lsls	r3, r3, #16
 138 0068 1B0C     		lsrs	r3, r3, #16
 139              	.LVL25:
3250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 140              		.loc 1 3250 0
 141 006a 0B43     		orrs	r3, r3, r1
 142              	.LVL26:
 143 006c 43F01003 		orr	r3, r3, #16
 144              	.LVL27:
3251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 145              		.loc 1 3253 0
 146 0070 0583     		strh	r5, [r0, #24]	@ movhi
3254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 147              		.loc 1 3254 0
 148 0072 0384     		strh	r3, [r0, #32]	@ movhi
3255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 149              		.loc 1 3255 0
 150 0074 30BC     		pop	{r4, r5}
 151              	.LVL28:
 152 0076 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE199:
 156              		.align	2
 157              		.thumb
 158              		.thumb_func
 160              	TI3_Config:
 161              	.LFB200:
3256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 162              		.loc 1 3276 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL29:
 168 0078 30B4     		push	{r4, r5}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 5, -4
 172              	.LVL30:
3277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 173              		.loc 1 3280 0
 174 007a 048C     		ldrh	r4, [r0, #32]
 175 007c 24F48074 		bic	r4, r4, #256
 176 0080 2404     		lsls	r4, r4, #16
 177 0082 240C     		lsrs	r4, r4, #16
 178 0084 0484     		strh	r4, [r0, #32]	@ movhi
3281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 179              		.loc 1 3281 0
 180 0086 848B     		ldrh	r4, [r0, #28]
 181              	.LVL31:
3282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 182              		.loc 1 3282 0
 183 0088 058C     		ldrh	r5, [r0, #32]
 184              	.LVL32:
3283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 185              		.loc 1 3283 0
 186 008a 0902     		lsls	r1, r1, #8
 187              	.LVL33:
 188 008c 89B2     		uxth	r1, r1
 189              	.LVL34:
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 190              		.loc 1 3286 0
 191 008e 24F0F304 		bic	r4, r4, #243
 192              	.LVL35:
 193 0092 2404     		lsls	r4, r4, #16
 194 0094 240C     		lsrs	r4, r4, #16
 195              	.LVL36:
3287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 196              		.loc 1 3287 0
 197 0096 1B01     		lsls	r3, r3, #4
 198              	.LVL37:
 199 0098 9BB2     		uxth	r3, r3
 200 009a 1A43     		orrs	r2, r2, r3
 201              	.LVL38:
 202 009c 1443     		orrs	r4, r4, r2
 203              	.LVL39:
3288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 204              		.loc 1 3290 0
 205 009e 25F42063 		bic	r3, r5, #2560
 206 00a2 1B04     		lsls	r3, r3, #16
 207 00a4 1B0C     		lsrs	r3, r3, #16
 208              	.LVL40:
3291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 209              		.loc 1 3291 0
 210 00a6 1943     		orrs	r1, r1, r3
 211              	.LVL41:
 212 00a8 41F48071 		orr	r1, r1, #256
 213              	.LVL42:
3292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 214              		.loc 1 3294 0
 215 00ac 8483     		strh	r4, [r0, #28]	@ movhi
3295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 216              		.loc 1 3295 0
 217 00ae 0184     		strh	r1, [r0, #32]	@ movhi
3296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 218              		.loc 1 3296 0
 219 00b0 30BC     		pop	{r4, r5}
 220              	.LVL43:
 221 00b2 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE200:
 225              		.align	2
 226              		.thumb
 227              		.thumb_func
 229              	TI4_Config:
 230              	.LFB201:
3297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 231              		.loc 1 3317 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL44:
 237 00b4 30B4     		push	{r4, r5}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 5, -4
 241              	.LVL45:
3318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 242              		.loc 1 3321 0
 243 00b6 048C     		ldrh	r4, [r0, #32]
 244 00b8 24F48054 		bic	r4, r4, #4096
 245 00bc 2404     		lsls	r4, r4, #16
 246 00be 240C     		lsrs	r4, r4, #16
 247 00c0 0484     		strh	r4, [r0, #32]	@ movhi
3322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 248              		.loc 1 3322 0
 249 00c2 858B     		ldrh	r5, [r0, #28]
 250              	.LVL46:
3323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 251              		.loc 1 3323 0
 252 00c4 048C     		ldrh	r4, [r0, #32]
 253              	.LVL47:
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 254              		.loc 1 3324 0
 255 00c6 0903     		lsls	r1, r1, #12
 256              	.LVL48:
 257 00c8 89B2     		uxth	r1, r1
 258              	.LVL49:
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 259              		.loc 1 3327 0
 260 00ca 25F44075 		bic	r5, r5, #768
 261              	.LVL50:
 262 00ce 2D05     		lsls	r5, r5, #20
 263 00d0 2D0D     		lsrs	r5, r5, #20
 264              	.LVL51:
3328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 265              		.loc 1 3328 0
 266 00d2 1202     		lsls	r2, r2, #8
 267              	.LVL52:
 268 00d4 92B2     		uxth	r2, r2
 269 00d6 1543     		orrs	r5, r5, r2
 270              	.LVL53:
3329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 271              		.loc 1 3329 0
 272 00d8 1B03     		lsls	r3, r3, #12
 273              	.LVL54:
 274 00da 9BB2     		uxth	r3, r3
 275 00dc 1D43     		orrs	r5, r5, r3
 276              	.LVL55:
3330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 277              		.loc 1 3332 0
 278 00de 24F40054 		bic	r4, r4, #8192
 279              	.LVL56:
 280 00e2 6404     		lsls	r4, r4, #17
 281 00e4 640C     		lsrs	r4, r4, #17
 282              	.LVL57:
3333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 283              		.loc 1 3333 0
 284 00e6 2143     		orrs	r1, r1, r4
 285              	.LVL58:
 286 00e8 41F48051 		orr	r1, r1, #4096
 287              	.LVL59:
3334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 288              		.loc 1 3336 0
 289 00ec 8583     		strh	r5, [r0, #28]	@ movhi
3337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 290              		.loc 1 3337 0
 291 00ee 0184     		strh	r1, [r0, #32]	@ movhi
3338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 292              		.loc 1 3338 0
 293 00f0 30BC     		pop	{r4, r5}
 294              	.LVL60:
 295 00f2 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE201:
 299              		.align	2
 300              		.global	TIM_DeInit
 301              		.thumb
 302              		.thumb_func
 304              	TIM_DeInit:
 305              	.LFB110:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 306              		.loc 1 195 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              	.LVL61:
 311 00f4 08B5     		push	{r3, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 3, -8
 314              		.cfi_offset 14, -4
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 315              		.loc 1 199 0
 316 00f6 584B     		ldr	r3, .L20
 317 00f8 9842     		cmp	r0, r3
 318 00fa 08D1     		bne	.L6
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 319              		.loc 1 201 0
 320 00fc 0120     		movs	r0, #1
 321              	.LVL62:
 322 00fe 0146     		mov	r1, r0
 323 0100 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 324              	.LVL63:
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 325              		.loc 1 202 0
 326 0104 0120     		movs	r0, #1
 327 0106 0021     		movs	r1, #0
 328 0108 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 329              	.LVL64:
 330 010c 08BD     		pop	{r3, pc}
 331              	.LVL65:
 332              	.L6:
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 333              		.loc 1 204 0
 334 010e B0F1804F 		cmp	r0, #1073741824
 335 0112 08D1     		bne	.L8
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 336              		.loc 1 206 0
 337 0114 0120     		movs	r0, #1
 338              	.LVL66:
 339 0116 0146     		mov	r1, r0
 340 0118 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 341              	.LVL67:
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 342              		.loc 1 207 0
 343 011c 0120     		movs	r0, #1
 344 011e 0021     		movs	r1, #0
 345 0120 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 346              	.LVL68:
 347 0124 08BD     		pop	{r3, pc}
 348              	.LVL69:
 349              	.L8:
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 350              		.loc 1 209 0
 351 0126 4D4B     		ldr	r3, .L20+4
 352 0128 9842     		cmp	r0, r3
 353 012a 08D1     		bne	.L9
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 354              		.loc 1 211 0
 355 012c 0220     		movs	r0, #2
 356              	.LVL70:
 357 012e 0121     		movs	r1, #1
 358 0130 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 359              	.LVL71:
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 360              		.loc 1 212 0
 361 0134 0220     		movs	r0, #2
 362 0136 0021     		movs	r1, #0
 363 0138 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 364              	.LVL72:
 365 013c 08BD     		pop	{r3, pc}
 366              	.LVL73:
 367              	.L9:
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 368              		.loc 1 214 0
 369 013e 484B     		ldr	r3, .L20+8
 370 0140 9842     		cmp	r0, r3
 371 0142 08D1     		bne	.L10
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 372              		.loc 1 216 0
 373 0144 0420     		movs	r0, #4
 374              	.LVL74:
 375 0146 0121     		movs	r1, #1
 376 0148 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 377              	.LVL75:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 378              		.loc 1 217 0
 379 014c 0420     		movs	r0, #4
 380 014e 0021     		movs	r1, #0
 381 0150 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 382              	.LVL76:
 383 0154 08BD     		pop	{r3, pc}
 384              	.LVL77:
 385              	.L10:
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 386              		.loc 1 219 0
 387 0156 434B     		ldr	r3, .L20+12
 388 0158 9842     		cmp	r0, r3
 389 015a 08D1     		bne	.L11
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 390              		.loc 1 221 0
 391 015c 0820     		movs	r0, #8
 392              	.LVL78:
 393 015e 0121     		movs	r1, #1
 394 0160 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 395              	.LVL79:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 396              		.loc 1 222 0
 397 0164 0820     		movs	r0, #8
 398 0166 0021     		movs	r1, #0
 399 0168 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 400              	.LVL80:
 401 016c 08BD     		pop	{r3, pc}
 402              	.LVL81:
 403              	.L11:
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 404              		.loc 1 224 0
 405 016e 3E4B     		ldr	r3, .L20+16
 406 0170 9842     		cmp	r0, r3
 407 0172 08D1     		bne	.L12
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 408              		.loc 1 226 0
 409 0174 1020     		movs	r0, #16
 410              	.LVL82:
 411 0176 0121     		movs	r1, #1
 412 0178 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 413              	.LVL83:
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 414              		.loc 1 227 0
 415 017c 1020     		movs	r0, #16
 416 017e 0021     		movs	r1, #0
 417 0180 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 418              	.LVL84:
 419 0184 08BD     		pop	{r3, pc}
 420              	.LVL85:
 421              	.L12:
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 422              		.loc 1 229 0
 423 0186 394B     		ldr	r3, .L20+20
 424 0188 9842     		cmp	r0, r3
 425 018a 08D1     		bne	.L13
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 426              		.loc 1 231 0
 427 018c 2020     		movs	r0, #32
 428              	.LVL86:
 429 018e 0121     		movs	r1, #1
 430 0190 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 431              	.LVL87:
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 432              		.loc 1 232 0
 433 0194 2020     		movs	r0, #32
 434 0196 0021     		movs	r1, #0
 435 0198 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 436              	.LVL88:
 437 019c 08BD     		pop	{r3, pc}
 438              	.LVL89:
 439              	.L13:
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 440              		.loc 1 234 0
 441 019e 344B     		ldr	r3, .L20+24
 442 01a0 9842     		cmp	r0, r3
 443 01a2 08D1     		bne	.L14
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 444              		.loc 1 236 0
 445 01a4 0220     		movs	r0, #2
 446              	.LVL90:
 447 01a6 0121     		movs	r1, #1
 448 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 449              	.LVL91:
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 450              		.loc 1 237 0
 451 01ac 0220     		movs	r0, #2
 452 01ae 0021     		movs	r1, #0
 453 01b0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 454              	.LVL92:
 455 01b4 08BD     		pop	{r3, pc}
 456              	.LVL93:
 457              	.L14:
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 458              		.loc 1 239 0
 459 01b6 2F4B     		ldr	r3, .L20+28
 460 01b8 9842     		cmp	r0, r3
 461 01ba 0AD1     		bne	.L15
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 462              		.loc 1 241 0
 463 01bc 4FF48030 		mov	r0, #65536
 464              	.LVL94:
 465 01c0 0121     		movs	r1, #1
 466 01c2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 467              	.LVL95:
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 468              		.loc 1 242 0
 469 01c6 4FF48030 		mov	r0, #65536
 470 01ca 0021     		movs	r1, #0
 471 01cc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 472              	.LVL96:
 473 01d0 08BD     		pop	{r3, pc}
 474              	.LVL97:
 475              	.L15:
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 476              		.loc 1 244 0
 477 01d2 294B     		ldr	r3, .L20+32
 478 01d4 9842     		cmp	r0, r3
 479 01d6 0AD1     		bne	.L16
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 480              		.loc 1 246 0
 481 01d8 4FF40030 		mov	r0, #131072
 482              	.LVL98:
 483 01dc 0121     		movs	r1, #1
 484 01de FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 485              	.LVL99:
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 486              		.loc 1 247 0
 487 01e2 4FF40030 		mov	r0, #131072
 488 01e6 0021     		movs	r1, #0
 489 01e8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 490              	.LVL100:
 491 01ec 08BD     		pop	{r3, pc}
 492              	.LVL101:
 493              	.L16:
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 494              		.loc 1 249 0
 495 01ee 234B     		ldr	r3, .L20+36
 496 01f0 9842     		cmp	r0, r3
 497 01f2 0AD1     		bne	.L17
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 498              		.loc 1 251 0
 499 01f4 4FF48020 		mov	r0, #262144
 500              	.LVL102:
 501 01f8 0121     		movs	r1, #1
 502 01fa FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 503              	.LVL103:
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 504              		.loc 1 252 0
 505 01fe 4FF48020 		mov	r0, #262144
 506 0202 0021     		movs	r1, #0
 507 0204 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 508              	.LVL104:
 509 0208 08BD     		pop	{r3, pc}
 510              	.LVL105:
 511              	.L17:
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 512              		.loc 1 254 0
 513 020a 1D4B     		ldr	r3, .L20+40
 514 020c 9842     		cmp	r0, r3
 515 020e 08D1     		bne	.L18
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 516              		.loc 1 256 0
 517 0210 4020     		movs	r0, #64
 518              	.LVL106:
 519 0212 0121     		movs	r1, #1
 520 0214 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 521              	.LVL107:
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 522              		.loc 1 257 0
 523 0218 4020     		movs	r0, #64
 524 021a 0021     		movs	r1, #0
 525 021c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 526              	.LVL108:
 527 0220 08BD     		pop	{r3, pc}
 528              	.LVL109:
 529              	.L18:
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 530              		.loc 1 259 0
 531 0222 184B     		ldr	r3, .L20+44
 532 0224 9842     		cmp	r0, r3
 533 0226 08D1     		bne	.L19
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 534              		.loc 1 261 0
 535 0228 8020     		movs	r0, #128
 536              	.LVL110:
 537 022a 0121     		movs	r1, #1
 538 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 539              	.LVL111:
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 540              		.loc 1 262 0
 541 0230 8020     		movs	r0, #128
 542 0232 0021     		movs	r1, #0
 543 0234 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 544              	.LVL112:
 545 0238 08BD     		pop	{r3, pc}
 546              	.LVL113:
 547              	.L19:
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 548              		.loc 1 266 0
 549 023a 134B     		ldr	r3, .L20+48
 550 023c 9842     		cmp	r0, r3
 551 023e 09D1     		bne	.L5
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 552              		.loc 1 268 0
 553 0240 4FF48070 		mov	r0, #256
 554              	.LVL114:
 555 0244 0121     		movs	r1, #1
 556 0246 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 557              	.LVL115:
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 558              		.loc 1 269 0
 559 024a 4FF48070 		mov	r0, #256
 560 024e 0021     		movs	r1, #0
 561 0250 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 562              	.LVL116:
 563              	.L5:
 564 0254 08BD     		pop	{r3, pc}
 565              	.L21:
 566 0256 00BF     		.align	2
 567              	.L20:
 568 0258 00000140 		.word	1073807360
 569 025c 00040040 		.word	1073742848
 570 0260 00080040 		.word	1073743872
 571 0264 000C0040 		.word	1073744896
 572 0268 00100040 		.word	1073745920
 573 026c 00140040 		.word	1073746944
 574 0270 00040140 		.word	1073808384
 575 0274 00400140 		.word	1073823744
 576 0278 00440140 		.word	1073824768
 577 027c 00480140 		.word	1073825792
 578 0280 00180040 		.word	1073747968
 579 0284 001C0040 		.word	1073748992
 580 0288 00200040 		.word	1073750016
 581              		.cfi_endproc
 582              	.LFE110:
 584              		.align	2
 585              		.global	TIM_TimeBaseInit
 586              		.thumb
 587              		.thumb_func
 589              	TIM_TimeBaseInit:
 590              	.LFB111:
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 591              		.loc 1 283 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL117:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 597              		.loc 1 291 0
 598 028c 0388     		ldrh	r3, [r0]
 599 028e 9BB2     		uxth	r3, r3
 600              	.LVL118:
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 601              		.loc 1 293 0
 602 0290 1B4A     		ldr	r2, .L28
 603 0292 9042     		cmp	r0, r2
 604 0294 12D0     		beq	.L23
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 605              		.loc 1 293 0 is_stmt 0 discriminator 1
 606 0296 02F58062 		add	r2, r2, #1024
 607 029a 9042     		cmp	r0, r2
 608 029c 0ED0     		beq	.L23
 609 029e B0F1804F 		cmp	r0, #1073741824
 610 02a2 0BD0     		beq	.L23
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 611              		.loc 1 294 0 is_stmt 1
 612 02a4 A2F58032 		sub	r2, r2, #65536
 613 02a8 9042     		cmp	r0, r2
 614 02aa 07D0     		beq	.L23
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 615              		.loc 1 294 0 is_stmt 0 discriminator 1
 616 02ac 02F58062 		add	r2, r2, #1024
 617 02b0 9042     		cmp	r0, r2
 618 02b2 03D0     		beq	.L23
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 619              		.loc 1 295 0 is_stmt 1
 620 02b4 02F58062 		add	r2, r2, #1024
 621 02b8 9042     		cmp	r0, r2
 622 02ba 03D1     		bne	.L24
 623              	.L23:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 624              		.loc 1 298 0
 625 02bc 23F07003 		bic	r3, r3, #112
 626              	.LVL119:
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 627              		.loc 1 299 0
 628 02c0 4A88     		ldrh	r2, [r1, #2]
 629 02c2 1343     		orrs	r3, r3, r2
 630              	.LVL120:
 631              	.L24:
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 632              		.loc 1 302 0
 633 02c4 0F4A     		ldr	r2, .L28+4
 634 02c6 9042     		cmp	r0, r2
 635 02c8 08D0     		beq	.L25
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 636              		.loc 1 302 0 is_stmt 0 discriminator 1
 637 02ca 02F58062 		add	r2, r2, #1024
 638 02ce 9042     		cmp	r0, r2
 639 02d0 04D0     		beq	.L25
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 640              		.loc 1 305 0 is_stmt 1
 641 02d2 23F44073 		bic	r3, r3, #768
 642              	.LVL121:
 643 02d6 9BB2     		uxth	r3, r3
 644              	.LVL122:
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 645              		.loc 1 306 0
 646 02d8 0A89     		ldrh	r2, [r1, #8]
 647 02da 1343     		orrs	r3, r3, r2
 648              	.LVL123:
 649              	.L25:
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 650              		.loc 1 309 0
 651 02dc 0380     		strh	r3, [r0]	@ movhi
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 652              		.loc 1 312 0
 653 02de 4B68     		ldr	r3, [r1, #4]
 654              	.LVL124:
 655 02e0 C362     		str	r3, [r0, #44]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 656              		.loc 1 315 0
 657 02e2 0B88     		ldrh	r3, [r1]
 658 02e4 0385     		strh	r3, [r0, #40]	@ movhi
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 659              		.loc 1 317 0
 660 02e6 064B     		ldr	r3, .L28
 661 02e8 9842     		cmp	r0, r3
 662 02ea 03D0     		beq	.L26
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 663              		.loc 1 317 0 is_stmt 0 discriminator 1
 664 02ec 03F58063 		add	r3, r3, #1024
 665 02f0 9842     		cmp	r0, r3
 666 02f2 01D1     		bne	.L27
 667              	.L26:
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 668              		.loc 1 320 0 is_stmt 1
 669 02f4 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 670 02f6 0386     		strh	r3, [r0, #48]	@ movhi
 671              	.L27:
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 672              		.loc 1 325 0
 673 02f8 0123     		movs	r3, #1
 674 02fa 8382     		strh	r3, [r0, #20]	@ movhi
 675 02fc 7047     		bx	lr
 676              	.L29:
 677 02fe 00BF     		.align	2
 678              	.L28:
 679 0300 00000140 		.word	1073807360
 680 0304 00100040 		.word	1073745920
 681              		.cfi_endproc
 682              	.LFE111:
 684              		.align	2
 685              		.global	TIM_TimeBaseStructInit
 686              		.thumb
 687              		.thumb_func
 689              	TIM_TimeBaseStructInit:
 690              	.LFB112:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 691              		.loc 1 335 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696              	.LVL125:
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 697              		.loc 1 337 0
 698 0308 4FF0FF33 		mov	r3, #-1
 699 030c 4360     		str	r3, [r0, #4]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 700              		.loc 1 338 0
 701 030e 0023     		movs	r3, #0
 702 0310 0380     		strh	r3, [r0]	@ movhi
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 703              		.loc 1 339 0
 704 0312 0381     		strh	r3, [r0, #8]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 705              		.loc 1 340 0
 706 0314 4380     		strh	r3, [r0, #2]	@ movhi
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 707              		.loc 1 341 0
 708 0316 8372     		strb	r3, [r0, #10]
 709 0318 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE112:
 713 031a 00BF     		.align	2
 714              		.global	TIM_PrescalerConfig
 715              		.thumb
 716              		.thumb_func
 718              	TIM_PrescalerConfig:
 719              	.LFB113:
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 720              		.loc 1 355 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725              	.LVL126:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 726              		.loc 1 360 0
 727 031c 0185     		strh	r1, [r0, #40]	@ movhi
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 728              		.loc 1 362 0
 729 031e 8282     		strh	r2, [r0, #20]	@ movhi
 730 0320 7047     		bx	lr
 731              		.cfi_endproc
 732              	.LFE113:
 734 0322 00BF     		.align	2
 735              		.global	TIM_CounterModeConfig
 736              		.thumb
 737              		.thumb_func
 739              	TIM_CounterModeConfig:
 740              	.LFB114:
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 741              		.loc 1 378 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL127:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 747              		.loc 1 385 0
 748 0324 0388     		ldrh	r3, [r0]
 749              	.LVL128:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 750              		.loc 1 388 0
 751 0326 23F07003 		bic	r3, r3, #112
 752              	.LVL129:
 753 032a 1B04     		lsls	r3, r3, #16
 754 032c 1B0C     		lsrs	r3, r3, #16
 755              	.LVL130:
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 756              		.loc 1 391 0
 757 032e 1943     		orrs	r1, r1, r3
 758              	.LVL131:
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 759              		.loc 1 394 0
 760 0330 0180     		strh	r1, [r0]	@ movhi
 761 0332 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE114:
 765              		.align	2
 766              		.global	TIM_SetCounter
 767              		.thumb
 768              		.thumb_func
 770              	TIM_SetCounter:
 771              	.LFB115:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 772              		.loc 1 404 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL132:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 778              		.loc 1 409 0
 779 0334 4162     		str	r1, [r0, #36]
 780 0336 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE115:
 784              		.align	2
 785              		.global	TIM_SetAutoreload
 786              		.thumb
 787              		.thumb_func
 789              	TIM_SetAutoreload:
 790              	.LFB116:
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 791              		.loc 1 419 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              	.LVL133:
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 797              		.loc 1 424 0
 798 0338 C162     		str	r1, [r0, #44]
 799 033a 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE116:
 803              		.align	2
 804              		.global	TIM_GetCounter
 805              		.thumb
 806              		.thumb_func
 808              	TIM_GetCounter:
 809              	.LFB117:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 810              		.loc 1 433 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815              	.LVL134:
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 816              		.loc 1 438 0
 817 033c 406A     		ldr	r0, [r0, #36]
 818              	.LVL135:
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 819              		.loc 1 439 0
 820 033e 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE117:
 824              		.align	2
 825              		.global	TIM_GetPrescaler
 826              		.thumb
 827              		.thumb_func
 829              	TIM_GetPrescaler:
 830              	.LFB118:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 831              		.loc 1 447 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836              	.LVL136:
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 837              		.loc 1 452 0
 838 0340 008D     		ldrh	r0, [r0, #40]
 839              	.LVL137:
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 840              		.loc 1 453 0
 841 0342 80B2     		uxth	r0, r0
 842 0344 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE118:
 846 0346 00BF     		.align	2
 847              		.global	TIM_UpdateDisableConfig
 848              		.thumb
 849              		.thumb_func
 851              	TIM_UpdateDisableConfig:
 852              	.LFB119:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 853              		.loc 1 463 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL138:
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 859              		.loc 1 468 0
 860 0348 29B1     		cbz	r1, .L38
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 861              		.loc 1 471 0
 862 034a 0388     		ldrh	r3, [r0]
 863 034c 9BB2     		uxth	r3, r3
 864 034e 43F00203 		orr	r3, r3, #2
 865 0352 0380     		strh	r3, [r0]	@ movhi
 866 0354 7047     		bx	lr
 867              	.L38:
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 868              		.loc 1 476 0
 869 0356 0388     		ldrh	r3, [r0]
 870 0358 23F00203 		bic	r3, r3, #2
 871 035c 1B04     		lsls	r3, r3, #16
 872 035e 1B0C     		lsrs	r3, r3, #16
 873 0360 0380     		strh	r3, [r0]	@ movhi
 874 0362 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE119:
 878              		.align	2
 879              		.global	TIM_UpdateRequestConfig
 880              		.thumb
 881              		.thumb_func
 883              	TIM_UpdateRequestConfig:
 884              	.LFB120:
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 885              		.loc 1 492 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890              	.LVL139:
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 891              		.loc 1 497 0
 892 0364 29B1     		cbz	r1, .L41
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 893              		.loc 1 500 0
 894 0366 0388     		ldrh	r3, [r0]
 895 0368 9BB2     		uxth	r3, r3
 896 036a 43F00403 		orr	r3, r3, #4
 897 036e 0380     		strh	r3, [r0]	@ movhi
 898 0370 7047     		bx	lr
 899              	.L41:
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 900              		.loc 1 505 0
 901 0372 0388     		ldrh	r3, [r0]
 902 0374 23F00403 		bic	r3, r3, #4
 903 0378 1B04     		lsls	r3, r3, #16
 904 037a 1B0C     		lsrs	r3, r3, #16
 905 037c 0380     		strh	r3, [r0]	@ movhi
 906 037e 7047     		bx	lr
 907              		.cfi_endproc
 908              	.LFE120:
 910              		.align	2
 911              		.global	TIM_ARRPreloadConfig
 912              		.thumb
 913              		.thumb_func
 915              	TIM_ARRPreloadConfig:
 916              	.LFB121:
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 917              		.loc 1 517 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922              	.LVL140:
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 923              		.loc 1 522 0
 924 0380 29B1     		cbz	r1, .L44
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 925              		.loc 1 525 0
 926 0382 0388     		ldrh	r3, [r0]
 927 0384 9BB2     		uxth	r3, r3
 928 0386 43F08003 		orr	r3, r3, #128
 929 038a 0380     		strh	r3, [r0]	@ movhi
 930 038c 7047     		bx	lr
 931              	.L44:
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 932              		.loc 1 530 0
 933 038e 0388     		ldrh	r3, [r0]
 934 0390 23F08003 		bic	r3, r3, #128
 935 0394 1B04     		lsls	r3, r3, #16
 936 0396 1B0C     		lsrs	r3, r3, #16
 937 0398 0380     		strh	r3, [r0]	@ movhi
 938 039a 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE121:
 942              		.align	2
 943              		.global	TIM_SelectOnePulseMode
 944              		.thumb
 945              		.thumb_func
 947              	TIM_SelectOnePulseMode:
 948              	.LFB122:
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 949              		.loc 1 544 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954              	.LVL141:
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 955              		.loc 1 550 0
 956 039c 0388     		ldrh	r3, [r0]
 957 039e 23F00803 		bic	r3, r3, #8
 958 03a2 1B04     		lsls	r3, r3, #16
 959 03a4 1B0C     		lsrs	r3, r3, #16
 960 03a6 0380     		strh	r3, [r0]	@ movhi
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 961              		.loc 1 553 0
 962 03a8 0388     		ldrh	r3, [r0]
 963 03aa 9BB2     		uxth	r3, r3
 964 03ac 1943     		orrs	r1, r1, r3
 965              	.LVL142:
 966 03ae 0180     		strh	r1, [r0]	@ movhi
 967 03b0 7047     		bx	lr
 968              		.cfi_endproc
 969              	.LFE122:
 971 03b2 00BF     		.align	2
 972              		.global	TIM_SetClockDivision
 973              		.thumb
 974              		.thumb_func
 976              	TIM_SetClockDivision:
 977              	.LFB123:
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 978              		.loc 1 567 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983              	.LVL143:
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 984              		.loc 1 573 0
 985 03b4 0388     		ldrh	r3, [r0]
 986 03b6 23F44073 		bic	r3, r3, #768
 987 03ba 1B04     		lsls	r3, r3, #16
 988 03bc 1B0C     		lsrs	r3, r3, #16
 989 03be 0380     		strh	r3, [r0]	@ movhi
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 990              		.loc 1 576 0
 991 03c0 0388     		ldrh	r3, [r0]
 992 03c2 9BB2     		uxth	r3, r3
 993 03c4 1943     		orrs	r1, r1, r3
 994              	.LVL144:
 995 03c6 0180     		strh	r1, [r0]	@ movhi
 996 03c8 7047     		bx	lr
 997              		.cfi_endproc
 998              	.LFE123:
 1000 03ca 00BF     		.align	2
 1001              		.global	TIM_Cmd
 1002              		.thumb
 1003              		.thumb_func
 1005              	TIM_Cmd:
 1006              	.LFB124:
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1007              		.loc 1 587 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 1012              	.LVL145:
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1013              		.loc 1 592 0
 1014 03cc 29B1     		cbz	r1, .L49
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1015              		.loc 1 595 0
 1016 03ce 0388     		ldrh	r3, [r0]
 1017 03d0 9BB2     		uxth	r3, r3
 1018 03d2 43F00103 		orr	r3, r3, #1
 1019 03d6 0380     		strh	r3, [r0]	@ movhi
 1020 03d8 7047     		bx	lr
 1021              	.L49:
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1022              		.loc 1 600 0
 1023 03da 0388     		ldrh	r3, [r0]
 1024 03dc 23F00103 		bic	r3, r3, #1
 1025 03e0 1B04     		lsls	r3, r3, #16
 1026 03e2 1B0C     		lsrs	r3, r3, #16
 1027 03e4 0380     		strh	r3, [r0]	@ movhi
 1028 03e6 7047     		bx	lr
 1029              		.cfi_endproc
 1030              	.LFE124:
 1032              		.align	2
 1033              		.global	TIM_OC1Init
 1034              		.thumb
 1035              		.thumb_func
 1037              	TIM_OC1Init:
 1038              	.LFB125:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1039              		.loc 1 666 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL146:
 1045 03e8 30B4     		push	{r4, r5}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 4, -8
 1048              		.cfi_offset 5, -4
 1049              	.LVL147:
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1050              		.loc 1 676 0
 1051 03ea 038C     		ldrh	r3, [r0, #32]
 1052 03ec 23F00103 		bic	r3, r3, #1
 1053 03f0 1B04     		lsls	r3, r3, #16
 1054 03f2 1B0C     		lsrs	r3, r3, #16
 1055 03f4 0384     		strh	r3, [r0, #32]	@ movhi
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1056              		.loc 1 679 0
 1057 03f6 038C     		ldrh	r3, [r0, #32]
 1058              	.LVL148:
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1059              		.loc 1 681 0
 1060 03f8 8488     		ldrh	r4, [r0, #4]
 1061 03fa A4B2     		uxth	r4, r4
 1062              	.LVL149:
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1063              		.loc 1 684 0
 1064 03fc 028B     		ldrh	r2, [r0, #24]
 1065              	.LVL150:
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1066              		.loc 1 688 0
 1067 03fe 22F07302 		bic	r2, r2, #115
 1068              	.LVL151:
 1069 0402 1204     		lsls	r2, r2, #16
 1070 0404 120C     		lsrs	r2, r2, #16
 1071              	.LVL152:
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1072              		.loc 1 690 0
 1073 0406 0D88     		ldrh	r5, [r1]
 1074 0408 2A43     		orrs	r2, r2, r5
 1075              	.LVL153:
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1076              		.loc 1 693 0
 1077 040a 23F00203 		bic	r3, r3, #2
 1078              	.LVL154:
 1079 040e 1B04     		lsls	r3, r3, #16
 1080 0410 1B0C     		lsrs	r3, r3, #16
 1081              	.LVL155:
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1082              		.loc 1 695 0
 1083 0412 8D89     		ldrh	r5, [r1, #12]
 1084 0414 2B43     		orrs	r3, r3, r5
 1085              	.LVL156:
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1086              		.loc 1 698 0
 1087 0416 4D88     		ldrh	r5, [r1, #2]
 1088 0418 2B43     		orrs	r3, r3, r5
 1089              	.LVL157:
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1090              		.loc 1 700 0
 1091 041a 0E4D     		ldr	r5, .L54
 1092 041c A842     		cmp	r0, r5
 1093 041e 03D0     		beq	.L52
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1094              		.loc 1 700 0 is_stmt 0 discriminator 1
 1095 0420 05F58065 		add	r5, r5, #1024
 1096 0424 A842     		cmp	r0, r5
 1097 0426 0DD1     		bne	.L53
 1098              	.L52:
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1099              		.loc 1 708 0 is_stmt 1
 1100 0428 23F00803 		bic	r3, r3, #8
 1101              	.LVL158:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1102              		.loc 1 710 0
 1103 042c CD89     		ldrh	r5, [r1, #14]
 1104 042e 2B43     		orrs	r3, r3, r5
 1105              	.LVL159:
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1106              		.loc 1 712 0
 1107 0430 23F00403 		bic	r3, r3, #4
 1108              	.LVL160:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1109              		.loc 1 715 0
 1110 0434 8D88     		ldrh	r5, [r1, #4]
 1111 0436 2B43     		orrs	r3, r3, r5
 1112              	.LVL161:
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1113              		.loc 1 718 0
 1114 0438 24F44074 		bic	r4, r4, #768
 1115              	.LVL162:
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1116              		.loc 1 720 0
 1117 043c 0D8A     		ldrh	r5, [r1, #16]
 1118 043e 2C43     		orrs	r4, r4, r5
 1119              	.LVL163:
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1120              		.loc 1 722 0
 1121 0440 4D8A     		ldrh	r5, [r1, #18]
 1122 0442 2C43     		orrs	r4, r4, r5
 1123              	.LVL164:
 1124              	.L53:
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1125              		.loc 1 725 0
 1126 0444 8480     		strh	r4, [r0, #4]	@ movhi
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1127              		.loc 1 728 0
 1128 0446 0283     		strh	r2, [r0, #24]	@ movhi
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1129              		.loc 1 731 0
 1130 0448 8A68     		ldr	r2, [r1, #8]
 1131              	.LVL165:
 1132 044a 4263     		str	r2, [r0, #52]
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1133              		.loc 1 734 0
 1134 044c 0384     		strh	r3, [r0, #32]	@ movhi
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1135              		.loc 1 735 0
 1136 044e 30BC     		pop	{r4, r5}
 1137              	.LVL166:
 1138 0450 7047     		bx	lr
 1139              	.L55:
 1140 0452 00BF     		.align	2
 1141              	.L54:
 1142 0454 00000140 		.word	1073807360
 1143              		.cfi_endproc
 1144              	.LFE125:
 1146              		.align	2
 1147              		.global	TIM_OC2Init
 1148              		.thumb
 1149              		.thumb_func
 1151              	TIM_OC2Init:
 1152              	.LFB126:
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1153              		.loc 1 747 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157              		@ link register save eliminated.
 1158              	.LVL167:
 1159 0458 30B4     		push	{r4, r5}
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 4, -8
 1162              		.cfi_offset 5, -4
 1163              	.LVL168:
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1164              		.loc 1 757 0
 1165 045a 038C     		ldrh	r3, [r0, #32]
 1166 045c 23F01003 		bic	r3, r3, #16
 1167 0460 1B04     		lsls	r3, r3, #16
 1168 0462 1B0C     		lsrs	r3, r3, #16
 1169 0464 0384     		strh	r3, [r0, #32]	@ movhi
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1170              		.loc 1 760 0
 1171 0466 038C     		ldrh	r3, [r0, #32]
 1172              	.LVL169:
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1173              		.loc 1 762 0
 1174 0468 8488     		ldrh	r4, [r0, #4]
 1175 046a A4B2     		uxth	r4, r4
 1176              	.LVL170:
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1177              		.loc 1 765 0
 1178 046c 028B     		ldrh	r2, [r0, #24]
 1179              	.LVL171:
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1180              		.loc 1 769 0
 1181 046e 22F4E642 		bic	r2, r2, #29440
 1182              	.LVL172:
 1183 0472 1204     		lsls	r2, r2, #16
 1184 0474 120C     		lsrs	r2, r2, #16
 1185              	.LVL173:
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1186              		.loc 1 772 0
 1187 0476 0D88     		ldrh	r5, [r1]
 1188 0478 2D02     		lsls	r5, r5, #8
 1189 047a ADB2     		uxth	r5, r5
 1190 047c 2A43     		orrs	r2, r2, r5
 1191              	.LVL174:
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1192              		.loc 1 775 0
 1193 047e 23F02003 		bic	r3, r3, #32
 1194              	.LVL175:
 1195 0482 1B04     		lsls	r3, r3, #16
 1196 0484 1B0C     		lsrs	r3, r3, #16
 1197              	.LVL176:
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1198              		.loc 1 777 0
 1199 0486 8D89     		ldrh	r5, [r1, #12]
 1200 0488 2D01     		lsls	r5, r5, #4
 1201 048a ADB2     		uxth	r5, r5
 1202 048c 2B43     		orrs	r3, r3, r5
 1203              	.LVL177:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1204              		.loc 1 780 0
 1205 048e 4D88     		ldrh	r5, [r1, #2]
 1206 0490 2D01     		lsls	r5, r5, #4
 1207 0492 ADB2     		uxth	r5, r5
 1208 0494 2B43     		orrs	r3, r3, r5
 1209              	.LVL178:
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1210              		.loc 1 782 0
 1211 0496 124D     		ldr	r5, .L59
 1212 0498 A842     		cmp	r0, r5
 1213 049a 03D0     		beq	.L57
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1214              		.loc 1 782 0 is_stmt 0 discriminator 1
 1215 049c 05F58065 		add	r5, r5, #1024
 1216 04a0 A842     		cmp	r0, r5
 1217 04a2 15D1     		bne	.L58
 1218              	.L57:
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1219              		.loc 1 790 0 is_stmt 1
 1220 04a4 23F08003 		bic	r3, r3, #128
 1221              	.LVL179:
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1222              		.loc 1 792 0
 1223 04a8 CD89     		ldrh	r5, [r1, #14]
 1224 04aa 2D01     		lsls	r5, r5, #4
 1225 04ac ADB2     		uxth	r5, r5
 1226 04ae 1D43     		orrs	r5, r5, r3
 1227              	.LVL180:
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1228              		.loc 1 794 0
 1229 04b0 25F04005 		bic	r5, r5, #64
 1230              	.LVL181:
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1231              		.loc 1 797 0
 1232 04b4 8B88     		ldrh	r3, [r1, #4]
 1233 04b6 1B01     		lsls	r3, r3, #4
 1234 04b8 9BB2     		uxth	r3, r3
 1235 04ba 2B43     		orrs	r3, r3, r5
 1236              	.LVL182:
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1237              		.loc 1 800 0
 1238 04bc 24F44064 		bic	r4, r4, #3072
 1239              	.LVL183:
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1240              		.loc 1 802 0
 1241 04c0 0D8A     		ldrh	r5, [r1, #16]
 1242 04c2 AD00     		lsls	r5, r5, #2
 1243 04c4 ADB2     		uxth	r5, r5
 1244 04c6 2543     		orrs	r5, r5, r4
 1245              	.LVL184:
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1246              		.loc 1 804 0
 1247 04c8 4C8A     		ldrh	r4, [r1, #18]
 1248 04ca A400     		lsls	r4, r4, #2
 1249 04cc A4B2     		uxth	r4, r4
 1250 04ce 2C43     		orrs	r4, r4, r5
 1251              	.LVL185:
 1252              	.L58:
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1253              		.loc 1 807 0
 1254 04d0 8480     		strh	r4, [r0, #4]	@ movhi
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1255              		.loc 1 810 0
 1256 04d2 0283     		strh	r2, [r0, #24]	@ movhi
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1257              		.loc 1 813 0
 1258 04d4 8A68     		ldr	r2, [r1, #8]
 1259              	.LVL186:
 1260 04d6 8263     		str	r2, [r0, #56]
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1261              		.loc 1 816 0
 1262 04d8 0384     		strh	r3, [r0, #32]	@ movhi
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1263              		.loc 1 817 0
 1264 04da 30BC     		pop	{r4, r5}
 1265              	.LVL187:
 1266 04dc 7047     		bx	lr
 1267              	.L60:
 1268 04de 00BF     		.align	2
 1269              	.L59:
 1270 04e0 00000140 		.word	1073807360
 1271              		.cfi_endproc
 1272              	.LFE126:
 1274              		.align	2
 1275              		.global	TIM_OC3Init
 1276              		.thumb
 1277              		.thumb_func
 1279              	TIM_OC3Init:
 1280              	.LFB127:
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1281              		.loc 1 828 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286              	.LVL188:
 1287 04e4 30B4     		push	{r4, r5}
 1288              		.cfi_def_cfa_offset 8
 1289              		.cfi_offset 4, -8
 1290              		.cfi_offset 5, -4
 1291              	.LVL189:
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1292              		.loc 1 838 0
 1293 04e6 038C     		ldrh	r3, [r0, #32]
 1294 04e8 23F48073 		bic	r3, r3, #256
 1295 04ec 1B04     		lsls	r3, r3, #16
 1296 04ee 1B0C     		lsrs	r3, r3, #16
 1297 04f0 0384     		strh	r3, [r0, #32]	@ movhi
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1298              		.loc 1 841 0
 1299 04f2 038C     		ldrh	r3, [r0, #32]
 1300              	.LVL190:
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1301              		.loc 1 843 0
 1302 04f4 8488     		ldrh	r4, [r0, #4]
 1303 04f6 A4B2     		uxth	r4, r4
 1304              	.LVL191:
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1305              		.loc 1 846 0
 1306 04f8 828B     		ldrh	r2, [r0, #28]
 1307              	.LVL192:
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1308              		.loc 1 850 0
 1309 04fa 22F07302 		bic	r2, r2, #115
 1310              	.LVL193:
 1311 04fe 1204     		lsls	r2, r2, #16
 1312 0500 120C     		lsrs	r2, r2, #16
 1313              	.LVL194:
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1314              		.loc 1 852 0
 1315 0502 0D88     		ldrh	r5, [r1]
 1316 0504 2A43     		orrs	r2, r2, r5
 1317              	.LVL195:
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1318              		.loc 1 855 0
 1319 0506 23F40073 		bic	r3, r3, #512
 1320              	.LVL196:
 1321 050a 1B04     		lsls	r3, r3, #16
 1322 050c 1B0C     		lsrs	r3, r3, #16
 1323              	.LVL197:
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1324              		.loc 1 857 0
 1325 050e 8D89     		ldrh	r5, [r1, #12]
 1326 0510 2D02     		lsls	r5, r5, #8
 1327 0512 ADB2     		uxth	r5, r5
 1328 0514 2B43     		orrs	r3, r3, r5
 1329              	.LVL198:
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1330              		.loc 1 860 0
 1331 0516 4D88     		ldrh	r5, [r1, #2]
 1332 0518 2D02     		lsls	r5, r5, #8
 1333 051a ADB2     		uxth	r5, r5
 1334 051c 2B43     		orrs	r3, r3, r5
 1335              	.LVL199:
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1336              		.loc 1 862 0
 1337 051e 124D     		ldr	r5, .L64
 1338 0520 A842     		cmp	r0, r5
 1339 0522 03D0     		beq	.L62
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1340              		.loc 1 862 0 is_stmt 0 discriminator 1
 1341 0524 05F58065 		add	r5, r5, #1024
 1342 0528 A842     		cmp	r0, r5
 1343 052a 15D1     		bne	.L63
 1344              	.L62:
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1345              		.loc 1 870 0 is_stmt 1
 1346 052c 23F40063 		bic	r3, r3, #2048
 1347              	.LVL200:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1348              		.loc 1 872 0
 1349 0530 CD89     		ldrh	r5, [r1, #14]
 1350 0532 2D02     		lsls	r5, r5, #8
 1351 0534 ADB2     		uxth	r5, r5
 1352 0536 1D43     		orrs	r5, r5, r3
 1353              	.LVL201:
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1354              		.loc 1 874 0
 1355 0538 25F48065 		bic	r5, r5, #1024
 1356              	.LVL202:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1357              		.loc 1 877 0
 1358 053c 8B88     		ldrh	r3, [r1, #4]
 1359 053e 1B02     		lsls	r3, r3, #8
 1360 0540 9BB2     		uxth	r3, r3
 1361 0542 2B43     		orrs	r3, r3, r5
 1362              	.LVL203:
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1363              		.loc 1 880 0
 1364 0544 24F44054 		bic	r4, r4, #12288
 1365              	.LVL204:
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1366              		.loc 1 882 0
 1367 0548 0D8A     		ldrh	r5, [r1, #16]
 1368 054a 2D01     		lsls	r5, r5, #4
 1369 054c ADB2     		uxth	r5, r5
 1370 054e 2543     		orrs	r5, r5, r4
 1371              	.LVL205:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1372              		.loc 1 884 0
 1373 0550 4C8A     		ldrh	r4, [r1, #18]
 1374 0552 2401     		lsls	r4, r4, #4
 1375 0554 A4B2     		uxth	r4, r4
 1376 0556 2C43     		orrs	r4, r4, r5
 1377              	.LVL206:
 1378              	.L63:
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1379              		.loc 1 887 0
 1380 0558 8480     		strh	r4, [r0, #4]	@ movhi
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1381              		.loc 1 890 0
 1382 055a 8283     		strh	r2, [r0, #28]	@ movhi
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1383              		.loc 1 893 0
 1384 055c 8A68     		ldr	r2, [r1, #8]
 1385              	.LVL207:
 1386 055e C263     		str	r2, [r0, #60]
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1387              		.loc 1 896 0
 1388 0560 0384     		strh	r3, [r0, #32]	@ movhi
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1389              		.loc 1 897 0
 1390 0562 30BC     		pop	{r4, r5}
 1391              	.LVL208:
 1392 0564 7047     		bx	lr
 1393              	.L65:
 1394 0566 00BF     		.align	2
 1395              	.L64:
 1396 0568 00000140 		.word	1073807360
 1397              		.cfi_endproc
 1398              	.LFE127:
 1400              		.align	2
 1401              		.global	TIM_OC4Init
 1402              		.thumb
 1403              		.thumb_func
 1405              	TIM_OC4Init:
 1406              	.LFB128:
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1407              		.loc 1 908 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
 1412              	.LVL209:
 1413 056c 30B4     		push	{r4, r5}
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 4, -8
 1416              		.cfi_offset 5, -4
 1417              	.LVL210:
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1418              		.loc 1 918 0
 1419 056e 038C     		ldrh	r3, [r0, #32]
 1420 0570 23F48053 		bic	r3, r3, #4096
 1421 0574 1B04     		lsls	r3, r3, #16
 1422 0576 1B0C     		lsrs	r3, r3, #16
 1423 0578 0384     		strh	r3, [r0, #32]	@ movhi
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1424              		.loc 1 921 0
 1425 057a 038C     		ldrh	r3, [r0, #32]
 1426              	.LVL211:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1427              		.loc 1 923 0
 1428 057c 8488     		ldrh	r4, [r0, #4]
 1429 057e A4B2     		uxth	r4, r4
 1430              	.LVL212:
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1431              		.loc 1 926 0
 1432 0580 828B     		ldrh	r2, [r0, #28]
 1433              	.LVL213:
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1434              		.loc 1 930 0
 1435 0582 22F4E642 		bic	r2, r2, #29440
 1436              	.LVL214:
 1437 0586 1204     		lsls	r2, r2, #16
 1438 0588 120C     		lsrs	r2, r2, #16
 1439              	.LVL215:
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1440              		.loc 1 933 0
 1441 058a 0D88     		ldrh	r5, [r1]
 1442 058c 2D02     		lsls	r5, r5, #8
 1443 058e ADB2     		uxth	r5, r5
 1444 0590 2A43     		orrs	r2, r2, r5
 1445              	.LVL216:
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1446              		.loc 1 936 0
 1447 0592 23F40053 		bic	r3, r3, #8192
 1448              	.LVL217:
 1449 0596 1B04     		lsls	r3, r3, #16
 1450 0598 1B0C     		lsrs	r3, r3, #16
 1451              	.LVL218:
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1452              		.loc 1 938 0
 1453 059a 8D89     		ldrh	r5, [r1, #12]
 1454 059c 2D03     		lsls	r5, r5, #12
 1455 059e ADB2     		uxth	r5, r5
 1456 05a0 2B43     		orrs	r3, r3, r5
 1457              	.LVL219:
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1458              		.loc 1 941 0
 1459 05a2 4D88     		ldrh	r5, [r1, #2]
 1460 05a4 2D03     		lsls	r5, r5, #12
 1461 05a6 ADB2     		uxth	r5, r5
 1462 05a8 2B43     		orrs	r3, r3, r5
 1463              	.LVL220:
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1464              		.loc 1 943 0
 1465 05aa 0A4D     		ldr	r5, .L69
 1466 05ac A842     		cmp	r0, r5
 1467 05ae 03D0     		beq	.L67
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1468              		.loc 1 943 0 is_stmt 0 discriminator 1
 1469 05b0 05F58065 		add	r5, r5, #1024
 1470 05b4 A842     		cmp	r0, r5
 1471 05b6 05D1     		bne	.L68
 1472              	.L67:
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1473              		.loc 1 947 0 is_stmt 1
 1474 05b8 24F48044 		bic	r4, r4, #16384
 1475              	.LVL221:
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1476              		.loc 1 949 0
 1477 05bc 0D8A     		ldrh	r5, [r1, #16]
 1478 05be AD01     		lsls	r5, r5, #6
 1479 05c0 ADB2     		uxth	r5, r5
 1480 05c2 2C43     		orrs	r4, r4, r5
 1481              	.LVL222:
 1482              	.L68:
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1483              		.loc 1 952 0
 1484 05c4 8480     		strh	r4, [r0, #4]	@ movhi
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1485              		.loc 1 955 0
 1486 05c6 8283     		strh	r2, [r0, #28]	@ movhi
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1487              		.loc 1 958 0
 1488 05c8 8A68     		ldr	r2, [r1, #8]
 1489              	.LVL223:
 1490 05ca 0264     		str	r2, [r0, #64]
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1491              		.loc 1 961 0
 1492 05cc 0384     		strh	r3, [r0, #32]	@ movhi
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1493              		.loc 1 962 0
 1494 05ce 30BC     		pop	{r4, r5}
 1495              	.LVL224:
 1496 05d0 7047     		bx	lr
 1497              	.L70:
 1498 05d2 00BF     		.align	2
 1499              	.L69:
 1500 05d4 00000140 		.word	1073807360
 1501              		.cfi_endproc
 1502              	.LFE128:
 1504              		.align	2
 1505              		.global	TIM_OCStructInit
 1506              		.thumb
 1507              		.thumb_func
 1509              	TIM_OCStructInit:
 1510              	.LFB129:
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1511              		.loc 1 971 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 1516              	.LVL225:
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1517              		.loc 1 973 0
 1518 05d8 0023     		movs	r3, #0
 1519 05da 0380     		strh	r3, [r0]	@ movhi
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1520              		.loc 1 974 0
 1521 05dc 4380     		strh	r3, [r0, #2]	@ movhi
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1522              		.loc 1 975 0
 1523 05de 8380     		strh	r3, [r0, #4]	@ movhi
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1524              		.loc 1 976 0
 1525 05e0 8360     		str	r3, [r0, #8]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1526              		.loc 1 977 0
 1527 05e2 8381     		strh	r3, [r0, #12]	@ movhi
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1528              		.loc 1 978 0
 1529 05e4 C381     		strh	r3, [r0, #14]	@ movhi
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1530              		.loc 1 979 0
 1531 05e6 0382     		strh	r3, [r0, #16]	@ movhi
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1532              		.loc 1 980 0
 1533 05e8 4382     		strh	r3, [r0, #18]	@ movhi
 1534 05ea 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE129:
 1538              		.align	2
 1539              		.global	TIM_SelectOCxM
 1540              		.thumb
 1541              		.thumb_func
 1543              	TIM_SelectOCxM:
 1544              	.LFB130:
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1545              		.loc 1 1007 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              		@ link register save eliminated.
 1550              	.LVL226:
 1551 05ec 30B4     		push	{r4, r5}
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 4, -8
 1554              		.cfi_offset 5, -4
 1555              	.LVL227:
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1556              		.loc 1 1017 0
 1557 05ee 00F11803 		add	r3, r0, #24
 1558              	.LVL228:
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1559              		.loc 1 1019 0
 1560 05f2 0124     		movs	r4, #1
 1561 05f4 8C40     		lsls	r4, r4, r1
 1562              	.LVL229:
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1563              		.loc 1 1022 0
 1564 05f6 058C     		ldrh	r5, [r0, #32]
 1565 05f8 E443     		mvns	r4, r4
 1566              	.LVL230:
 1567 05fa A4B2     		uxth	r4, r4
 1568              	.LVL231:
 1569 05fc 2C40     		ands	r4, r4, r5
 1570 05fe 0484     		strh	r4, [r0, #32]	@ movhi
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1571              		.loc 1 1024 0
 1572 0600 09B1     		cbz	r1, .L73
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1573              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1574 0602 0829     		cmp	r1, #8
 1575 0604 0AD1     		bne	.L74
 1576              	.L73:
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1577              		.loc 1 1026 0 is_stmt 1
 1578 0606 4908     		lsrs	r1, r1, #1
 1579              	.LVL232:
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1580              		.loc 1 1029 0
 1581 0608 C858     		ldr	r0, [r1, r3]
 1582              	.LVL233:
 1583 060a 20F07000 		bic	r0, r0, #112
 1584 060e 0004     		lsls	r0, r0, #16
 1585 0610 000C     		lsrs	r0, r0, #16
 1586 0612 C850     		str	r0, [r1, r3]
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1587              		.loc 1 1032 0
 1588 0614 C858     		ldr	r0, [r1, r3]
 1589 0616 0243     		orrs	r2, r2, r0
 1590              	.LVL234:
 1591 0618 CA50     		str	r2, [r1, r3]
 1592 061a 0DE0     		b	.L72
 1593              	.LVL235:
 1594              	.L74:
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1595              		.loc 1 1036 0
 1596 061c 0439     		subs	r1, r1, #4
 1597              	.LVL236:
 1598 061e C1F34E01 		ubfx	r1, r1, #1, #15
 1599              	.LVL237:
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1600              		.loc 1 1039 0
 1601 0622 C858     		ldr	r0, [r1, r3]
 1602              	.LVL238:
 1603 0624 20F4E040 		bic	r0, r0, #28672
 1604 0628 0004     		lsls	r0, r0, #16
 1605 062a 000C     		lsrs	r0, r0, #16
 1606 062c C850     		str	r0, [r1, r3]
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1607              		.loc 1 1042 0
 1608 062e C858     		ldr	r0, [r1, r3]
 1609 0630 1202     		lsls	r2, r2, #8
 1610              	.LVL239:
 1611 0632 92B2     		uxth	r2, r2
 1612 0634 0243     		orrs	r2, r2, r0
 1613 0636 CA50     		str	r2, [r1, r3]
 1614              	.LVL240:
 1615              	.L72:
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1616              		.loc 1 1044 0
 1617 0638 30BC     		pop	{r4, r5}
 1618 063a 7047     		bx	lr
 1619              		.cfi_endproc
 1620              	.LFE130:
 1622              		.align	2
 1623              		.global	TIM_SetCompare1
 1624              		.thumb
 1625              		.thumb_func
 1627              	TIM_SetCompare1:
 1628              	.LFB131:
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1629              		.loc 1 1053 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              		@ link register save eliminated.
 1634              	.LVL241:
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1635              		.loc 1 1058 0
 1636 063c 4163     		str	r1, [r0, #52]
 1637 063e 7047     		bx	lr
 1638              		.cfi_endproc
 1639              	.LFE131:
 1641              		.align	2
 1642              		.global	TIM_SetCompare2
 1643              		.thumb
 1644              		.thumb_func
 1646              	TIM_SetCompare2:
 1647              	.LFB132:
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1648              		.loc 1 1069 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
 1653              	.LVL242:
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1654              		.loc 1 1074 0
 1655 0640 8163     		str	r1, [r0, #56]
 1656 0642 7047     		bx	lr
 1657              		.cfi_endproc
 1658              	.LFE132:
 1660              		.align	2
 1661              		.global	TIM_SetCompare3
 1662              		.thumb
 1663              		.thumb_func
 1665              	TIM_SetCompare3:
 1666              	.LFB133:
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1667              		.loc 1 1084 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 0
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              		@ link register save eliminated.
 1672              	.LVL243:
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1673              		.loc 1 1089 0
 1674 0644 C163     		str	r1, [r0, #60]
 1675 0646 7047     		bx	lr
 1676              		.cfi_endproc
 1677              	.LFE133:
 1679              		.align	2
 1680              		.global	TIM_SetCompare4
 1681              		.thumb
 1682              		.thumb_func
 1684              	TIM_SetCompare4:
 1685              	.LFB134:
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1686              		.loc 1 1099 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691              	.LVL244:
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 1692              		.loc 1 1104 0
 1693 0648 0164     		str	r1, [r0, #64]
 1694 064a 7047     		bx	lr
 1695              		.cfi_endproc
 1696              	.LFE134:
 1698              		.align	2
 1699              		.global	TIM_ForcedOC1Config
 1700              		.thumb
 1701              		.thumb_func
 1703              	TIM_ForcedOC1Config:
 1704              	.LFB135:
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1705              		.loc 1 1117 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              		@ link register save eliminated.
 1710              	.LVL245:
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1711              		.loc 1 1123 0
 1712 064c 038B     		ldrh	r3, [r0, #24]
 1713              	.LVL246:
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 1714              		.loc 1 1126 0
 1715 064e 23F07003 		bic	r3, r3, #112
 1716              	.LVL247:
 1717 0652 1B04     		lsls	r3, r3, #16
 1718 0654 1B0C     		lsrs	r3, r3, #16
 1719              	.LVL248:
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 1720              		.loc 1 1129 0
 1721 0656 1943     		orrs	r1, r1, r3
 1722              	.LVL249:
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1723              		.loc 1 1132 0
 1724 0658 0183     		strh	r1, [r0, #24]	@ movhi
 1725 065a 7047     		bx	lr
 1726              		.cfi_endproc
 1727              	.LFE135:
 1729              		.align	2
 1730              		.global	TIM_ForcedOC2Config
 1731              		.thumb
 1732              		.thumb_func
 1734              	TIM_ForcedOC2Config:
 1735              	.LFB136:
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1736              		.loc 1 1146 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741              	.LVL250:
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1742              		.loc 1 1152 0
 1743 065c 038B     		ldrh	r3, [r0, #24]
 1744              	.LVL251:
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 1745              		.loc 1 1155 0
 1746 065e 23F4E043 		bic	r3, r3, #28672
 1747              	.LVL252:
 1748 0662 1B04     		lsls	r3, r3, #16
 1749 0664 1B0C     		lsrs	r3, r3, #16
 1750              	.LVL253:
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 1751              		.loc 1 1158 0
 1752 0666 0902     		lsls	r1, r1, #8
 1753              	.LVL254:
 1754 0668 89B2     		uxth	r1, r1
 1755 066a 0B43     		orrs	r3, r3, r1
 1756              	.LVL255:
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1757              		.loc 1 1161 0
 1758 066c 0383     		strh	r3, [r0, #24]	@ movhi
 1759 066e 7047     		bx	lr
 1760              		.cfi_endproc
 1761              	.LFE136:
 1763              		.align	2
 1764              		.global	TIM_ForcedOC3Config
 1765              		.thumb
 1766              		.thumb_func
 1768              	TIM_ForcedOC3Config:
 1769              	.LFB137:
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1770              		.loc 1 1174 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775              	.LVL256:
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1776              		.loc 1 1181 0
 1777 0670 838B     		ldrh	r3, [r0, #28]
 1778              	.LVL257:
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 1779              		.loc 1 1184 0
 1780 0672 23F07003 		bic	r3, r3, #112
 1781              	.LVL258:
 1782 0676 1B04     		lsls	r3, r3, #16
 1783 0678 1B0C     		lsrs	r3, r3, #16
 1784              	.LVL259:
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 1785              		.loc 1 1187 0
 1786 067a 1943     		orrs	r1, r1, r3
 1787              	.LVL260:
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1788              		.loc 1 1190 0
 1789 067c 8183     		strh	r1, [r0, #28]	@ movhi
 1790 067e 7047     		bx	lr
 1791              		.cfi_endproc
 1792              	.LFE137:
 1794              		.align	2
 1795              		.global	TIM_ForcedOC4Config
 1796              		.thumb
 1797              		.thumb_func
 1799              	TIM_ForcedOC4Config:
 1800              	.LFB138:
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1801              		.loc 1 1203 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806              	.LVL261:
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1807              		.loc 1 1209 0
 1808 0680 838B     		ldrh	r3, [r0, #28]
 1809              	.LVL262:
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 1810              		.loc 1 1212 0
 1811 0682 23F4E043 		bic	r3, r3, #28672
 1812              	.LVL263:
 1813 0686 1B04     		lsls	r3, r3, #16
 1814 0688 1B0C     		lsrs	r3, r3, #16
 1815              	.LVL264:
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 1816              		.loc 1 1215 0
 1817 068a 0902     		lsls	r1, r1, #8
 1818              	.LVL265:
 1819 068c 89B2     		uxth	r1, r1
 1820 068e 0B43     		orrs	r3, r3, r1
 1821              	.LVL266:
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1822              		.loc 1 1218 0
 1823 0690 8383     		strh	r3, [r0, #28]	@ movhi
 1824 0692 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE138:
 1828              		.align	2
 1829              		.global	TIM_OC1PreloadConfig
 1830              		.thumb
 1831              		.thumb_func
 1833              	TIM_OC1PreloadConfig:
 1834              	.LFB139:
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1835              		.loc 1 1231 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840              	.LVL267:
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1841              		.loc 1 1238 0
 1842 0694 038B     		ldrh	r3, [r0, #24]
 1843              	.LVL268:
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 1844              		.loc 1 1241 0
 1845 0696 23F00803 		bic	r3, r3, #8
 1846              	.LVL269:
 1847 069a 1B04     		lsls	r3, r3, #16
 1848 069c 1B0C     		lsrs	r3, r3, #16
 1849              	.LVL270:
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 1850              		.loc 1 1244 0
 1851 069e 1943     		orrs	r1, r1, r3
 1852              	.LVL271:
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1853              		.loc 1 1247 0
 1854 06a0 0183     		strh	r1, [r0, #24]	@ movhi
 1855 06a2 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE139:
 1859              		.align	2
 1860              		.global	TIM_OC2PreloadConfig
 1861              		.thumb
 1862              		.thumb_func
 1864              	TIM_OC2PreloadConfig:
 1865              	.LFB140:
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1866              		.loc 1 1261 0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 1870              		@ link register save eliminated.
 1871              	.LVL272:
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1872              		.loc 1 1268 0
 1873 06a4 038B     		ldrh	r3, [r0, #24]
 1874              	.LVL273:
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 1875              		.loc 1 1271 0
 1876 06a6 23F40063 		bic	r3, r3, #2048
 1877              	.LVL274:
 1878 06aa 1B04     		lsls	r3, r3, #16
 1879 06ac 1B0C     		lsrs	r3, r3, #16
 1880              	.LVL275:
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 1881              		.loc 1 1274 0
 1882 06ae 0902     		lsls	r1, r1, #8
 1883              	.LVL276:
 1884 06b0 89B2     		uxth	r1, r1
 1885 06b2 0B43     		orrs	r3, r3, r1
 1886              	.LVL277:
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1887              		.loc 1 1277 0
 1888 06b4 0383     		strh	r3, [r0, #24]	@ movhi
 1889 06b6 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE140:
 1893              		.align	2
 1894              		.global	TIM_OC3PreloadConfig
 1895              		.thumb
 1896              		.thumb_func
 1898              	TIM_OC3PreloadConfig:
 1899              	.LFB141:
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1900              		.loc 1 1290 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 0
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905              	.LVL278:
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1906              		.loc 1 1297 0
 1907 06b8 838B     		ldrh	r3, [r0, #28]
 1908              	.LVL279:
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 1909              		.loc 1 1300 0
 1910 06ba 23F00803 		bic	r3, r3, #8
 1911              	.LVL280:
 1912 06be 1B04     		lsls	r3, r3, #16
 1913 06c0 1B0C     		lsrs	r3, r3, #16
 1914              	.LVL281:
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 1915              		.loc 1 1303 0
 1916 06c2 1943     		orrs	r1, r1, r3
 1917              	.LVL282:
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1918              		.loc 1 1306 0
 1919 06c4 8183     		strh	r1, [r0, #28]	@ movhi
 1920 06c6 7047     		bx	lr
 1921              		.cfi_endproc
 1922              	.LFE141:
 1924              		.align	2
 1925              		.global	TIM_OC4PreloadConfig
 1926              		.thumb
 1927              		.thumb_func
 1929              	TIM_OC4PreloadConfig:
 1930              	.LFB142:
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1931              		.loc 1 1319 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 0
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              		@ link register save eliminated.
 1936              	.LVL283:
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1937              		.loc 1 1326 0
 1938 06c8 838B     		ldrh	r3, [r0, #28]
 1939              	.LVL284:
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 1940              		.loc 1 1329 0
 1941 06ca 23F40063 		bic	r3, r3, #2048
 1942              	.LVL285:
 1943 06ce 1B04     		lsls	r3, r3, #16
 1944 06d0 1B0C     		lsrs	r3, r3, #16
 1945              	.LVL286:
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 1946              		.loc 1 1332 0
 1947 06d2 0902     		lsls	r1, r1, #8
 1948              	.LVL287:
 1949 06d4 89B2     		uxth	r1, r1
 1950 06d6 0B43     		orrs	r3, r3, r1
 1951              	.LVL288:
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1952              		.loc 1 1335 0
 1953 06d8 8383     		strh	r3, [r0, #28]	@ movhi
 1954 06da 7047     		bx	lr
 1955              		.cfi_endproc
 1956              	.LFE142:
 1958              		.align	2
 1959              		.global	TIM_OC1FastConfig
 1960              		.thumb
 1961              		.thumb_func
 1963              	TIM_OC1FastConfig:
 1964              	.LFB143:
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1965              		.loc 1 1348 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 0
 1968              		@ frame_needed = 0, uses_anonymous_args = 0
 1969              		@ link register save eliminated.
 1970              	.LVL289:
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1971              		.loc 1 1356 0
 1972 06dc 038B     		ldrh	r3, [r0, #24]
 1973              	.LVL290:
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 1974              		.loc 1 1359 0
 1975 06de 23F00403 		bic	r3, r3, #4
 1976              	.LVL291:
 1977 06e2 1B04     		lsls	r3, r3, #16
 1978 06e4 1B0C     		lsrs	r3, r3, #16
 1979              	.LVL292:
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 1980              		.loc 1 1362 0
 1981 06e6 1943     		orrs	r1, r1, r3
 1982              	.LVL293:
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1983              		.loc 1 1365 0
 1984 06e8 0183     		strh	r1, [r0, #24]	@ movhi
 1985 06ea 7047     		bx	lr
 1986              		.cfi_endproc
 1987              	.LFE143:
 1989              		.align	2
 1990              		.global	TIM_OC2FastConfig
 1991              		.thumb
 1992              		.thumb_func
 1994              	TIM_OC2FastConfig:
 1995              	.LFB144:
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1996              		.loc 1 1379 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000              		@ link register save eliminated.
 2001              	.LVL294:
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2002              		.loc 1 1387 0
 2003 06ec 038B     		ldrh	r3, [r0, #24]
 2004              	.LVL295:
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2005              		.loc 1 1390 0
 2006 06ee 23F48063 		bic	r3, r3, #1024
 2007              	.LVL296:
 2008 06f2 1B04     		lsls	r3, r3, #16
 2009 06f4 1B0C     		lsrs	r3, r3, #16
 2010              	.LVL297:
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2011              		.loc 1 1393 0
 2012 06f6 0902     		lsls	r1, r1, #8
 2013              	.LVL298:
 2014 06f8 89B2     		uxth	r1, r1
 2015 06fa 0B43     		orrs	r3, r3, r1
 2016              	.LVL299:
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2017              		.loc 1 1396 0
 2018 06fc 0383     		strh	r3, [r0, #24]	@ movhi
 2019 06fe 7047     		bx	lr
 2020              		.cfi_endproc
 2021              	.LFE144:
 2023              		.align	2
 2024              		.global	TIM_OC3FastConfig
 2025              		.thumb
 2026              		.thumb_func
 2028              	TIM_OC3FastConfig:
 2029              	.LFB145:
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2030              		.loc 1 1409 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              		@ link register save eliminated.
 2035              	.LVL300:
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2036              		.loc 1 1417 0
 2037 0700 838B     		ldrh	r3, [r0, #28]
 2038              	.LVL301:
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2039              		.loc 1 1420 0
 2040 0702 23F00403 		bic	r3, r3, #4
 2041              	.LVL302:
 2042 0706 1B04     		lsls	r3, r3, #16
 2043 0708 1B0C     		lsrs	r3, r3, #16
 2044              	.LVL303:
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2045              		.loc 1 1423 0
 2046 070a 1943     		orrs	r1, r1, r3
 2047              	.LVL304:
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2048              		.loc 1 1426 0
 2049 070c 8183     		strh	r1, [r0, #28]	@ movhi
 2050 070e 7047     		bx	lr
 2051              		.cfi_endproc
 2052              	.LFE145:
 2054              		.align	2
 2055              		.global	TIM_OC4FastConfig
 2056              		.thumb
 2057              		.thumb_func
 2059              	TIM_OC4FastConfig:
 2060              	.LFB146:
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2061              		.loc 1 1439 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066              	.LVL305:
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2067              		.loc 1 1447 0
 2068 0710 838B     		ldrh	r3, [r0, #28]
 2069              	.LVL306:
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2070              		.loc 1 1450 0
 2071 0712 23F48063 		bic	r3, r3, #1024
 2072              	.LVL307:
 2073 0716 1B04     		lsls	r3, r3, #16
 2074 0718 1B0C     		lsrs	r3, r3, #16
 2075              	.LVL308:
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2076              		.loc 1 1453 0
 2077 071a 0902     		lsls	r1, r1, #8
 2078              	.LVL309:
 2079 071c 89B2     		uxth	r1, r1
 2080 071e 0B43     		orrs	r3, r3, r1
 2081              	.LVL310:
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2082              		.loc 1 1456 0
 2083 0720 8383     		strh	r3, [r0, #28]	@ movhi
 2084 0722 7047     		bx	lr
 2085              		.cfi_endproc
 2086              	.LFE146:
 2088              		.align	2
 2089              		.global	TIM_ClearOC1Ref
 2090              		.thumb
 2091              		.thumb_func
 2093              	TIM_ClearOC1Ref:
 2094              	.LFB147:
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2095              		.loc 1 1469 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              		@ link register save eliminated.
 2100              	.LVL311:
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2101              		.loc 1 1476 0
 2102 0724 038B     		ldrh	r3, [r0, #24]
 2103              	.LVL312:
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2104              		.loc 1 1479 0
 2105 0726 23F08003 		bic	r3, r3, #128
 2106              	.LVL313:
 2107 072a 1B04     		lsls	r3, r3, #16
 2108 072c 1B0C     		lsrs	r3, r3, #16
 2109              	.LVL314:
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2110              		.loc 1 1482 0
 2111 072e 1943     		orrs	r1, r1, r3
 2112              	.LVL315:
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2113              		.loc 1 1485 0
 2114 0730 0183     		strh	r1, [r0, #24]	@ movhi
 2115 0732 7047     		bx	lr
 2116              		.cfi_endproc
 2117              	.LFE147:
 2119              		.align	2
 2120              		.global	TIM_ClearOC2Ref
 2121              		.thumb
 2122              		.thumb_func
 2124              	TIM_ClearOC2Ref:
 2125              	.LFB148:
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2126              		.loc 1 1499 0
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 0
 2129              		@ frame_needed = 0, uses_anonymous_args = 0
 2130              		@ link register save eliminated.
 2131              	.LVL316:
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2132              		.loc 1 1506 0
 2133 0734 038B     		ldrh	r3, [r0, #24]
 2134              	.LVL317:
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2135              		.loc 1 1509 0
 2136 0736 C3F30E03 		ubfx	r3, r3, #0, #15
 2137              	.LVL318:
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2138              		.loc 1 1512 0
 2139 073a 0902     		lsls	r1, r1, #8
 2140              	.LVL319:
 2141 073c 89B2     		uxth	r1, r1
 2142 073e 0B43     		orrs	r3, r3, r1
 2143              	.LVL320:
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2144              		.loc 1 1515 0
 2145 0740 0383     		strh	r3, [r0, #24]	@ movhi
 2146 0742 7047     		bx	lr
 2147              		.cfi_endproc
 2148              	.LFE148:
 2150              		.align	2
 2151              		.global	TIM_ClearOC3Ref
 2152              		.thumb
 2153              		.thumb_func
 2155              	TIM_ClearOC3Ref:
 2156              	.LFB149:
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2157              		.loc 1 1528 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162              	.LVL321:
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2163              		.loc 1 1535 0
 2164 0744 838B     		ldrh	r3, [r0, #28]
 2165              	.LVL322:
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2166              		.loc 1 1538 0
 2167 0746 23F08003 		bic	r3, r3, #128
 2168              	.LVL323:
 2169 074a 1B04     		lsls	r3, r3, #16
 2170 074c 1B0C     		lsrs	r3, r3, #16
 2171              	.LVL324:
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2172              		.loc 1 1541 0
 2173 074e 1943     		orrs	r1, r1, r3
 2174              	.LVL325:
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2175              		.loc 1 1544 0
 2176 0750 8183     		strh	r1, [r0, #28]	@ movhi
 2177 0752 7047     		bx	lr
 2178              		.cfi_endproc
 2179              	.LFE149:
 2181              		.align	2
 2182              		.global	TIM_ClearOC4Ref
 2183              		.thumb
 2184              		.thumb_func
 2186              	TIM_ClearOC4Ref:
 2187              	.LFB150:
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2188              		.loc 1 1557 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              		@ link register save eliminated.
 2193              	.LVL326:
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2194              		.loc 1 1564 0
 2195 0754 838B     		ldrh	r3, [r0, #28]
 2196              	.LVL327:
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2197              		.loc 1 1567 0
 2198 0756 C3F30E03 		ubfx	r3, r3, #0, #15
 2199              	.LVL328:
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2200              		.loc 1 1570 0
 2201 075a 0902     		lsls	r1, r1, #8
 2202              	.LVL329:
 2203 075c 89B2     		uxth	r1, r1
 2204 075e 0B43     		orrs	r3, r3, r1
 2205              	.LVL330:
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2206              		.loc 1 1573 0
 2207 0760 8383     		strh	r3, [r0, #28]	@ movhi
 2208 0762 7047     		bx	lr
 2209              		.cfi_endproc
 2210              	.LFE150:
 2212              		.align	2
 2213              		.global	TIM_OC1PolarityConfig
 2214              		.thumb
 2215              		.thumb_func
 2217              	TIM_OC1PolarityConfig:
 2218              	.LFB151:
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2219              		.loc 1 1586 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223              		@ link register save eliminated.
 2224              	.LVL331:
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2225              		.loc 1 1593 0
 2226 0764 038C     		ldrh	r3, [r0, #32]
 2227              	.LVL332:
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2228              		.loc 1 1596 0
 2229 0766 23F00203 		bic	r3, r3, #2
 2230              	.LVL333:
 2231 076a 1B04     		lsls	r3, r3, #16
 2232 076c 1B0C     		lsrs	r3, r3, #16
 2233              	.LVL334:
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2234              		.loc 1 1597 0
 2235 076e 1943     		orrs	r1, r1, r3
 2236              	.LVL335:
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2237              		.loc 1 1600 0
 2238 0770 0184     		strh	r1, [r0, #32]	@ movhi
 2239 0772 7047     		bx	lr
 2240              		.cfi_endproc
 2241              	.LFE151:
 2243              		.align	2
 2244              		.global	TIM_OC1NPolarityConfig
 2245              		.thumb
 2246              		.thumb_func
 2248              	TIM_OC1NPolarityConfig:
 2249              	.LFB152:
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2250              		.loc 1 1613 0
 2251              		.cfi_startproc
 2252              		@ args = 0, pretend = 0, frame = 0
 2253              		@ frame_needed = 0, uses_anonymous_args = 0
 2254              		@ link register save eliminated.
 2255              	.LVL336:
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2256              		.loc 1 1619 0
 2257 0774 038C     		ldrh	r3, [r0, #32]
 2258              	.LVL337:
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2259              		.loc 1 1622 0
 2260 0776 23F00803 		bic	r3, r3, #8
 2261              	.LVL338:
 2262 077a 1B04     		lsls	r3, r3, #16
 2263 077c 1B0C     		lsrs	r3, r3, #16
 2264              	.LVL339:
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2265              		.loc 1 1623 0
 2266 077e 1943     		orrs	r1, r1, r3
 2267              	.LVL340:
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2268              		.loc 1 1626 0
 2269 0780 0184     		strh	r1, [r0, #32]	@ movhi
 2270 0782 7047     		bx	lr
 2271              		.cfi_endproc
 2272              	.LFE152:
 2274              		.align	2
 2275              		.global	TIM_OC2PolarityConfig
 2276              		.thumb
 2277              		.thumb_func
 2279              	TIM_OC2PolarityConfig:
 2280              	.LFB153:
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2281              		.loc 1 1640 0
 2282              		.cfi_startproc
 2283              		@ args = 0, pretend = 0, frame = 0
 2284              		@ frame_needed = 0, uses_anonymous_args = 0
 2285              		@ link register save eliminated.
 2286              	.LVL341:
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2287              		.loc 1 1647 0
 2288 0784 038C     		ldrh	r3, [r0, #32]
 2289              	.LVL342:
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 2290              		.loc 1 1650 0
 2291 0786 23F02003 		bic	r3, r3, #32
 2292              	.LVL343:
 2293 078a 1B04     		lsls	r3, r3, #16
 2294 078c 1B0C     		lsrs	r3, r3, #16
 2295              	.LVL344:
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2296              		.loc 1 1651 0
 2297 078e 0901     		lsls	r1, r1, #4
 2298              	.LVL345:
 2299 0790 89B2     		uxth	r1, r1
 2300 0792 0B43     		orrs	r3, r3, r1
 2301              	.LVL346:
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2302              		.loc 1 1654 0
 2303 0794 0384     		strh	r3, [r0, #32]	@ movhi
 2304 0796 7047     		bx	lr
 2305              		.cfi_endproc
 2306              	.LFE153:
 2308              		.align	2
 2309              		.global	TIM_OC2NPolarityConfig
 2310              		.thumb
 2311              		.thumb_func
 2313              	TIM_OC2NPolarityConfig:
 2314              	.LFB154:
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2315              		.loc 1 1667 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 2319              		@ link register save eliminated.
 2320              	.LVL347:
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2321              		.loc 1 1674 0
 2322 0798 038C     		ldrh	r3, [r0, #32]
 2323              	.LVL348:
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 2324              		.loc 1 1677 0
 2325 079a 23F08003 		bic	r3, r3, #128
 2326              	.LVL349:
 2327 079e 1B04     		lsls	r3, r3, #16
 2328 07a0 1B0C     		lsrs	r3, r3, #16
 2329              	.LVL350:
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2330              		.loc 1 1678 0
 2331 07a2 0901     		lsls	r1, r1, #4
 2332              	.LVL351:
 2333 07a4 89B2     		uxth	r1, r1
 2334 07a6 0B43     		orrs	r3, r3, r1
 2335              	.LVL352:
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2336              		.loc 1 1681 0
 2337 07a8 0384     		strh	r3, [r0, #32]	@ movhi
 2338 07aa 7047     		bx	lr
 2339              		.cfi_endproc
 2340              	.LFE154:
 2342              		.align	2
 2343              		.global	TIM_OC3PolarityConfig
 2344              		.thumb
 2345              		.thumb_func
 2347              	TIM_OC3PolarityConfig:
 2348              	.LFB155:
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2349              		.loc 1 1694 0
 2350              		.cfi_startproc
 2351              		@ args = 0, pretend = 0, frame = 0
 2352              		@ frame_needed = 0, uses_anonymous_args = 0
 2353              		@ link register save eliminated.
 2354              	.LVL353:
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2355              		.loc 1 1701 0
 2356 07ac 038C     		ldrh	r3, [r0, #32]
 2357              	.LVL354:
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 2358              		.loc 1 1704 0
 2359 07ae 23F40073 		bic	r3, r3, #512
 2360              	.LVL355:
 2361 07b2 1B04     		lsls	r3, r3, #16
 2362 07b4 1B0C     		lsrs	r3, r3, #16
 2363              	.LVL356:
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2364              		.loc 1 1705 0
 2365 07b6 0902     		lsls	r1, r1, #8
 2366              	.LVL357:
 2367 07b8 89B2     		uxth	r1, r1
 2368 07ba 0B43     		orrs	r3, r3, r1
 2369              	.LVL358:
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2370              		.loc 1 1708 0
 2371 07bc 0384     		strh	r3, [r0, #32]	@ movhi
 2372 07be 7047     		bx	lr
 2373              		.cfi_endproc
 2374              	.LFE155:
 2376              		.align	2
 2377              		.global	TIM_OC3NPolarityConfig
 2378              		.thumb
 2379              		.thumb_func
 2381              	TIM_OC3NPolarityConfig:
 2382              	.LFB156:
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2383              		.loc 1 1721 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
 2388              	.LVL359:
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2389              		.loc 1 1728 0
 2390 07c0 038C     		ldrh	r3, [r0, #32]
 2391              	.LVL360:
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 2392              		.loc 1 1731 0
 2393 07c2 23F40063 		bic	r3, r3, #2048
 2394              	.LVL361:
 2395 07c6 1B04     		lsls	r3, r3, #16
 2396 07c8 1B0C     		lsrs	r3, r3, #16
 2397              	.LVL362:
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2398              		.loc 1 1732 0
 2399 07ca 0902     		lsls	r1, r1, #8
 2400              	.LVL363:
 2401 07cc 89B2     		uxth	r1, r1
 2402 07ce 0B43     		orrs	r3, r3, r1
 2403              	.LVL364:
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2404              		.loc 1 1735 0
 2405 07d0 0384     		strh	r3, [r0, #32]	@ movhi
 2406 07d2 7047     		bx	lr
 2407              		.cfi_endproc
 2408              	.LFE156:
 2410              		.align	2
 2411              		.global	TIM_OC4PolarityConfig
 2412              		.thumb
 2413              		.thumb_func
 2415              	TIM_OC4PolarityConfig:
 2416              	.LFB157:
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2417              		.loc 1 1748 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              		@ link register save eliminated.
 2422              	.LVL365:
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2423              		.loc 1 1755 0
 2424 07d4 038C     		ldrh	r3, [r0, #32]
 2425              	.LVL366:
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 2426              		.loc 1 1758 0
 2427 07d6 23F40053 		bic	r3, r3, #8192
 2428              	.LVL367:
 2429 07da 1B04     		lsls	r3, r3, #16
 2430 07dc 1B0C     		lsrs	r3, r3, #16
 2431              	.LVL368:
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2432              		.loc 1 1759 0
 2433 07de 0903     		lsls	r1, r1, #12
 2434              	.LVL369:
 2435 07e0 89B2     		uxth	r1, r1
 2436 07e2 0B43     		orrs	r3, r3, r1
 2437              	.LVL370:
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2438              		.loc 1 1762 0
 2439 07e4 0384     		strh	r3, [r0, #32]	@ movhi
 2440 07e6 7047     		bx	lr
 2441              		.cfi_endproc
 2442              	.LFE157:
 2444              		.align	2
 2445              		.global	TIM_CCxCmd
 2446              		.thumb
 2447              		.thumb_func
 2449              	TIM_CCxCmd:
 2450              	.LFB158:
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2451              		.loc 1 1779 0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 0
 2454              		@ frame_needed = 0, uses_anonymous_args = 0
 2455              		@ link register save eliminated.
 2456              	.LVL371:
 2457 07e8 10B4     		push	{r4}
 2458              		.cfi_def_cfa_offset 4
 2459              		.cfi_offset 4, -4
 2460              	.LVL372:
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 2461              		.loc 1 1787 0
 2462 07ea 0123     		movs	r3, #1
 2463 07ec 8B40     		lsls	r3, r3, r1
 2464              	.LVL373:
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 2465              		.loc 1 1790 0
 2466 07ee 048C     		ldrh	r4, [r0, #32]
 2467 07f0 DB43     		mvns	r3, r3
 2468              	.LVL374:
 2469 07f2 9BB2     		uxth	r3, r3
 2470              	.LVL375:
 2471 07f4 2340     		ands	r3, r3, r4
 2472 07f6 0384     		strh	r3, [r0, #32]	@ movhi
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 2473              		.loc 1 1793 0
 2474 07f8 038C     		ldrh	r3, [r0, #32]
 2475 07fa 8A40     		lsls	r2, r2, r1
 2476              	.LVL376:
 2477 07fc 1343     		orrs	r3, r3, r2
 2478 07fe 9BB2     		uxth	r3, r3
 2479 0800 0384     		strh	r3, [r0, #32]	@ movhi
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2480              		.loc 1 1794 0
 2481 0802 5DF8044B 		ldr	r4, [sp], #4
 2482 0806 7047     		bx	lr
 2483              		.cfi_endproc
 2484              	.LFE158:
 2486              		.align	2
 2487              		.global	TIM_CCxNCmd
 2488              		.thumb
 2489              		.thumb_func
 2491              	TIM_CCxNCmd:
 2492              	.LFB159:
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2493              		.loc 1 1809 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498              	.LVL377:
 2499 0808 10B4     		push	{r4}
 2500              		.cfi_def_cfa_offset 4
 2501              		.cfi_offset 4, -4
 2502              	.LVL378:
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 2503              		.loc 1 1817 0
 2504 080a 0423     		movs	r3, #4
 2505 080c 8B40     		lsls	r3, r3, r1
 2506              	.LVL379:
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 2507              		.loc 1 1820 0
 2508 080e 048C     		ldrh	r4, [r0, #32]
 2509 0810 DB43     		mvns	r3, r3
 2510              	.LVL380:
 2511 0812 9BB2     		uxth	r3, r3
 2512              	.LVL381:
 2513 0814 2340     		ands	r3, r3, r4
 2514 0816 0384     		strh	r3, [r0, #32]	@ movhi
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 2515              		.loc 1 1823 0
 2516 0818 038C     		ldrh	r3, [r0, #32]
 2517 081a 8A40     		lsls	r2, r2, r1
 2518              	.LVL382:
 2519 081c 1343     		orrs	r3, r3, r2
 2520 081e 9BB2     		uxth	r3, r3
 2521 0820 0384     		strh	r3, [r0, #32]	@ movhi
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2522              		.loc 1 1824 0
 2523 0822 5DF8044B 		ldr	r4, [sp], #4
 2524 0826 7047     		bx	lr
 2525              		.cfi_endproc
 2526              	.LFE159:
 2528              		.align	2
 2529              		.global	TIM_ICStructInit
 2530              		.thumb
 2531              		.thumb_func
 2533              	TIM_ICStructInit:
 2534              	.LFB161:
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2535              		.loc 1 1947 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
 2540              	.LVL383:
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 2541              		.loc 1 1949 0
 2542 0828 0023     		movs	r3, #0
 2543 082a 0380     		strh	r3, [r0]	@ movhi
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 2544              		.loc 1 1950 0
 2545 082c 4380     		strh	r3, [r0, #2]	@ movhi
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 2546              		.loc 1 1951 0
 2547 082e 0122     		movs	r2, #1
 2548 0830 8280     		strh	r2, [r0, #4]	@ movhi
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 2549              		.loc 1 1952 0
 2550 0832 C380     		strh	r3, [r0, #6]	@ movhi
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 2551              		.loc 1 1953 0
 2552 0834 0381     		strh	r3, [r0, #8]	@ movhi
 2553 0836 7047     		bx	lr
 2554              		.cfi_endproc
 2555              	.LFE161:
 2557              		.align	2
 2558              		.global	TIM_GetCapture1
 2559              		.thumb
 2560              		.thumb_func
 2562              	TIM_GetCapture1:
 2563              	.LFB163:
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2564              		.loc 1 2023 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 0
 2567              		@ frame_needed = 0, uses_anonymous_args = 0
 2568              		@ link register save eliminated.
 2569              	.LVL384:
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 2570              		.loc 1 2028 0
 2571 0838 406B     		ldr	r0, [r0, #52]
 2572              	.LVL385:
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2573              		.loc 1 2029 0
 2574 083a 7047     		bx	lr
 2575              		.cfi_endproc
 2576              	.LFE163:
 2578              		.align	2
 2579              		.global	TIM_GetCapture2
 2580              		.thumb
 2581              		.thumb_func
 2583              	TIM_GetCapture2:
 2584              	.LFB164:
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2585              		.loc 1 2038 0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 0
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
 2590              	.LVL386:
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 2591              		.loc 1 2043 0
 2592 083c 806B     		ldr	r0, [r0, #56]
 2593              	.LVL387:
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2594              		.loc 1 2044 0
 2595 083e 7047     		bx	lr
 2596              		.cfi_endproc
 2597              	.LFE164:
 2599              		.align	2
 2600              		.global	TIM_GetCapture3
 2601              		.thumb
 2602              		.thumb_func
 2604              	TIM_GetCapture3:
 2605              	.LFB165:
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2606              		.loc 1 2052 0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 0, uses_anonymous_args = 0
 2610              		@ link register save eliminated.
 2611              	.LVL388:
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 2612              		.loc 1 2057 0
 2613 0840 C06B     		ldr	r0, [r0, #60]
 2614              	.LVL389:
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2615              		.loc 1 2058 0
 2616 0842 7047     		bx	lr
 2617              		.cfi_endproc
 2618              	.LFE165:
 2620              		.align	2
 2621              		.global	TIM_GetCapture4
 2622              		.thumb
 2623              		.thumb_func
 2625              	TIM_GetCapture4:
 2626              	.LFB166:
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2627              		.loc 1 2066 0
 2628              		.cfi_startproc
 2629              		@ args = 0, pretend = 0, frame = 0
 2630              		@ frame_needed = 0, uses_anonymous_args = 0
 2631              		@ link register save eliminated.
 2632              	.LVL390:
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 2633              		.loc 1 2071 0
 2634 0844 006C     		ldr	r0, [r0, #64]
 2635              	.LVL391:
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2636              		.loc 1 2072 0
 2637 0846 7047     		bx	lr
 2638              		.cfi_endproc
 2639              	.LFE166:
 2641              		.align	2
 2642              		.global	TIM_SetIC1Prescaler
 2643              		.thumb
 2644              		.thumb_func
 2646              	TIM_SetIC1Prescaler:
 2647              	.LFB167:
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2648              		.loc 1 2086 0
 2649              		.cfi_startproc
 2650              		@ args = 0, pretend = 0, frame = 0
 2651              		@ frame_needed = 0, uses_anonymous_args = 0
 2652              		@ link register save eliminated.
 2653              	.LVL392:
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 2654              		.loc 1 2092 0
 2655 0848 038B     		ldrh	r3, [r0, #24]
 2656 084a 23F00C03 		bic	r3, r3, #12
 2657 084e 1B04     		lsls	r3, r3, #16
 2658 0850 1B0C     		lsrs	r3, r3, #16
 2659 0852 0383     		strh	r3, [r0, #24]	@ movhi
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 2660              		.loc 1 2095 0
 2661 0854 038B     		ldrh	r3, [r0, #24]
 2662 0856 9BB2     		uxth	r3, r3
 2663 0858 1943     		orrs	r1, r1, r3
 2664              	.LVL393:
 2665 085a 0183     		strh	r1, [r0, #24]	@ movhi
 2666 085c 7047     		bx	lr
 2667              		.cfi_endproc
 2668              	.LFE167:
 2670 085e 00BF     		.align	2
 2671              		.global	TIM_SetIC2Prescaler
 2672              		.thumb
 2673              		.thumb_func
 2675              	TIM_SetIC2Prescaler:
 2676              	.LFB168:
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2677              		.loc 1 2111 0
 2678              		.cfi_startproc
 2679              		@ args = 0, pretend = 0, frame = 0
 2680              		@ frame_needed = 0, uses_anonymous_args = 0
 2681              		@ link register save eliminated.
 2682              	.LVL394:
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 2683              		.loc 1 2117 0
 2684 0860 038B     		ldrh	r3, [r0, #24]
 2685 0862 23F44063 		bic	r3, r3, #3072
 2686 0866 1B04     		lsls	r3, r3, #16
 2687 0868 1B0C     		lsrs	r3, r3, #16
 2688 086a 0383     		strh	r3, [r0, #24]	@ movhi
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 2689              		.loc 1 2120 0
 2690 086c 038B     		ldrh	r3, [r0, #24]
 2691 086e 9BB2     		uxth	r3, r3
 2692 0870 0902     		lsls	r1, r1, #8
 2693              	.LVL395:
 2694 0872 89B2     		uxth	r1, r1
 2695 0874 0B43     		orrs	r3, r3, r1
 2696 0876 0383     		strh	r3, [r0, #24]	@ movhi
 2697 0878 7047     		bx	lr
 2698              		.cfi_endproc
 2699              	.LFE168:
 2701 087a 00BF     		.align	2
 2702              		.global	TIM_PWMIConfig
 2703              		.thumb
 2704              		.thumb_func
 2706              	TIM_PWMIConfig:
 2707              	.LFB162:
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2708              		.loc 1 1966 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 0
 2711              		@ frame_needed = 0, uses_anonymous_args = 0
 2712              	.LVL396:
 2713 087c F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2714              		.cfi_def_cfa_offset 24
 2715              		.cfi_offset 3, -24
 2716              		.cfi_offset 4, -20
 2717              		.cfi_offset 5, -16
 2718              		.cfi_offset 6, -12
 2719              		.cfi_offset 7, -8
 2720              		.cfi_offset 14, -4
 2721 087e 0546     		mov	r5, r0
 2722 0880 0C46     		mov	r4, r1
 2723              	.LVL397:
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 2724              		.loc 1 1974 0
 2725 0882 4988     		ldrh	r1, [r1, #2]
 2726              	.LVL398:
 2727 0884 09B9     		cbnz	r1, .L117
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 2728              		.loc 1 1976 0
 2729 0886 0227     		movs	r7, #2
 2730 0888 00E0     		b	.L113
 2731              	.L117:
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 2732              		.loc 1 1980 0
 2733 088a 0027     		movs	r7, #0
 2734              	.L113:
 2735              	.LVL399:
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 2736              		.loc 1 1983 0
 2737 088c A388     		ldrh	r3, [r4, #4]
 2738 088e 012B     		cmp	r3, #1
 2739 0890 01D1     		bne	.L118
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 2740              		.loc 1 1985 0
 2741 0892 0226     		movs	r6, #2
 2742 0894 00E0     		b	.L114
 2743              	.L118:
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 2744              		.loc 1 1989 0
 2745 0896 0126     		movs	r6, #1
 2746              	.L114:
 2747              	.LVL400:
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2748              		.loc 1 1991 0
 2749 0898 2288     		ldrh	r2, [r4]
 2750 089a 9AB9     		cbnz	r2, .L115
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2751              		.loc 1 1994 0
 2752 089c 2846     		mov	r0, r5
 2753              	.LVL401:
 2754 089e 1A46     		mov	r2, r3
 2755 08a0 2389     		ldrh	r3, [r4, #8]
 2756 08a2 FFF7ADFB 		bl	TI1_Config
 2757              	.LVL402:
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2758              		.loc 1 1997 0
 2759 08a6 2846     		mov	r0, r5
 2760 08a8 E188     		ldrh	r1, [r4, #6]
 2761 08aa FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2762              	.LVL403:
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2763              		.loc 1 1999 0
 2764 08ae 2846     		mov	r0, r5
 2765 08b0 3946     		mov	r1, r7
 2766 08b2 3246     		mov	r2, r6
 2767 08b4 2389     		ldrh	r3, [r4, #8]
 2768 08b6 FFF7BFFB 		bl	TI2_Config
 2769              	.LVL404:
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2770              		.loc 1 2001 0
 2771 08ba 2846     		mov	r0, r5
 2772 08bc E188     		ldrh	r1, [r4, #6]
 2773 08be FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2774              	.LVL405:
 2775 08c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2776              	.LVL406:
 2777              	.L115:
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2778              		.loc 1 2006 0
 2779 08c4 2846     		mov	r0, r5
 2780              	.LVL407:
 2781 08c6 1A46     		mov	r2, r3
 2782 08c8 2389     		ldrh	r3, [r4, #8]
 2783 08ca FFF7B5FB 		bl	TI2_Config
 2784              	.LVL408:
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2785              		.loc 1 2009 0
 2786 08ce 2846     		mov	r0, r5
 2787 08d0 E188     		ldrh	r1, [r4, #6]
 2788 08d2 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2789              	.LVL409:
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2790              		.loc 1 2011 0
 2791 08d6 2846     		mov	r0, r5
 2792 08d8 3946     		mov	r1, r7
 2793 08da 3246     		mov	r2, r6
 2794 08dc 2389     		ldrh	r3, [r4, #8]
 2795 08de FFF78FFB 		bl	TI1_Config
 2796              	.LVL410:
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2797              		.loc 1 2013 0
 2798 08e2 2846     		mov	r0, r5
 2799 08e4 E188     		ldrh	r1, [r4, #6]
 2800 08e6 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2801              	.LVL411:
 2802 08ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2803              		.cfi_endproc
 2804              	.LFE162:
 2806              		.align	2
 2807              		.global	TIM_SetIC3Prescaler
 2808              		.thumb
 2809              		.thumb_func
 2811              	TIM_SetIC3Prescaler:
 2812              	.LFB169:
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2813              		.loc 1 2135 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817              		@ link register save eliminated.
 2818              	.LVL412:
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 2819              		.loc 1 2141 0
 2820 08ec 838B     		ldrh	r3, [r0, #28]
 2821 08ee 23F00C03 		bic	r3, r3, #12
 2822 08f2 1B04     		lsls	r3, r3, #16
 2823 08f4 1B0C     		lsrs	r3, r3, #16
 2824 08f6 8383     		strh	r3, [r0, #28]	@ movhi
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 2825              		.loc 1 2144 0
 2826 08f8 838B     		ldrh	r3, [r0, #28]
 2827 08fa 9BB2     		uxth	r3, r3
 2828 08fc 1943     		orrs	r1, r1, r3
 2829              	.LVL413:
 2830 08fe 8183     		strh	r1, [r0, #28]	@ movhi
 2831 0900 7047     		bx	lr
 2832              		.cfi_endproc
 2833              	.LFE169:
 2835 0902 00BF     		.align	2
 2836              		.global	TIM_SetIC4Prescaler
 2837              		.thumb
 2838              		.thumb_func
 2840              	TIM_SetIC4Prescaler:
 2841              	.LFB170:
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 2842              		.loc 1 2159 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 0
 2845              		@ frame_needed = 0, uses_anonymous_args = 0
 2846              		@ link register save eliminated.
 2847              	.LVL414:
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 2848              		.loc 1 2165 0
 2849 0904 838B     		ldrh	r3, [r0, #28]
 2850 0906 23F44063 		bic	r3, r3, #3072
 2851 090a 1B04     		lsls	r3, r3, #16
 2852 090c 1B0C     		lsrs	r3, r3, #16
 2853 090e 8383     		strh	r3, [r0, #28]	@ movhi
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 2854              		.loc 1 2168 0
 2855 0910 838B     		ldrh	r3, [r0, #28]
 2856 0912 9BB2     		uxth	r3, r3
 2857 0914 0902     		lsls	r1, r1, #8
 2858              	.LVL415:
 2859 0916 89B2     		uxth	r1, r1
 2860 0918 0B43     		orrs	r3, r3, r1
 2861 091a 8383     		strh	r3, [r0, #28]	@ movhi
 2862 091c 7047     		bx	lr
 2863              		.cfi_endproc
 2864              	.LFE170:
 2866 091e 00BF     		.align	2
 2867              		.global	TIM_ICInit
 2868              		.thumb
 2869              		.thumb_func
 2871              	TIM_ICInit:
 2872              	.LFB160:
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2873              		.loc 1 1891 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              	.LVL416:
 2878 0920 38B5     		push	{r3, r4, r5, lr}
 2879              		.cfi_def_cfa_offset 16
 2880              		.cfi_offset 3, -16
 2881              		.cfi_offset 4, -12
 2882              		.cfi_offset 5, -8
 2883              		.cfi_offset 14, -4
 2884 0922 0546     		mov	r5, r0
 2885 0924 0C46     		mov	r4, r1
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2886              		.loc 1 1899 0
 2887 0926 0B88     		ldrh	r3, [r1]
 2888 0928 4BB9     		cbnz	r3, .L122
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2889              		.loc 1 1902 0
 2890 092a 4988     		ldrh	r1, [r1, #2]
 2891              	.LVL417:
 2892 092c A288     		ldrh	r2, [r4, #4]
 2893 092e 2389     		ldrh	r3, [r4, #8]
 2894 0930 FFF766FB 		bl	TI1_Config
 2895              	.LVL418:
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2896              		.loc 1 1906 0
 2897 0934 2846     		mov	r0, r5
 2898 0936 E188     		ldrh	r1, [r4, #6]
 2899 0938 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2900              	.LVL419:
 2901 093c 38BD     		pop	{r3, r4, r5, pc}
 2902              	.LVL420:
 2903              	.L122:
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 2904              		.loc 1 1908 0
 2905 093e 042B     		cmp	r3, #4
 2906 0940 09D1     		bne	.L124
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2907              		.loc 1 1912 0
 2908 0942 4988     		ldrh	r1, [r1, #2]
 2909              	.LVL421:
 2910 0944 A288     		ldrh	r2, [r4, #4]
 2911 0946 2389     		ldrh	r3, [r4, #8]
 2912 0948 FFF776FB 		bl	TI2_Config
 2913              	.LVL422:
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2914              		.loc 1 1916 0
 2915 094c 2846     		mov	r0, r5
 2916 094e E188     		ldrh	r1, [r4, #6]
 2917 0950 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2918              	.LVL423:
 2919 0954 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL424:
 2921              	.L124:
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 2922              		.loc 1 1918 0
 2923 0956 082B     		cmp	r3, #8
 2924 0958 09D1     		bne	.L125
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 2925              		.loc 1 1922 0
 2926 095a 4988     		ldrh	r1, [r1, #2]
 2927              	.LVL425:
 2928 095c A288     		ldrh	r2, [r4, #4]
 2929 095e 2389     		ldrh	r3, [r4, #8]
 2930 0960 FFF78AFB 		bl	TI3_Config
 2931              	.LVL426:
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2932              		.loc 1 1926 0
 2933 0964 2846     		mov	r0, r5
 2934 0966 E188     		ldrh	r1, [r4, #6]
 2935 0968 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 2936              	.LVL427:
 2937 096c 38BD     		pop	{r3, r4, r5, pc}
 2938              	.LVL428:
 2939              	.L125:
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2940              		.loc 1 1932 0
 2941 096e 4988     		ldrh	r1, [r1, #2]
 2942              	.LVL429:
 2943 0970 A288     		ldrh	r2, [r4, #4]
 2944 0972 2389     		ldrh	r3, [r4, #8]
 2945 0974 FFF79EFB 		bl	TI4_Config
 2946              	.LVL430:
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2947              		.loc 1 1936 0
 2948 0978 2846     		mov	r0, r5
 2949 097a E188     		ldrh	r1, [r4, #6]
 2950 097c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 2951              	.LVL431:
 2952 0980 38BD     		pop	{r3, r4, r5, pc}
 2953              		.cfi_endproc
 2954              	.LFE160:
 2956 0982 00BF     		.align	2
 2957              		.global	TIM_BDTRConfig
 2958              		.thumb
 2959              		.thumb_func
 2961              	TIM_BDTRConfig:
 2962              	.LFB171:
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2963              		.loc 1 2212 0
 2964              		.cfi_startproc
 2965              		@ args = 0, pretend = 0, frame = 0
 2966              		@ frame_needed = 0, uses_anonymous_args = 0
 2967              		@ link register save eliminated.
 2968              	.LVL432:
 2969 0984 F0B4     		push	{r4, r5, r6, r7}
 2970              		.cfi_def_cfa_offset 16
 2971              		.cfi_offset 4, -16
 2972              		.cfi_offset 5, -12
 2973              		.cfi_offset 6, -8
 2974              		.cfi_offset 7, -4
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2975              		.loc 1 2224 0
 2976 0986 B1F800C0 		ldrh	ip, [r1]
 2977 098a 4B88     		ldrh	r3, [r1, #2]
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 2978              		.loc 1 2225 0
 2979 098c 8F88     		ldrh	r7, [r1, #4]
 2980 098e CE88     		ldrh	r6, [r1, #6]
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 2981              		.loc 1 2226 0
 2982 0990 0D89     		ldrh	r5, [r1, #8]
 2983 0992 4C89     		ldrh	r4, [r1, #10]
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 2984              		.loc 1 2227 0
 2985 0994 8A89     		ldrh	r2, [r1, #12]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2986              		.loc 1 2224 0
 2987 0996 4CEA0303 		orr	r3, ip, r3
 2988 099a 3B43     		orrs	r3, r3, r7
 2989 099c 3343     		orrs	r3, r3, r6
 2990 099e 2B43     		orrs	r3, r3, r5
 2991 09a0 2343     		orrs	r3, r3, r4
 2992 09a2 1343     		orrs	r3, r3, r2
 2993 09a4 A0F84430 		strh	r3, [r0, #68]	@ movhi
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2994              		.loc 1 2228 0
 2995 09a8 F0BC     		pop	{r4, r5, r6, r7}
 2996 09aa 7047     		bx	lr
 2997              		.cfi_endproc
 2998              	.LFE171:
 3000              		.align	2
 3001              		.global	TIM_BDTRStructInit
 3002              		.thumb
 3003              		.thumb_func
 3005              	TIM_BDTRStructInit:
 3006              	.LFB172:
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3007              		.loc 1 2237 0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
 3011              		@ link register save eliminated.
 3012              	.LVL433:
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 3013              		.loc 1 2239 0
 3014 09ac 0023     		movs	r3, #0
 3015 09ae 0380     		strh	r3, [r0]	@ movhi
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 3016              		.loc 1 2240 0
 3017 09b0 4380     		strh	r3, [r0, #2]	@ movhi
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 3018              		.loc 1 2241 0
 3019 09b2 8380     		strh	r3, [r0, #4]	@ movhi
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 3020              		.loc 1 2242 0
 3021 09b4 C380     		strh	r3, [r0, #6]	@ movhi
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 3022              		.loc 1 2243 0
 3023 09b6 0381     		strh	r3, [r0, #8]	@ movhi
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 3024              		.loc 1 2244 0
 3025 09b8 4381     		strh	r3, [r0, #10]	@ movhi
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 3026              		.loc 1 2245 0
 3027 09ba 8381     		strh	r3, [r0, #12]	@ movhi
 3028 09bc 7047     		bx	lr
 3029              		.cfi_endproc
 3030              	.LFE172:
 3032 09be 00BF     		.align	2
 3033              		.global	TIM_CtrlPWMOutputs
 3034              		.thumb
 3035              		.thumb_func
 3037              	TIM_CtrlPWMOutputs:
 3038              	.LFB173:
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3039              		.loc 1 2256 0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 0
 3042              		@ frame_needed = 0, uses_anonymous_args = 0
 3043              		@ link register save eliminated.
 3044              	.LVL434:
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3045              		.loc 1 2261 0
 3046 09c0 49B1     		cbz	r1, .L129
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 3047              		.loc 1 2264 0
 3048 09c2 B0F84430 		ldrh	r3, [r0, #68]
 3049 09c6 6FEA4343 		mvn	r3, r3, lsl #17
 3050 09ca 6FEA5343 		mvn	r3, r3, lsr #17
 3051 09ce 9BB2     		uxth	r3, r3
 3052 09d0 A0F84430 		strh	r3, [r0, #68]	@ movhi
 3053 09d4 7047     		bx	lr
 3054              	.L129:
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 3055              		.loc 1 2269 0
 3056 09d6 B0F84430 		ldrh	r3, [r0, #68]
 3057 09da C3F30E03 		ubfx	r3, r3, #0, #15
 3058 09de A0F84430 		strh	r3, [r0, #68]	@ movhi
 3059 09e2 7047     		bx	lr
 3060              		.cfi_endproc
 3061              	.LFE173:
 3063              		.align	2
 3064              		.global	TIM_SelectCOM
 3065              		.thumb
 3066              		.thumb_func
 3068              	TIM_SelectCOM:
 3069              	.LFB174:
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3070              		.loc 1 2281 0
 3071              		.cfi_startproc
 3072              		@ args = 0, pretend = 0, frame = 0
 3073              		@ frame_needed = 0, uses_anonymous_args = 0
 3074              		@ link register save eliminated.
 3075              	.LVL435:
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3076              		.loc 1 2286 0
 3077 09e4 29B1     		cbz	r1, .L132
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 3078              		.loc 1 2289 0
 3079 09e6 8388     		ldrh	r3, [r0, #4]
 3080 09e8 9BB2     		uxth	r3, r3
 3081 09ea 43F00403 		orr	r3, r3, #4
 3082 09ee 8380     		strh	r3, [r0, #4]	@ movhi
 3083 09f0 7047     		bx	lr
 3084              	.L132:
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 3085              		.loc 1 2294 0
 3086 09f2 8388     		ldrh	r3, [r0, #4]
 3087 09f4 23F00403 		bic	r3, r3, #4
 3088 09f8 1B04     		lsls	r3, r3, #16
 3089 09fa 1B0C     		lsrs	r3, r3, #16
 3090 09fc 8380     		strh	r3, [r0, #4]	@ movhi
 3091 09fe 7047     		bx	lr
 3092              		.cfi_endproc
 3093              	.LFE174:
 3095              		.align	2
 3096              		.global	TIM_CCPreloadControl
 3097              		.thumb
 3098              		.thumb_func
 3100              	TIM_CCPreloadControl:
 3101              	.LFB175:
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3102              		.loc 1 2306 0
 3103              		.cfi_startproc
 3104              		@ args = 0, pretend = 0, frame = 0
 3105              		@ frame_needed = 0, uses_anonymous_args = 0
 3106              		@ link register save eliminated.
 3107              	.LVL436:
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3108              		.loc 1 2310 0
 3109 0a00 29B1     		cbz	r1, .L135
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 3110              		.loc 1 2313 0
 3111 0a02 8388     		ldrh	r3, [r0, #4]
 3112 0a04 9BB2     		uxth	r3, r3
 3113 0a06 43F00103 		orr	r3, r3, #1
 3114 0a0a 8380     		strh	r3, [r0, #4]	@ movhi
 3115 0a0c 7047     		bx	lr
 3116              	.L135:
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 3117              		.loc 1 2318 0
 3118 0a0e 8388     		ldrh	r3, [r0, #4]
 3119 0a10 23F00103 		bic	r3, r3, #1
 3120 0a14 1B04     		lsls	r3, r3, #16
 3121 0a16 1B0C     		lsrs	r3, r3, #16
 3122 0a18 8380     		strh	r3, [r0, #4]	@ movhi
 3123 0a1a 7047     		bx	lr
 3124              		.cfi_endproc
 3125              	.LFE175:
 3127              		.align	2
 3128              		.global	TIM_ITConfig
 3129              		.thumb
 3130              		.thumb_func
 3132              	TIM_ITConfig:
 3133              	.LFB176:
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3134              		.loc 1 2363 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 0
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138              		@ link register save eliminated.
 3139              	.LVL437:
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3140              		.loc 1 2369 0
 3141 0a1c 22B1     		cbz	r2, .L138
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 3142              		.loc 1 2372 0
 3143 0a1e 8389     		ldrh	r3, [r0, #12]
 3144 0a20 9BB2     		uxth	r3, r3
 3145 0a22 1943     		orrs	r1, r1, r3
 3146              	.LVL438:
 3147 0a24 8181     		strh	r1, [r0, #12]	@ movhi
 3148 0a26 7047     		bx	lr
 3149              	.LVL439:
 3150              	.L138:
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 3151              		.loc 1 2377 0
 3152 0a28 8389     		ldrh	r3, [r0, #12]
 3153 0a2a C943     		mvns	r1, r1
 3154              	.LVL440:
 3155 0a2c 89B2     		uxth	r1, r1
 3156 0a2e 1940     		ands	r1, r1, r3
 3157 0a30 8181     		strh	r1, [r0, #12]	@ movhi
 3158 0a32 7047     		bx	lr
 3159              		.cfi_endproc
 3160              	.LFE176:
 3162              		.align	2
 3163              		.global	TIM_GenerateEvent
 3164              		.thumb
 3165              		.thumb_func
 3167              	TIM_GenerateEvent:
 3168              	.LFB177:
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3169              		.loc 1 2401 0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173              		@ link register save eliminated.
 3174              	.LVL441:
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 3175              		.loc 1 2407 0
 3176 0a34 8182     		strh	r1, [r0, #20]	@ movhi
 3177 0a36 7047     		bx	lr
 3178              		.cfi_endproc
 3179              	.LFE177:
 3181              		.align	2
 3182              		.global	TIM_GetFlagStatus
 3183              		.thumb
 3184              		.thumb_func
 3186              	TIM_GetFlagStatus:
 3187              	.LFB178:
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3188              		.loc 1 2434 0
 3189              		.cfi_startproc
 3190              		@ args = 0, pretend = 0, frame = 0
 3191              		@ frame_needed = 0, uses_anonymous_args = 0
 3192              		@ link register save eliminated.
 3193              	.LVL442:
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 3194              		.loc 1 2441 0
 3195 0a38 038A     		ldrh	r3, [r0, #16]
 3196 0a3a 1942     		tst	r1, r3
 3197 0a3c 01D0     		beq	.L143
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 3198              		.loc 1 2443 0
 3199 0a3e 0120     		movs	r0, #1
 3200              	.LVL443:
 3201 0a40 7047     		bx	lr
 3202              	.LVL444:
 3203              	.L143:
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 3204              		.loc 1 2447 0
 3205 0a42 0020     		movs	r0, #0
 3206              	.LVL445:
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3207              		.loc 1 2450 0
 3208 0a44 7047     		bx	lr
 3209              		.cfi_endproc
 3210              	.LFE178:
 3212 0a46 00BF     		.align	2
 3213              		.global	TIM_ClearFlag
 3214              		.thumb
 3215              		.thumb_func
 3217              	TIM_ClearFlag:
 3218              	.LFB179:
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3219              		.loc 1 2476 0
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 0, uses_anonymous_args = 0
 3223              		@ link register save eliminated.
 3224              	.LVL446:
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 3225              		.loc 1 2481 0
 3226 0a48 C943     		mvns	r1, r1
 3227              	.LVL447:
 3228 0a4a 89B2     		uxth	r1, r1
 3229 0a4c 0182     		strh	r1, [r0, #16]	@ movhi
 3230 0a4e 7047     		bx	lr
 3231              		.cfi_endproc
 3232              	.LFE179:
 3234              		.align	2
 3235              		.global	TIM_GetITStatus
 3236              		.thumb
 3237              		.thumb_func
 3239              	TIM_GetITStatus:
 3240              	.LFB180:
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3241              		.loc 1 2504 0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 0
 3244              		@ frame_needed = 0, uses_anonymous_args = 0
 3245              		@ link register save eliminated.
 3246              	.LVL448:
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 3247              		.loc 1 2511 0
 3248 0a50 038A     		ldrh	r3, [r0, #16]
 3249              	.LVL449:
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 3250              		.loc 1 2513 0
 3251 0a52 8289     		ldrh	r2, [r0, #12]
 3252 0a54 0A40     		ands	r2, r2, r1
 3253              	.LVL450:
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3254              		.loc 1 2514 0
 3255 0a56 1942     		tst	r1, r3
 3256 0a58 02D0     		beq	.L147
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3257              		.loc 1 2514 0 is_stmt 0 discriminator 1
 3258 0a5a 1AB9     		cbnz	r2, .L148
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 3259              		.loc 1 2520 0 is_stmt 1
 3260 0a5c 0020     		movs	r0, #0
 3261              	.LVL451:
 3262 0a5e 7047     		bx	lr
 3263              	.LVL452:
 3264              	.L147:
 3265 0a60 0020     		movs	r0, #0
 3266              	.LVL453:
 3267 0a62 7047     		bx	lr
 3268              	.LVL454:
 3269              	.L148:
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 3270              		.loc 1 2516 0
 3271 0a64 0120     		movs	r0, #1
 3272              	.LVL455:
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3273              		.loc 1 2523 0
 3274 0a66 7047     		bx	lr
 3275              		.cfi_endproc
 3276              	.LFE180:
 3278              		.align	2
 3279              		.global	TIM_ClearITPendingBit
 3280              		.thumb
 3281              		.thumb_func
 3283              	TIM_ClearITPendingBit:
 3284              	.LFB181:
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3285              		.loc 1 2545 0
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 0
 3288              		@ frame_needed = 0, uses_anonymous_args = 0
 3289              		@ link register save eliminated.
 3290              	.LVL456:
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 3291              		.loc 1 2550 0
 3292 0a68 C943     		mvns	r1, r1
 3293              	.LVL457:
 3294 0a6a 89B2     		uxth	r1, r1
 3295 0a6c 0182     		strh	r1, [r0, #16]	@ movhi
 3296 0a6e 7047     		bx	lr
 3297              		.cfi_endproc
 3298              	.LFE181:
 3300              		.align	2
 3301              		.global	TIM_DMAConfig
 3302              		.thumb
 3303              		.thumb_func
 3305              	TIM_DMAConfig:
 3306              	.LFB182:
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3307              		.loc 1 2582 0
 3308              		.cfi_startproc
 3309              		@ args = 0, pretend = 0, frame = 0
 3310              		@ frame_needed = 0, uses_anonymous_args = 0
 3311              		@ link register save eliminated.
 3312              	.LVL458:
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 3313              		.loc 1 2589 0
 3314 0a70 0A43     		orrs	r2, r2, r1
 3315              	.LVL459:
 3316 0a72 A0F84820 		strh	r2, [r0, #72]	@ movhi
 3317 0a76 7047     		bx	lr
 3318              		.cfi_endproc
 3319              	.LFE182:
 3321              		.align	2
 3322              		.global	TIM_DMACmd
 3323              		.thumb
 3324              		.thumb_func
 3326              	TIM_DMACmd:
 3327              	.LFB183:
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3328              		.loc 1 2609 0
 3329              		.cfi_startproc
 3330              		@ args = 0, pretend = 0, frame = 0
 3331              		@ frame_needed = 0, uses_anonymous_args = 0
 3332              		@ link register save eliminated.
 3333              	.LVL460:
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3334              		.loc 1 2615 0
 3335 0a78 22B1     		cbz	r2, .L152
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 3336              		.loc 1 2618 0
 3337 0a7a 8389     		ldrh	r3, [r0, #12]
 3338 0a7c 9BB2     		uxth	r3, r3
 3339 0a7e 1943     		orrs	r1, r1, r3
 3340              	.LVL461:
 3341 0a80 8181     		strh	r1, [r0, #12]	@ movhi
 3342 0a82 7047     		bx	lr
 3343              	.LVL462:
 3344              	.L152:
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 3345              		.loc 1 2623 0
 3346 0a84 8389     		ldrh	r3, [r0, #12]
 3347 0a86 C943     		mvns	r1, r1
 3348              	.LVL463:
 3349 0a88 89B2     		uxth	r1, r1
 3350 0a8a 1940     		ands	r1, r1, r3
 3351 0a8c 8181     		strh	r1, [r0, #12]	@ movhi
 3352 0a8e 7047     		bx	lr
 3353              		.cfi_endproc
 3354              	.LFE183:
 3356              		.align	2
 3357              		.global	TIM_SelectCCDMA
 3358              		.thumb
 3359              		.thumb_func
 3361              	TIM_SelectCCDMA:
 3362              	.LFB184:
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3363              		.loc 1 2635 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
 3368              	.LVL464:
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3369              		.loc 1 2640 0
 3370 0a90 29B1     		cbz	r1, .L155
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 3371              		.loc 1 2643 0
 3372 0a92 8388     		ldrh	r3, [r0, #4]
 3373 0a94 9BB2     		uxth	r3, r3
 3374 0a96 43F00803 		orr	r3, r3, #8
 3375 0a9a 8380     		strh	r3, [r0, #4]	@ movhi
 3376 0a9c 7047     		bx	lr
 3377              	.L155:
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 3378              		.loc 1 2648 0
 3379 0a9e 8388     		ldrh	r3, [r0, #4]
 3380 0aa0 23F00803 		bic	r3, r3, #8
 3381 0aa4 1B04     		lsls	r3, r3, #16
 3382 0aa6 1B0C     		lsrs	r3, r3, #16
 3383 0aa8 8380     		strh	r3, [r0, #4]	@ movhi
 3384 0aaa 7047     		bx	lr
 3385              		.cfi_endproc
 3386              	.LFE184:
 3388              		.align	2
 3389              		.global	TIM_InternalClockConfig
 3390              		.thumb
 3391              		.thumb_func
 3393              	TIM_InternalClockConfig:
 3394              	.LFB185:
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3395              		.loc 1 2674 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 0
 3398              		@ frame_needed = 0, uses_anonymous_args = 0
 3399              		@ link register save eliminated.
 3400              	.LVL465:
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 3401              		.loc 1 2679 0
 3402 0aac 0389     		ldrh	r3, [r0, #8]
 3403 0aae 23F00703 		bic	r3, r3, #7
 3404 0ab2 1B04     		lsls	r3, r3, #16
 3405 0ab4 1B0C     		lsrs	r3, r3, #16
 3406 0ab6 0381     		strh	r3, [r0, #8]	@ movhi
 3407 0ab8 7047     		bx	lr
 3408              		.cfi_endproc
 3409              	.LFE185:
 3411 0aba 00BF     		.align	2
 3412              		.global	TIM_SelectInputTrigger
 3413              		.thumb
 3414              		.thumb_func
 3416              	TIM_SelectInputTrigger:
 3417              	.LFB190:
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3418              		.loc 1 2880 0
 3419              		.cfi_startproc
 3420              		@ args = 0, pretend = 0, frame = 0
 3421              		@ frame_needed = 0, uses_anonymous_args = 0
 3422              		@ link register save eliminated.
 3423              	.LVL466:
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3424              		.loc 1 2888 0
 3425 0abc 0389     		ldrh	r3, [r0, #8]
 3426              	.LVL467:
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 3427              		.loc 1 2891 0
 3428 0abe 23F07003 		bic	r3, r3, #112
 3429              	.LVL468:
 3430 0ac2 1B04     		lsls	r3, r3, #16
 3431 0ac4 1B0C     		lsrs	r3, r3, #16
 3432              	.LVL469:
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 3433              		.loc 1 2894 0
 3434 0ac6 1943     		orrs	r1, r1, r3
 3435              	.LVL470:
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3436              		.loc 1 2897 0
 3437 0ac8 0181     		strh	r1, [r0, #8]	@ movhi
 3438 0aca 7047     		bx	lr
 3439              		.cfi_endproc
 3440              	.LFE190:
 3442              		.align	2
 3443              		.global	TIM_ITRxExternalClockConfig
 3444              		.thumb
 3445              		.thumb_func
 3447              	TIM_ITRxExternalClockConfig:
 3448              	.LFB186:
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3449              		.loc 1 2695 0
 3450              		.cfi_startproc
 3451              		@ args = 0, pretend = 0, frame = 0
 3452              		@ frame_needed = 0, uses_anonymous_args = 0
 3453              	.LVL471:
 3454 0acc 10B5     		push	{r4, lr}
 3455              		.cfi_def_cfa_offset 8
 3456              		.cfi_offset 4, -8
 3457              		.cfi_offset 14, -4
 3458 0ace 0446     		mov	r4, r0
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 3459              		.loc 1 2701 0
 3460 0ad0 FFF7FEFF 		bl	TIM_SelectInputTrigger
 3461              	.LVL472:
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 3462              		.loc 1 2704 0
 3463 0ad4 2389     		ldrh	r3, [r4, #8]
 3464 0ad6 9BB2     		uxth	r3, r3
 3465 0ad8 43F00703 		orr	r3, r3, #7
 3466 0adc 2381     		strh	r3, [r4, #8]	@ movhi
 3467 0ade 10BD     		pop	{r4, pc}
 3468              		.cfi_endproc
 3469              	.LFE186:
 3471              		.align	2
 3472              		.global	TIM_TIxExternalClockConfig
 3473              		.thumb
 3474              		.thumb_func
 3476              	TIM_TIxExternalClockConfig:
 3477              	.LFB187:
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3478              		.loc 1 2726 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 0
 3481              		@ frame_needed = 0, uses_anonymous_args = 0
 3482              	.LVL473:
 3483 0ae0 38B5     		push	{r3, r4, r5, lr}
 3484              		.cfi_def_cfa_offset 16
 3485              		.cfi_offset 3, -16
 3486              		.cfi_offset 4, -12
 3487              		.cfi_offset 5, -8
 3488              		.cfi_offset 14, -4
 3489 0ae2 0446     		mov	r4, r0
 3490 0ae4 0D46     		mov	r5, r1
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 3491              		.loc 1 2733 0
 3492 0ae6 6029     		cmp	r1, #96
 3493 0ae8 04D1     		bne	.L161
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 3494              		.loc 1 2735 0
 3495 0aea 1146     		mov	r1, r2
 3496              	.LVL474:
 3497 0aec 0122     		movs	r2, #1
 3498              	.LVL475:
 3499 0aee FFF7A3FA 		bl	TI2_Config
 3500              	.LVL476:
 3501 0af2 03E0     		b	.L162
 3502              	.LVL477:
 3503              	.L161:
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 3504              		.loc 1 2739 0
 3505 0af4 1146     		mov	r1, r2
 3506              	.LVL478:
 3507 0af6 0122     		movs	r2, #1
 3508              	.LVL479:
 3509 0af8 FFF782FA 		bl	TI1_Config
 3510              	.LVL480:
 3511              	.L162:
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 3512              		.loc 1 2742 0
 3513 0afc 2046     		mov	r0, r4
 3514 0afe 2946     		mov	r1, r5
 3515 0b00 FFF7FEFF 		bl	TIM_SelectInputTrigger
 3516              	.LVL481:
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 3517              		.loc 1 2744 0
 3518 0b04 2389     		ldrh	r3, [r4, #8]
 3519 0b06 9BB2     		uxth	r3, r3
 3520 0b08 43F00703 		orr	r3, r3, #7
 3521 0b0c 2381     		strh	r3, [r4, #8]	@ movhi
 3522 0b0e 38BD     		pop	{r3, r4, r5, pc}
 3523              		.cfi_endproc
 3524              	.LFE187:
 3526              		.align	2
 3527              		.global	TIM_SelectOutputTrigger
 3528              		.thumb
 3529              		.thumb_func
 3531              	TIM_SelectOutputTrigger:
 3532              	.LFB191:
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3533              		.loc 1 2923 0
 3534              		.cfi_startproc
 3535              		@ args = 0, pretend = 0, frame = 0
 3536              		@ frame_needed = 0, uses_anonymous_args = 0
 3537              		@ link register save eliminated.
 3538              	.LVL482:
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 3539              		.loc 1 2929 0
 3540 0b10 8388     		ldrh	r3, [r0, #4]
 3541 0b12 23F07003 		bic	r3, r3, #112
 3542 0b16 1B04     		lsls	r3, r3, #16
 3543 0b18 1B0C     		lsrs	r3, r3, #16
 3544 0b1a 8380     		strh	r3, [r0, #4]	@ movhi
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 3545              		.loc 1 2931 0
 3546 0b1c 8388     		ldrh	r3, [r0, #4]
 3547 0b1e 9BB2     		uxth	r3, r3
 3548 0b20 1943     		orrs	r1, r1, r3
 3549              	.LVL483:
 3550 0b22 8180     		strh	r1, [r0, #4]	@ movhi
 3551 0b24 7047     		bx	lr
 3552              		.cfi_endproc
 3553              	.LFE191:
 3555 0b26 00BF     		.align	2
 3556              		.global	TIM_SelectSlaveMode
 3557              		.thumb
 3558              		.thumb_func
 3560              	TIM_SelectSlaveMode:
 3561              	.LFB192:
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3562              		.loc 1 2947 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL484:
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 3568              		.loc 1 2953 0
 3569 0b28 0389     		ldrh	r3, [r0, #8]
 3570 0b2a 23F00703 		bic	r3, r3, #7
 3571 0b2e 1B04     		lsls	r3, r3, #16
 3572 0b30 1B0C     		lsrs	r3, r3, #16
 3573 0b32 0381     		strh	r3, [r0, #8]	@ movhi
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 3574              		.loc 1 2956 0
 3575 0b34 0389     		ldrh	r3, [r0, #8]
 3576 0b36 9BB2     		uxth	r3, r3
 3577 0b38 1943     		orrs	r1, r1, r3
 3578              	.LVL485:
 3579 0b3a 0181     		strh	r1, [r0, #8]	@ movhi
 3580 0b3c 7047     		bx	lr
 3581              		.cfi_endproc
 3582              	.LFE192:
 3584 0b3e 00BF     		.align	2
 3585              		.global	TIM_SelectMasterSlaveMode
 3586              		.thumb
 3587              		.thumb_func
 3589              	TIM_SelectMasterSlaveMode:
 3590              	.LFB193:
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3591              		.loc 1 2970 0
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 0
 3594              		@ frame_needed = 0, uses_anonymous_args = 0
 3595              		@ link register save eliminated.
 3596              	.LVL486:
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 3597              		.loc 1 2976 0
 3598 0b40 0389     		ldrh	r3, [r0, #8]
 3599 0b42 23F08003 		bic	r3, r3, #128
 3600 0b46 1B04     		lsls	r3, r3, #16
 3601 0b48 1B0C     		lsrs	r3, r3, #16
 3602 0b4a 0381     		strh	r3, [r0, #8]	@ movhi
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 3603              		.loc 1 2979 0
 3604 0b4c 0389     		ldrh	r3, [r0, #8]
 3605 0b4e 9BB2     		uxth	r3, r3
 3606 0b50 1943     		orrs	r1, r1, r3
 3607              	.LVL487:
 3608 0b52 0181     		strh	r1, [r0, #8]	@ movhi
 3609 0b54 7047     		bx	lr
 3610              		.cfi_endproc
 3611              	.LFE193:
 3613 0b56 00BF     		.align	2
 3614              		.global	TIM_ETRConfig
 3615              		.thumb
 3616              		.thumb_func
 3618              	TIM_ETRConfig:
 3619              	.LFB194:
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3620              		.loc 1 3001 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 0
 3623              		@ frame_needed = 0, uses_anonymous_args = 0
 3624              		@ link register save eliminated.
 3625              	.LVL488:
 3626 0b58 10B4     		push	{r4}
 3627              		.cfi_def_cfa_offset 4
 3628              		.cfi_offset 4, -4
 3629              	.LVL489:
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3630              		.loc 1 3010 0
 3631 0b5a 0489     		ldrh	r4, [r0, #8]
 3632              	.LVL490:
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 3633              		.loc 1 3013 0
 3634 0b5c E4B2     		uxtb	r4, r4
 3635              	.LVL491:
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 3636              		.loc 1 3016 0
 3637 0b5e 1B02     		lsls	r3, r3, #8
 3638              	.LVL492:
 3639 0b60 9BB2     		uxth	r3, r3
 3640 0b62 1A43     		orrs	r2, r2, r3
 3641              	.LVL493:
 3642 0b64 1143     		orrs	r1, r1, r2
 3643              	.LVL494:
 3644 0b66 0C43     		orrs	r4, r4, r1
 3645              	.LVL495:
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3646              		.loc 1 3019 0
 3647 0b68 0481     		strh	r4, [r0, #8]	@ movhi
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3648              		.loc 1 3020 0
 3649 0b6a 5DF8044B 		ldr	r4, [sp], #4
 3650              	.LVL496:
 3651 0b6e 7047     		bx	lr
 3652              		.cfi_endproc
 3653              	.LFE194:
 3655              		.align	2
 3656              		.global	TIM_ETRClockMode1Config
 3657              		.thumb
 3658              		.thumb_func
 3660              	TIM_ETRClockMode1Config:
 3661              	.LFB188:
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3662              		.loc 1 2766 0
 3663              		.cfi_startproc
 3664              		@ args = 0, pretend = 0, frame = 0
 3665              		@ frame_needed = 0, uses_anonymous_args = 0
 3666              	.LVL497:
 3667 0b70 10B5     		push	{r4, lr}
 3668              		.cfi_def_cfa_offset 8
 3669              		.cfi_offset 4, -8
 3670              		.cfi_offset 14, -4
 3671 0b72 0446     		mov	r4, r0
 3672              	.LVL498:
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 3673              		.loc 1 2775 0
 3674 0b74 FFF7FEFF 		bl	TIM_ETRConfig
 3675              	.LVL499:
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3676              		.loc 1 2778 0
 3677 0b78 2389     		ldrh	r3, [r4, #8]
 3678              	.LVL500:
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 3679              		.loc 1 2787 0
 3680 0b7a 23F07703 		bic	r3, r3, #119
 3681              	.LVL501:
 3682 0b7e 1B04     		lsls	r3, r3, #16
 3683 0b80 1B0C     		lsrs	r3, r3, #16
 3684              	.LVL502:
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 3685              		.loc 1 2788 0
 3686 0b82 43F07703 		orr	r3, r3, #119
 3687              	.LVL503:
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3688              		.loc 1 2791 0
 3689 0b86 2381     		strh	r3, [r4, #8]	@ movhi
 3690 0b88 10BD     		pop	{r4, pc}
 3691              		.cfi_endproc
 3692              	.LFE188:
 3694 0b8a 00BF     		.align	2
 3695              		.global	TIM_ETRClockMode2Config
 3696              		.thumb
 3697              		.thumb_func
 3699              	TIM_ETRClockMode2Config:
 3700              	.LFB189:
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3701              		.loc 1 2813 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 3705              	.LVL504:
 3706 0b8c 10B5     		push	{r4, lr}
 3707              		.cfi_def_cfa_offset 8
 3708              		.cfi_offset 4, -8
 3709              		.cfi_offset 14, -4
 3710 0b8e 0446     		mov	r4, r0
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 3711              		.loc 1 2821 0
 3712 0b90 FFF7FEFF 		bl	TIM_ETRConfig
 3713              	.LVL505:
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 3714              		.loc 1 2824 0
 3715 0b94 2389     		ldrh	r3, [r4, #8]
 3716 0b96 9BB2     		uxth	r3, r3
 3717 0b98 43F48043 		orr	r3, r3, #16384
 3718 0b9c 2381     		strh	r3, [r4, #8]	@ movhi
 3719 0b9e 10BD     		pop	{r4, pc}
 3720              		.cfi_endproc
 3721              	.LFE189:
 3723              		.align	2
 3724              		.global	TIM_EncoderInterfaceConfig
 3725              		.thumb
 3726              		.thumb_func
 3728              	TIM_EncoderInterfaceConfig:
 3729              	.LFB195:
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3730              		.loc 1 3059 0
 3731              		.cfi_startproc
 3732              		@ args = 0, pretend = 0, frame = 0
 3733              		@ frame_needed = 0, uses_anonymous_args = 0
 3734              		@ link register save eliminated.
 3735              	.LVL506:
 3736 0ba0 70B4     		push	{r4, r5, r6}
 3737              		.cfi_def_cfa_offset 12
 3738              		.cfi_offset 4, -12
 3739              		.cfi_offset 5, -8
 3740              		.cfi_offset 6, -4
 3741              	.LVL507:
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3742              		.loc 1 3071 0
 3743 0ba2 0489     		ldrh	r4, [r0, #8]
 3744              	.LVL508:
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3745              		.loc 1 3074 0
 3746 0ba4 068B     		ldrh	r6, [r0, #24]
 3747 0ba6 B6B2     		uxth	r6, r6
 3748              	.LVL509:
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3749              		.loc 1 3077 0
 3750 0ba8 058C     		ldrh	r5, [r0, #32]
 3751              	.LVL510:
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 3752              		.loc 1 3080 0
 3753 0baa 24F00704 		bic	r4, r4, #7
 3754              	.LVL511:
 3755 0bae 2404     		lsls	r4, r4, #16
 3756 0bb0 240C     		lsrs	r4, r4, #16
 3757              	.LVL512:
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 3758              		.loc 1 3081 0
 3759 0bb2 2143     		orrs	r1, r1, r4
 3760              	.LVL513:
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 3761              		.loc 1 3084 0
 3762 0bb4 26F44076 		bic	r6, r6, #768
 3763              	.LVL514:
 3764 0bb8 26F00306 		bic	r6, r6, #3
 3765              	.LVL515:
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 3766              		.loc 1 3085 0
 3767 0bbc 46F48076 		orr	r6, r6, #256
 3768              	.LVL516:
 3769 0bc0 46F00106 		orr	r6, r6, #1
 3770              	.LVL517:
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 3771              		.loc 1 3088 0
 3772 0bc4 25F02205 		bic	r5, r5, #34
 3773              	.LVL518:
 3774 0bc8 2D04     		lsls	r5, r5, #16
 3775 0bca 2D0C     		lsrs	r5, r5, #16
 3776              	.LVL519:
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 3777              		.loc 1 3089 0
 3778 0bcc 1B01     		lsls	r3, r3, #4
 3779              	.LVL520:
 3780 0bce 9BB2     		uxth	r3, r3
 3781 0bd0 1A43     		orrs	r2, r2, r3
 3782              	.LVL521:
 3783 0bd2 1543     		orrs	r5, r5, r2
 3784              	.LVL522:
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3785              		.loc 1 3092 0
 3786 0bd4 0181     		strh	r1, [r0, #8]	@ movhi
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3787              		.loc 1 3095 0
 3788 0bd6 0683     		strh	r6, [r0, #24]	@ movhi
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3789              		.loc 1 3098 0
 3790 0bd8 0584     		strh	r5, [r0, #32]	@ movhi
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3791              		.loc 1 3099 0
 3792 0bda 70BC     		pop	{r4, r5, r6}
 3793              	.LVL523:
 3794 0bdc 7047     		bx	lr
 3795              		.cfi_endproc
 3796              	.LFE195:
 3798 0bde 00BF     		.align	2
 3799              		.global	TIM_SelectHallSensor
 3800              		.thumb
 3801              		.thumb_func
 3803              	TIM_SelectHallSensor:
 3804              	.LFB196:
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3805              		.loc 1 3110 0
 3806              		.cfi_startproc
 3807              		@ args = 0, pretend = 0, frame = 0
 3808              		@ frame_needed = 0, uses_anonymous_args = 0
 3809              		@ link register save eliminated.
 3810              	.LVL524:
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3811              		.loc 1 3115 0
 3812 0be0 29B1     		cbz	r1, .L171
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 3813              		.loc 1 3118 0
 3814 0be2 8388     		ldrh	r3, [r0, #4]
 3815 0be4 9BB2     		uxth	r3, r3
 3816 0be6 43F08003 		orr	r3, r3, #128
 3817 0bea 8380     		strh	r3, [r0, #4]	@ movhi
 3818 0bec 7047     		bx	lr
 3819              	.L171:
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 3820              		.loc 1 3123 0
 3821 0bee 8388     		ldrh	r3, [r0, #4]
 3822 0bf0 23F08003 		bic	r3, r3, #128
 3823 0bf4 1B04     		lsls	r3, r3, #16
 3824 0bf6 1B0C     		lsrs	r3, r3, #16
 3825 0bf8 8380     		strh	r3, [r0, #4]	@ movhi
 3826 0bfa 7047     		bx	lr
 3827              		.cfi_endproc
 3828              	.LFE196:
 3830              		.align	2
 3831              		.global	TIM_RemapConfig
 3832              		.thumb
 3833              		.thumb_func
 3835              	TIM_RemapConfig:
 3836              	.LFB197:
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3837              		.loc 1 3161 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 0
 3840              		@ frame_needed = 0, uses_anonymous_args = 0
 3841              		@ link register save eliminated.
 3842              	.LVL525:
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 3843              		.loc 1 3167 0
 3844 0bfc A0F85010 		strh	r1, [r0, #80]	@ movhi
 3845 0c00 7047     		bx	lr
 3846              		.cfi_endproc
 3847              	.LFE197:
 3849              	.Letext0:
 3850              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\mach
 3851              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q2\\arm-none-eabi\\include\\stdi
 3852              		.file 4 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\STM32F4xx\\Include/s
 3853              		.file 5 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\STM32F4xx_StdPeriph_
 3854              		.file 6 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\CMSIS\\Include/core_
 3855              		.file 7 "C:\\Users\\Filip\\Git\\STM32F4Discovery\\Eclipse\\StepDownConverter\\STM32F4xx_StdPeriph_
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:22     .text:00000000 TI1_Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:87     .text:00000038 TI2_Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:160    .text:00000078 TI3_Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:229    .text:000000b4 TI4_Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:304    .text:000000f4 TIM_DeInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:568    .text:00000258 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:584    .text:0000028c $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:589    .text:0000028c TIM_TimeBaseInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:679    .text:00000300 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:684    .text:00000308 $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:689    .text:00000308 TIM_TimeBaseStructInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:718    .text:0000031c TIM_PrescalerConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:739    .text:00000324 TIM_CounterModeConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:770    .text:00000334 TIM_SetCounter
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:789    .text:00000338 TIM_SetAutoreload
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:808    .text:0000033c TIM_GetCounter
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:829    .text:00000340 TIM_GetPrescaler
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:851    .text:00000348 TIM_UpdateDisableConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:883    .text:00000364 TIM_UpdateRequestConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:915    .text:00000380 TIM_ARRPreloadConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:947    .text:0000039c TIM_SelectOnePulseMode
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:976    .text:000003b4 TIM_SetClockDivision
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1005   .text:000003cc TIM_Cmd
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1037   .text:000003e8 TIM_OC1Init
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1142   .text:00000454 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1146   .text:00000458 $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1151   .text:00000458 TIM_OC2Init
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1270   .text:000004e0 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1274   .text:000004e4 $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1279   .text:000004e4 TIM_OC3Init
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1396   .text:00000568 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1400   .text:0000056c $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1405   .text:0000056c TIM_OC4Init
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1500   .text:000005d4 $d
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1504   .text:000005d8 $t
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1509   .text:000005d8 TIM_OCStructInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1543   .text:000005ec TIM_SelectOCxM
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1627   .text:0000063c TIM_SetCompare1
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1646   .text:00000640 TIM_SetCompare2
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1665   .text:00000644 TIM_SetCompare3
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1684   .text:00000648 TIM_SetCompare4
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1703   .text:0000064c TIM_ForcedOC1Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1734   .text:0000065c TIM_ForcedOC2Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1768   .text:00000670 TIM_ForcedOC3Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1799   .text:00000680 TIM_ForcedOC4Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1833   .text:00000694 TIM_OC1PreloadConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1864   .text:000006a4 TIM_OC2PreloadConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1898   .text:000006b8 TIM_OC3PreloadConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1929   .text:000006c8 TIM_OC4PreloadConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1963   .text:000006dc TIM_OC1FastConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:1994   .text:000006ec TIM_OC2FastConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2028   .text:00000700 TIM_OC3FastConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2059   .text:00000710 TIM_OC4FastConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2093   .text:00000724 TIM_ClearOC1Ref
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2124   .text:00000734 TIM_ClearOC2Ref
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2155   .text:00000744 TIM_ClearOC3Ref
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2186   .text:00000754 TIM_ClearOC4Ref
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2217   .text:00000764 TIM_OC1PolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2248   .text:00000774 TIM_OC1NPolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2279   .text:00000784 TIM_OC2PolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2313   .text:00000798 TIM_OC2NPolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2347   .text:000007ac TIM_OC3PolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2381   .text:000007c0 TIM_OC3NPolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2415   .text:000007d4 TIM_OC4PolarityConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2449   .text:000007e8 TIM_CCxCmd
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2491   .text:00000808 TIM_CCxNCmd
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2533   .text:00000828 TIM_ICStructInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2562   .text:00000838 TIM_GetCapture1
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2583   .text:0000083c TIM_GetCapture2
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2604   .text:00000840 TIM_GetCapture3
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2625   .text:00000844 TIM_GetCapture4
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2646   .text:00000848 TIM_SetIC1Prescaler
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2675   .text:00000860 TIM_SetIC2Prescaler
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2706   .text:0000087c TIM_PWMIConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2811   .text:000008ec TIM_SetIC3Prescaler
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2840   .text:00000904 TIM_SetIC4Prescaler
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2871   .text:00000920 TIM_ICInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:2961   .text:00000984 TIM_BDTRConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3005   .text:000009ac TIM_BDTRStructInit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3037   .text:000009c0 TIM_CtrlPWMOutputs
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3068   .text:000009e4 TIM_SelectCOM
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3100   .text:00000a00 TIM_CCPreloadControl
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3132   .text:00000a1c TIM_ITConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3167   .text:00000a34 TIM_GenerateEvent
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3186   .text:00000a38 TIM_GetFlagStatus
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3217   .text:00000a48 TIM_ClearFlag
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3239   .text:00000a50 TIM_GetITStatus
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3283   .text:00000a68 TIM_ClearITPendingBit
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3305   .text:00000a70 TIM_DMAConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3326   .text:00000a78 TIM_DMACmd
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3361   .text:00000a90 TIM_SelectCCDMA
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3393   .text:00000aac TIM_InternalClockConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3416   .text:00000abc TIM_SelectInputTrigger
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3447   .text:00000acc TIM_ITRxExternalClockConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3476   .text:00000ae0 TIM_TIxExternalClockConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3531   .text:00000b10 TIM_SelectOutputTrigger
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3560   .text:00000b28 TIM_SelectSlaveMode
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3589   .text:00000b40 TIM_SelectMasterSlaveMode
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3618   .text:00000b58 TIM_ETRConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3660   .text:00000b70 TIM_ETRClockMode1Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3699   .text:00000b8c TIM_ETRClockMode2Config
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3728   .text:00000ba0 TIM_EncoderInterfaceConfig
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3803   .text:00000be0 TIM_SelectHallSensor
C:\Users\Filip\AppData\Local\Temp\ccbefugc.s:3835   .text:00000bfc TIM_RemapConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1c01c98cf54d5aaab4df87c6bb476f00
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:00000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_tim.h.169.f9c9fddd8bb204291f141cd786a08645

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
