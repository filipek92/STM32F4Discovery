   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	GPIO_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	GPIO_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  26              		.loc 1 121 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  35              		.loc 1 125 0
  36 0002 374B     		ldr	r3, .L11
  37 0004 9842     		cmp	r0, r3
  38 0006 08D1     		bne	.L2
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  39              		.loc 1 127 0
  40 0008 0120     		movs	r0, #1
  41              	.LVL1:
  42 000a 0146     		mov	r1, r0
  43 000c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  44              	.LVL2:
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  45              		.loc 1 128 0
  46 0010 0120     		movs	r0, #1
  47 0012 0021     		movs	r1, #0
  48 0014 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  49              	.LVL3:
  50 0018 08BD     		pop	{r3, pc}
  51              	.LVL4:
  52              	.L2:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  53              		.loc 1 130 0
  54 001a 324B     		ldr	r3, .L11+4
  55 001c 9842     		cmp	r0, r3
  56 001e 08D1     		bne	.L4
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  57              		.loc 1 132 0
  58 0020 0220     		movs	r0, #2
  59              	.LVL5:
  60 0022 0121     		movs	r1, #1
  61 0024 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  62              	.LVL6:
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  63              		.loc 1 133 0
  64 0028 0220     		movs	r0, #2
  65 002a 0021     		movs	r1, #0
  66 002c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  67              	.LVL7:
  68 0030 08BD     		pop	{r3, pc}
  69              	.LVL8:
  70              	.L4:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  71              		.loc 1 135 0
  72 0032 2D4B     		ldr	r3, .L11+8
  73 0034 9842     		cmp	r0, r3
  74 0036 08D1     		bne	.L5
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  75              		.loc 1 137 0
  76 0038 0420     		movs	r0, #4
  77              	.LVL9:
  78 003a 0121     		movs	r1, #1
  79 003c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  80              	.LVL10:
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  81              		.loc 1 138 0
  82 0040 0420     		movs	r0, #4
  83 0042 0021     		movs	r1, #0
  84 0044 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  85              	.LVL11:
  86 0048 08BD     		pop	{r3, pc}
  87              	.LVL12:
  88              	.L5:
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  89              		.loc 1 140 0
  90 004a 284B     		ldr	r3, .L11+12
  91 004c 9842     		cmp	r0, r3
  92 004e 08D1     		bne	.L6
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  93              		.loc 1 142 0
  94 0050 0820     		movs	r0, #8
  95              	.LVL13:
  96 0052 0121     		movs	r1, #1
  97 0054 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  98              	.LVL14:
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
  99              		.loc 1 143 0
 100 0058 0820     		movs	r0, #8
 101 005a 0021     		movs	r1, #0
 102 005c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 103              	.LVL15:
 104 0060 08BD     		pop	{r3, pc}
 105              	.LVL16:
 106              	.L6:
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 107              		.loc 1 145 0
 108 0062 234B     		ldr	r3, .L11+16
 109 0064 9842     		cmp	r0, r3
 110 0066 08D1     		bne	.L7
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 111              		.loc 1 147 0
 112 0068 1020     		movs	r0, #16
 113              	.LVL17:
 114 006a 0121     		movs	r1, #1
 115 006c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 116              	.LVL18:
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 117              		.loc 1 148 0
 118 0070 1020     		movs	r0, #16
 119 0072 0021     		movs	r1, #0
 120 0074 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 121              	.LVL19:
 122 0078 08BD     		pop	{r3, pc}
 123              	.LVL20:
 124              	.L7:
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 125              		.loc 1 150 0
 126 007a 1E4B     		ldr	r3, .L11+20
 127 007c 9842     		cmp	r0, r3
 128 007e 08D1     		bne	.L8
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 129              		.loc 1 152 0
 130 0080 2020     		movs	r0, #32
 131              	.LVL21:
 132 0082 0121     		movs	r1, #1
 133 0084 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 134              	.LVL22:
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 135              		.loc 1 153 0
 136 0088 2020     		movs	r0, #32
 137 008a 0021     		movs	r1, #0
 138 008c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 139              	.LVL23:
 140 0090 08BD     		pop	{r3, pc}
 141              	.LVL24:
 142              	.L8:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 143              		.loc 1 155 0
 144 0092 194B     		ldr	r3, .L11+24
 145 0094 9842     		cmp	r0, r3
 146 0096 08D1     		bne	.L9
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 147              		.loc 1 157 0
 148 0098 4020     		movs	r0, #64
 149              	.LVL25:
 150 009a 0121     		movs	r1, #1
 151 009c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 152              	.LVL26:
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 153              		.loc 1 158 0
 154 00a0 4020     		movs	r0, #64
 155 00a2 0021     		movs	r1, #0
 156 00a4 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 157              	.LVL27:
 158 00a8 08BD     		pop	{r3, pc}
 159              	.LVL28:
 160              	.L9:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 161              		.loc 1 160 0
 162 00aa 144B     		ldr	r3, .L11+28
 163 00ac 9842     		cmp	r0, r3
 164 00ae 08D1     		bne	.L10
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 165              		.loc 1 162 0
 166 00b0 8020     		movs	r0, #128
 167              	.LVL29:
 168 00b2 0121     		movs	r1, #1
 169 00b4 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170              	.LVL30:
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 171              		.loc 1 163 0
 172 00b8 8020     		movs	r0, #128
 173 00ba 0021     		movs	r1, #0
 174 00bc FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 175              	.LVL31:
 176 00c0 08BD     		pop	{r3, pc}
 177              	.LVL32:
 178              	.L10:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 179              		.loc 1 167 0
 180 00c2 0F4B     		ldr	r3, .L11+32
 181 00c4 9842     		cmp	r0, r3
 182 00c6 09D1     		bne	.L1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 183              		.loc 1 169 0
 184 00c8 4FF48070 		mov	r0, #256
 185              	.LVL33:
 186 00cc 0121     		movs	r1, #1
 187 00ce FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 188              	.LVL34:
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 189              		.loc 1 170 0
 190 00d2 4FF48070 		mov	r0, #256
 191 00d6 0021     		movs	r1, #0
 192 00d8 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 193              	.LVL35:
 194              	.L1:
 195 00dc 08BD     		pop	{r3, pc}
 196              	.L12:
 197 00de 00BF     		.align	2
 198              	.L11:
 199 00e0 00000240 		.word	1073872896
 200 00e4 00040240 		.word	1073873920
 201 00e8 00080240 		.word	1073874944
 202 00ec 000C0240 		.word	1073875968
 203 00f0 00100240 		.word	1073876992
 204 00f4 00140240 		.word	1073878016
 205 00f8 00180240 		.word	1073879040
 206 00fc 001C0240 		.word	1073880064
 207 0100 00200240 		.word	1073881088
 208              		.cfi_endproc
 209              	.LFE110:
 211              		.align	2
 212              		.global	GPIO_Init
 213              		.thumb
 214              		.thumb_func
 216              	GPIO_Init:
 217              	.LFB111:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 218              		.loc 1 183 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL36:
 224 0104 F0B4     		push	{r4, r5, r6, r7}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 4, -16
 227              		.cfi_offset 5, -12
 228              		.cfi_offset 6, -8
 229              		.cfi_offset 7, -4
 230              	.LVL37:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 231              		.loc 1 194 0
 232 0106 0023     		movs	r3, #0
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 233              		.loc 1 196 0
 234 0108 0125     		movs	r5, #1
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 235              		.loc 1 202 0
 236 010a 0326     		movs	r6, #3
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 237              		.loc 1 194 0
 238 010c 3EE0     		b	.L14
 239              	.LVL38:
 240              	.L17:
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 241              		.loc 1 196 0
 242 010e 05FA03F2 		lsl	r2, r5, r3
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 243              		.loc 1 198 0
 244 0112 0C68     		ldr	r4, [r1]
 245 0114 1440     		ands	r4, r4, r2
 246              	.LVL39:
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 247              		.loc 1 200 0
 248 0116 9442     		cmp	r4, r2
 249 0118 37D1     		bne	.L15
 250              		.loc 1 202 0
 251 011a 0768     		ldr	r7, [r0]
 252 011c 5A00     		lsls	r2, r3, #1
 253 011e 06FA02F4 		lsl	r4, r6, r2
 254              	.LVL40:
 255 0122 E443     		mvns	r4, r4
 256 0124 2740     		ands	r7, r7, r4
 257 0126 0760     		str	r7, [r0]
 258              	.LVL41:
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 259              		.loc 1 203 0
 260 0128 D0F800C0 		ldr	ip, [r0]
 261 012c 0F79     		ldrb	r7, [r1, #4]	@ zero_extendqisi2
 262 012e 9740     		lsls	r7, r7, r2
 263 0130 4CEA0707 		orr	r7, ip, r7
 264 0134 0760     		str	r7, [r0]
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 265              		.loc 1 205 0
 266 0136 0F79     		ldrb	r7, [r1, #4]	@ zero_extendqisi2
 267 0138 013F     		subs	r7, r7, #1
 268 013a FFB2     		uxtb	r7, r7
 269 013c 012F     		cmp	r7, #1
 270 013e 16D8     		bhi	.L16
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 271              		.loc 1 211 0
 272 0140 8768     		ldr	r7, [r0, #8]
 273 0142 3C40     		ands	r4, r4, r7
 274 0144 8460     		str	r4, [r0, #8]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 275              		.loc 1 212 0
 276 0146 8768     		ldr	r7, [r0, #8]
 277 0148 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 278 014a 9440     		lsls	r4, r4, r2
 279 014c 3C43     		orrs	r4, r4, r7
 280 014e 8460     		str	r4, [r0, #8]
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 281              		.loc 1 218 0
 282 0150 4768     		ldr	r7, [r0, #4]
 283 0152 9CB2     		uxth	r4, r3
 284 0154 05FA04FC 		lsl	ip, r5, r4
 285 0158 27EA0C07 		bic	r7, r7, ip
 286 015c 4760     		str	r7, [r0, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 287              		.loc 1 219 0
 288 015e 4768     		ldr	r7, [r0, #4]
 289 0160 91F806C0 		ldrb	ip, [r1, #6]	@ zero_extendqisi2
 290 0164 0CFA04F4 		lsl	r4, ip, r4
 291 0168 A4B2     		uxth	r4, r4
 292 016a 3C43     		orrs	r4, r4, r7
 293 016c 4460     		str	r4, [r0, #4]
 294              	.L16:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 295              		.loc 1 223 0
 296 016e C768     		ldr	r7, [r0, #12]
 297 0170 9CB2     		uxth	r4, r3
 298 0172 6400     		lsls	r4, r4, #1
 299 0174 06FA04F4 		lsl	r4, r6, r4
 300 0178 27EA0404 		bic	r4, r7, r4
 301 017c C460     		str	r4, [r0, #12]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 302              		.loc 1 224 0
 303 017e C468     		ldr	r4, [r0, #12]
 304 0180 CF79     		ldrb	r7, [r1, #7]	@ zero_extendqisi2
 305 0182 07FA02F2 		lsl	r2, r7, r2
 306 0186 2243     		orrs	r2, r2, r4
 307 0188 C260     		str	r2, [r0, #12]
 308              	.L15:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 309              		.loc 1 194 0
 310 018a 0133     		adds	r3, r3, #1
 311              	.LVL42:
 312              	.L14:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 313              		.loc 1 194 0 is_stmt 0 discriminator 1
 314 018c 0F2B     		cmp	r3, #15
 315 018e BED9     		bls	.L17
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 316              		.loc 1 227 0 is_stmt 1
 317 0190 F0BC     		pop	{r4, r5, r6, r7}
 318 0192 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE111:
 322              		.align	2
 323              		.global	GPIO_StructInit
 324              		.thumb
 325              		.thumb_func
 327              	GPIO_StructInit:
 328              	.LFB112:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 329              		.loc 1 235 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL43:
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 335              		.loc 1 237 0
 336 0194 4FF6FF73 		movw	r3, #65535
 337 0198 0360     		str	r3, [r0]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 338              		.loc 1 238 0
 339 019a 0023     		movs	r3, #0
 340 019c 0371     		strb	r3, [r0, #4]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 341              		.loc 1 239 0
 342 019e 4371     		strb	r3, [r0, #5]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 343              		.loc 1 240 0
 344 01a0 8371     		strb	r3, [r0, #6]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 345              		.loc 1 241 0
 346 01a2 C371     		strb	r3, [r0, #7]
 347 01a4 7047     		bx	lr
 348              		.cfi_endproc
 349              	.LFE112:
 351 01a6 00BF     		.align	2
 352              		.global	GPIO_PinLockConfig
 353              		.thumb
 354              		.thumb_func
 356              	GPIO_PinLockConfig:
 357              	.LFB113:
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 358              		.loc 1 256 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363              	.LVL44:
 364 01a8 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 8
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 366              		.loc 1 257 0
 367 01aa 4FF48033 		mov	r3, #65536
 368 01ae 0193     		str	r3, [sp, #4]
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 369              		.loc 1 263 0
 370 01b0 019B     		ldr	r3, [sp, #4]
 371 01b2 0B43     		orrs	r3, r3, r1
 372 01b4 0193     		str	r3, [sp, #4]
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 373              		.loc 1 265 0
 374 01b6 019B     		ldr	r3, [sp, #4]
 375 01b8 C361     		str	r3, [r0, #28]
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 376              		.loc 1 267 0
 377 01ba C161     		str	r1, [r0, #28]
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 378              		.loc 1 269 0
 379 01bc 019B     		ldr	r3, [sp, #4]
 380 01be C361     		str	r3, [r0, #28]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 381              		.loc 1 271 0
 382 01c0 C369     		ldr	r3, [r0, #28]
 383 01c2 0193     		str	r3, [sp, #4]
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 384              		.loc 1 273 0
 385 01c4 C369     		ldr	r3, [r0, #28]
 386 01c6 0193     		str	r3, [sp, #4]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 387              		.loc 1 274 0
 388 01c8 02B0     		add	sp, sp, #8
 389              		@ sp needed
 390 01ca 7047     		bx	lr
 391              		.cfi_endproc
 392              	.LFE113:
 394              		.align	2
 395              		.global	GPIO_ReadInputDataBit
 396              		.thumb
 397              		.thumb_func
 399              	GPIO_ReadInputDataBit:
 400              	.LFB114:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 401              		.loc 1 300 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              	.LVL45:
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 407              		.loc 1 307 0
 408 01cc 0069     		ldr	r0, [r0, #16]
 409              	.LVL46:
 410 01ce 0840     		ands	r0, r0, r1
 411              	.LVL47:
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 412              		.loc 1 316 0
 413 01d0 0030     		adds	r0, r0, #0
 414 01d2 18BF     		it	ne
 415 01d4 0120     		movne	r0, #1
 416              	.LVL48:
 417 01d6 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE114:
 421              		.align	2
 422              		.global	GPIO_ReadInputData
 423              		.thumb
 424              		.thumb_func
 426              	GPIO_ReadInputData:
 427              	.LFB115:
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 428              		.loc 1 324 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433              	.LVL49:
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 434              		.loc 1 328 0
 435 01d8 0069     		ldr	r0, [r0, #16]
 436              	.LVL50:
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 437              		.loc 1 329 0
 438 01da 80B2     		uxth	r0, r0
 439 01dc 7047     		bx	lr
 440              		.cfi_endproc
 441              	.LFE115:
 443 01de 00BF     		.align	2
 444              		.global	GPIO_ReadOutputDataBit
 445              		.thumb
 446              		.thumb_func
 448              	GPIO_ReadOutputDataBit:
 449              	.LFB116:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 450              		.loc 1 339 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL51:
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 456              		.loc 1 346 0
 457 01e0 4069     		ldr	r0, [r0, #20]
 458              	.LVL52:
 459 01e2 0840     		ands	r0, r0, r1
 460              	.LVL53:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 461              		.loc 1 355 0
 462 01e4 0030     		adds	r0, r0, #0
 463 01e6 18BF     		it	ne
 464 01e8 0120     		movne	r0, #1
 465              	.LVL54:
 466 01ea 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE116:
 470              		.align	2
 471              		.global	GPIO_ReadOutputData
 472              		.thumb
 473              		.thumb_func
 475              	GPIO_ReadOutputData:
 476              	.LFB117:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 477              		.loc 1 363 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL55:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 483              		.loc 1 367 0
 484 01ec 4069     		ldr	r0, [r0, #20]
 485              	.LVL56:
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 486              		.loc 1 368 0
 487 01ee 80B2     		uxth	r0, r0
 488 01f0 7047     		bx	lr
 489              		.cfi_endproc
 490              	.LFE117:
 492 01f2 00BF     		.align	2
 493              		.global	GPIO_SetBits
 494              		.thumb
 495              		.thumb_func
 497              	GPIO_SetBits:
 498              	.LFB118:
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 499              		.loc 1 381 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504              	.LVL57:
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 505              		.loc 1 386 0
 506 01f4 0183     		strh	r1, [r0, #24]	@ movhi
 507 01f6 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE118:
 511              		.align	2
 512              		.global	GPIO_ResetBits
 513              		.thumb
 514              		.thumb_func
 516              	GPIO_ResetBits:
 517              	.LFB119:
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 518              		.loc 1 400 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL58:
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 524              		.loc 1 405 0
 525 01f8 4183     		strh	r1, [r0, #26]	@ movhi
 526 01fa 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE119:
 530              		.align	2
 531              		.global	GPIO_WriteBit
 532              		.thumb
 533              		.thumb_func
 535              	GPIO_WriteBit:
 536              	.LFB120:
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 537              		.loc 1 420 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542              	.LVL59:
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 543              		.loc 1 426 0
 544 01fc 0AB1     		cbz	r2, .L31
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 545              		.loc 1 428 0
 546 01fe 0183     		strh	r1, [r0, #24]	@ movhi
 547 0200 7047     		bx	lr
 548              	.L31:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 549              		.loc 1 432 0
 550 0202 4183     		strh	r1, [r0, #26]	@ movhi
 551 0204 7047     		bx	lr
 552              		.cfi_endproc
 553              	.LFE120:
 555 0206 00BF     		.align	2
 556              		.global	GPIO_Write
 557              		.thumb
 558              		.thumb_func
 560              	GPIO_Write:
 561              	.LFB121:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 562              		.loc 1 443 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL60:
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 568              		.loc 1 447 0
 569 0208 4161     		str	r1, [r0, #20]
 570 020a 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE121:
 574              		.align	2
 575              		.global	GPIO_ToggleBits
 576              		.thumb
 577              		.thumb_func
 579              	GPIO_ToggleBits:
 580              	.LFB122:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 581              		.loc 1 457 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL61:
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 587              		.loc 1 461 0
 588 020c 4369     		ldr	r3, [r0, #20]
 589 020e 5940     		eors	r1, r1, r3
 590              	.LVL62:
 591 0210 4161     		str	r1, [r0, #20]
 592 0212 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE122:
 596              		.align	2
 597              		.global	GPIO_PinAFConfig
 598              		.thumb
 599              		.thumb_func
 601              	GPIO_PinAFConfig:
 602              	.LFB123:
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 603              		.loc 1 530 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL63:
 609 0214 30B4     		push	{r4, r5}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 4, -8
 612              		.cfi_offset 5, -4
 613              	.LVL64:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 614              		.loc 1 539 0
 615 0216 01F00703 		and	r3, r1, #7
 616 021a 9B00     		lsls	r3, r3, #2
 617 021c 9A40     		lsls	r2, r2, r3
 618              	.LVL65:
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 619              		.loc 1 540 0
 620 021e C908     		lsrs	r1, r1, #3
 621              	.LVL66:
 622 0220 0831     		adds	r1, r1, #8
 623 0222 50F82140 		ldr	r4, [r0, r1, lsl #2]
 624 0226 0F25     		movs	r5, #15
 625 0228 05FA03F3 		lsl	r3, r5, r3
 626 022c 24EA0303 		bic	r3, r4, r3
 627 0230 40F82130 		str	r3, [r0, r1, lsl #2]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 628              		.loc 1 541 0
 629 0234 50F82130 		ldr	r3, [r0, r1, lsl #2]
 630 0238 1A43     		orrs	r2, r2, r3
 631              	.LVL67:
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 632              		.loc 1 542 0
 633 023a 40F82120 		str	r2, [r0, r1, lsl #2]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 634              		.loc 1 543 0
 635 023e 30BC     		pop	{r4, r5}
 636 0240 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE123:
 640              	.Letext0:
 641              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\mach
 642              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\stdi
 643              		.file 4 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx\\Include/stm32f4xx.h"
 644              		.file 5 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_gpio.h"
 645              		.file 6 "C:\\Users\\Filip\\Eclipse\\Template\\CMSIS\\Include/core_cm4.h"
 646              		.file 7 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:23     .text:00000000 GPIO_DeInit
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:199    .text:000000e0 $d
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:211    .text:00000104 $t
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:216    .text:00000104 GPIO_Init
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:327    .text:00000194 GPIO_StructInit
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:356    .text:000001a8 GPIO_PinLockConfig
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:399    .text:000001cc GPIO_ReadInputDataBit
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:426    .text:000001d8 GPIO_ReadInputData
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:448    .text:000001e0 GPIO_ReadOutputDataBit
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:475    .text:000001ec GPIO_ReadOutputData
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:497    .text:000001f4 GPIO_SetBits
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:516    .text:000001f8 GPIO_ResetBits
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:535    .text:000001fc GPIO_WriteBit
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:560    .text:00000208 GPIO_Write
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:579    .text:0000020c GPIO_ToggleBits
C:\Users\Filip\AppData\Local\Temp\ccivnLUI.s:601    .text:00000214 GPIO_PinAFConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.2bb9d917777380cc06007ef782f1739f
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:00000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_gpio.h.44.fd28ce2b8ef72fda54fdf6fae811c118

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
