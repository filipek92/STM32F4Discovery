#include "main.h"
#include "discovery.h"

//extern volatile uint32_t Time;

int main(void)
{	
  SysTick_Config(SystemCoreClock/1000);
  GPIO_SetPin(GPIOC, GPIO_Pin_5);
  while(1)
  {
  }
}


void Can_Init(){
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE);

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);

	GPIO_PinAFConfig(GPIOB, GPIO_PinSource5, GPIO_AF_CAN2);
	GPIO_PinAFConfig(GPIOB, GPIO_PinSource6, GPIO_AF_CAN2);

	GPIO_InitTypeDef GPIO_InitStructure;

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;

	GPIO_Init(GPIOB, &GPIO_InitStructure);

	CAN_InitTypeDef CAN_InitStructure;

	CAN_InitStructure.CAN_ABOM = 0;
	CAN_InitStructure.CAN_AWUM = 0;
	CAN_InitStructure.CAN_BS1 = 0;
	CAN_InitStructure.CAN_BS2 = 0;
	CAN_InitStructure.CAN_Mode = CAN_Mode_LoopBack;
	CAN_InitStructure.CAN_NART = 0;
	CAN_InitStructure.CAN_Prescaler = 0;
}


#ifdef  USE_FULL_ASSERT

void assert_failed(uint8_t* file, uint32_t line)
{ 
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */

  /* Infinite loop */
  while (1)
  {
  }
}
#endif
