   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_sdio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	SDIO_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	SDIO_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  26              		.loc 1 260 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  34              		.loc 1 261 0
  35 0002 4FF40060 		mov	r0, #2048
  36 0006 0121     		movs	r1, #1
  37 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  38              	.LVL0:
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  39              		.loc 1 262 0
  40 000c 4FF40060 		mov	r0, #2048
  41 0010 0021     		movs	r1, #0
  42 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  43              	.LVL1:
  44 0016 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE110:
  48              		.align	2
  49              		.global	SDIO_Init
  50              		.thumb
  51              		.thumb_func
  53              	SDIO_Init:
  54              	.LFB111:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  55              		.loc 1 273 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
  61 0018 10B4     		push	{r4}
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 4, -4
  64              	.LVL3:
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  65              		.loc 1 285 0
  66 001a 0B4A     		ldr	r2, .L3
  67 001c 5368     		ldr	r3, [r2, #4]
  68              	.LVL4:
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  69              		.loc 1 288 0
  70 001e 23F4FD43 		bic	r3, r3, #32384
  71              	.LVL5:
  72 0022 23F07F03 		bic	r3, r3, #127
  73              	.LVL6:
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  74              		.loc 1 296 0
  75 0026 047D     		ldrb	r4, [r0, #20]	@ zero_extendqisi2
  76 0028 8168     		ldr	r1, [r0, #8]
  77 002a 0C43     		orrs	r4, r4, r1
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  78              		.loc 1 297 0
  79 002c 4168     		ldr	r1, [r0, #4]
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  80              		.loc 1 296 0
  81 002e 0C43     		orrs	r4, r4, r1
  82              		.loc 1 297 0
  83 0030 C168     		ldr	r1, [r0, #12]
  84 0032 0C43     		orrs	r4, r4, r1
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
  85              		.loc 1 298 0
  86 0034 0168     		ldr	r1, [r0]
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  87              		.loc 1 297 0
  88 0036 2143     		orrs	r1, r1, r4
  89              		.loc 1 298 0
  90 0038 0069     		ldr	r0, [r0, #16]
  91              	.LVL7:
  92 003a 0143     		orrs	r1, r1, r0
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  93              		.loc 1 296 0
  94 003c 0B43     		orrs	r3, r3, r1
  95              	.LVL8:
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
  96              		.loc 1 301 0
  97 003e 5360     		str	r3, [r2, #4]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  98              		.loc 1 302 0
  99 0040 5DF8044B 		ldr	r4, [sp], #4
 100 0044 7047     		bx	lr
 101              	.L4:
 102 0046 00BF     		.align	2
 103              	.L3:
 104 0048 002C0140 		.word	1073818624
 105              		.cfi_endproc
 106              	.LFE111:
 108              		.align	2
 109              		.global	SDIO_StructInit
 110              		.thumb
 111              		.thumb_func
 113              	SDIO_StructInit:
 114              	.LFB112:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 115              		.loc 1 311 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL9:
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 121              		.loc 1 313 0
 122 004c 0023     		movs	r3, #0
 123 004e 0375     		strb	r3, [r0, #20]
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 124              		.loc 1 314 0
 125 0050 0360     		str	r3, [r0]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 126              		.loc 1 315 0
 127 0052 4360     		str	r3, [r0, #4]
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 128              		.loc 1 316 0
 129 0054 8360     		str	r3, [r0, #8]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 130              		.loc 1 317 0
 131 0056 C360     		str	r3, [r0, #12]
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 132              		.loc 1 318 0
 133 0058 0361     		str	r3, [r0, #16]
 134 005a 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE112:
 138              		.align	2
 139              		.global	SDIO_ClockCmd
 140              		.thumb
 141              		.thumb_func
 143              	SDIO_ClockCmd:
 144              	.LFB113:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 145              		.loc 1 328 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL10:
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 151              		.loc 1 332 0
 152 005c 014B     		ldr	r3, .L7
 153 005e 1860     		str	r0, [r3]
 154 0060 7047     		bx	lr
 155              	.L8:
 156 0062 00BF     		.align	2
 157              	.L7:
 158 0064 A0802542 		.word	1109754016
 159              		.cfi_endproc
 160              	.LFE113:
 162              		.align	2
 163              		.global	SDIO_SetPowerState
 164              		.thumb
 165              		.thumb_func
 167              	SDIO_SetPowerState:
 168              	.LFB114:
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 169              		.loc 1 344 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174              	.LVL11:
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 175              		.loc 1 348 0
 176 0068 014B     		ldr	r3, .L10
 177 006a 1860     		str	r0, [r3]
 178 006c 7047     		bx	lr
 179              	.L11:
 180 006e 00BF     		.align	2
 181              	.L10:
 182 0070 002C0140 		.word	1073818624
 183              		.cfi_endproc
 184              	.LFE114:
 186              		.align	2
 187              		.global	SDIO_GetPowerState
 188              		.thumb
 189              		.thumb_func
 191              	SDIO_GetPowerState:
 192              	.LFB115:
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 193              		.loc 1 361 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 198              		.loc 1 362 0
 199 0074 024B     		ldr	r3, .L13
 200 0076 1868     		ldr	r0, [r3]
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 201              		.loc 1 363 0
 202 0078 00F00300 		and	r0, r0, #3
 203 007c 7047     		bx	lr
 204              	.L14:
 205 007e 00BF     		.align	2
 206              	.L13:
 207 0080 002C0140 		.word	1073818624
 208              		.cfi_endproc
 209              	.LFE115:
 211              		.align	2
 212              		.global	SDIO_SendCommand
 213              		.thumb
 214              		.thumb_func
 216              	SDIO_SendCommand:
 217              	.LFB116:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 218              		.loc 1 393 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL12:
 224 0084 10B4     		push	{r4}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 4, -4
 227              	.LVL13:
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 228              		.loc 1 404 0
 229 0086 0268     		ldr	r2, [r0]
 230 0088 094B     		ldr	r3, .L16
 231 008a 9A60     		str	r2, [r3, #8]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 232              		.loc 1 408 0
 233 008c DA68     		ldr	r2, [r3, #12]
 234              	.LVL14:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 235              		.loc 1 410 0
 236 008e 22F4FF62 		bic	r2, r2, #2040
 237              	.LVL15:
 238 0092 22F00702 		bic	r2, r2, #7
 239              	.LVL16:
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 240              		.loc 1 415 0
 241 0096 4468     		ldr	r4, [r0, #4]
 242 0098 8168     		ldr	r1, [r0, #8]
 243 009a 0C43     		orrs	r4, r4, r1
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 244              		.loc 1 416 0
 245 009c C168     		ldr	r1, [r0, #12]
 246 009e 2143     		orrs	r1, r1, r4
 247 00a0 0069     		ldr	r0, [r0, #16]
 248              	.LVL17:
 249 00a2 0143     		orrs	r1, r1, r0
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 250              		.loc 1 415 0
 251 00a4 0A43     		orrs	r2, r2, r1
 252              	.LVL18:
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 253              		.loc 1 419 0
 254 00a6 DA60     		str	r2, [r3, #12]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 255              		.loc 1 420 0
 256 00a8 5DF8044B 		ldr	r4, [sp], #4
 257 00ac 7047     		bx	lr
 258              	.L17:
 259 00ae 00BF     		.align	2
 260              	.L16:
 261 00b0 002C0140 		.word	1073818624
 262              		.cfi_endproc
 263              	.LFE116:
 265              		.align	2
 266              		.global	SDIO_CmdStructInit
 267              		.thumb
 268              		.thumb_func
 270              	SDIO_CmdStructInit:
 271              	.LFB117:
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 272              		.loc 1 429 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277              	.LVL19:
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 278              		.loc 1 431 0
 279 00b4 0023     		movs	r3, #0
 280 00b6 0360     		str	r3, [r0]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 281              		.loc 1 432 0
 282 00b8 4360     		str	r3, [r0, #4]
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 283              		.loc 1 433 0
 284 00ba 8360     		str	r3, [r0, #8]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 285              		.loc 1 434 0
 286 00bc C360     		str	r3, [r0, #12]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 287              		.loc 1 435 0
 288 00be 0361     		str	r3, [r0, #16]
 289 00c0 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE117:
 293 00c2 00BF     		.align	2
 294              		.global	SDIO_GetCommandResponse
 295              		.thumb
 296              		.thumb_func
 298              	SDIO_GetCommandResponse:
 299              	.LFB118:
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 300              		.loc 1 444 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 305              		.loc 1 445 0
 306 00c4 014B     		ldr	r3, .L20
 307 00c6 1869     		ldr	r0, [r3, #16]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 308              		.loc 1 446 0
 309 00c8 C0B2     		uxtb	r0, r0
 310 00ca 7047     		bx	lr
 311              	.L21:
 312              		.align	2
 313              	.L20:
 314 00cc 002C0140 		.word	1073818624
 315              		.cfi_endproc
 316              	.LFE118:
 318              		.align	2
 319              		.global	SDIO_GetResponse
 320              		.thumb
 321              		.thumb_func
 323              	SDIO_GetResponse:
 324              	.LFB119:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 325              		.loc 1 459 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL20:
 331 00d0 82B0     		sub	sp, sp, #8
 332              		.cfi_def_cfa_offset 8
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 333              		.loc 1 460 0
 334 00d2 0023     		movs	r3, #0
 335 00d4 0193     		str	r3, [sp, #4]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 336              		.loc 1 465 0
 337 00d6 034B     		ldr	r3, .L23
 338 00d8 0344     		add	r3, r3, r0
 339 00da 0193     		str	r3, [sp, #4]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 340              		.loc 1 467 0
 341 00dc 019B     		ldr	r3, [sp, #4]
 342 00de 1868     		ldr	r0, [r3]
 343              	.LVL21:
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 344              		.loc 1 468 0
 345 00e0 02B0     		add	sp, sp, #8
 346              		@ sp needed
 347 00e2 7047     		bx	lr
 348              	.L24:
 349              		.align	2
 350              	.L23:
 351 00e4 142C0140 		.word	1073818644
 352              		.cfi_endproc
 353              	.LFE119:
 355              		.align	2
 356              		.global	SDIO_DataConfig
 357              		.thumb
 358              		.thumb_func
 360              	SDIO_DataConfig:
 361              	.LFB120:
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 362              		.loc 1 497 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367              	.LVL22:
 368 00e8 10B4     		push	{r4}
 369              		.cfi_def_cfa_offset 4
 370              		.cfi_offset 4, -4
 371              	.LVL23:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 372              		.loc 1 509 0
 373 00ea 0268     		ldr	r2, [r0]
 374 00ec 094B     		ldr	r3, .L26
 375 00ee 5A62     		str	r2, [r3, #36]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 376              		.loc 1 513 0
 377 00f0 4268     		ldr	r2, [r0, #4]
 378 00f2 9A62     		str	r2, [r3, #40]
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 379              		.loc 1 517 0
 380 00f4 DC6A     		ldr	r4, [r3, #44]
 381              	.LVL24:
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 382              		.loc 1 519 0
 383 00f6 24F0F704 		bic	r4, r4, #247
 384              	.LVL25:
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 385              		.loc 1 524 0
 386 00fa 8268     		ldr	r2, [r0, #8]
 387 00fc C168     		ldr	r1, [r0, #12]
 388 00fe 1143     		orrs	r1, r1, r2
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 389              		.loc 1 525 0
 390 0100 0269     		ldr	r2, [r0, #16]
 391 0102 0A43     		orrs	r2, r2, r1
 392 0104 4069     		ldr	r0, [r0, #20]
 393              	.LVL26:
 394 0106 0243     		orrs	r2, r2, r0
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 395              		.loc 1 524 0
 396 0108 2243     		orrs	r2, r2, r4
 397              	.LVL27:
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 398              		.loc 1 528 0
 399 010a DA62     		str	r2, [r3, #44]
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 400              		.loc 1 529 0
 401 010c 5DF8044B 		ldr	r4, [sp], #4
 402 0110 7047     		bx	lr
 403              	.L27:
 404 0112 00BF     		.align	2
 405              	.L26:
 406 0114 002C0140 		.word	1073818624
 407              		.cfi_endproc
 408              	.LFE120:
 410              		.align	2
 411              		.global	SDIO_DataStructInit
 412              		.thumb
 413              		.thumb_func
 415              	SDIO_DataStructInit:
 416              	.LFB121:
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 417              		.loc 1 538 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL28:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 423              		.loc 1 540 0
 424 0118 4FF0FF33 		mov	r3, #-1
 425 011c 0360     		str	r3, [r0]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 426              		.loc 1 541 0
 427 011e 0023     		movs	r3, #0
 428 0120 4360     		str	r3, [r0, #4]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 429              		.loc 1 542 0
 430 0122 8360     		str	r3, [r0, #8]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 431              		.loc 1 543 0
 432 0124 C360     		str	r3, [r0, #12]
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 433              		.loc 1 544 0
 434 0126 0361     		str	r3, [r0, #16]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 435              		.loc 1 545 0
 436 0128 4361     		str	r3, [r0, #20]
 437 012a 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE121:
 441              		.align	2
 442              		.global	SDIO_GetDataCounter
 443              		.thumb
 444              		.thumb_func
 446              	SDIO_GetDataCounter:
 447              	.LFB122:
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 448              		.loc 1 554 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 453              		.loc 1 555 0
 454 012c 014B     		ldr	r3, .L30
 455 012e 186B     		ldr	r0, [r3, #48]
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 456              		.loc 1 556 0
 457 0130 7047     		bx	lr
 458              	.L31:
 459 0132 00BF     		.align	2
 460              	.L30:
 461 0134 002C0140 		.word	1073818624
 462              		.cfi_endproc
 463              	.LFE122:
 465              		.align	2
 466              		.global	SDIO_ReadData
 467              		.thumb
 468              		.thumb_func
 470              	SDIO_ReadData:
 471              	.LFB123:
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 472              		.loc 1 564 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 477              		.loc 1 565 0
 478 0138 014B     		ldr	r3, .L33
 479 013a D3F88000 		ldr	r0, [r3, #128]
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 480              		.loc 1 566 0
 481 013e 7047     		bx	lr
 482              	.L34:
 483              		.align	2
 484              	.L33:
 485 0140 002C0140 		.word	1073818624
 486              		.cfi_endproc
 487              	.LFE123:
 489              		.align	2
 490              		.global	SDIO_WriteData
 491              		.thumb
 492              		.thumb_func
 494              	SDIO_WriteData:
 495              	.LFB124:
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 496              		.loc 1 574 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL29:
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 502              		.loc 1 575 0
 503 0144 014B     		ldr	r3, .L36
 504 0146 C3F88000 		str	r0, [r3, #128]
 505 014a 7047     		bx	lr
 506              	.L37:
 507              		.align	2
 508              	.L36:
 509 014c 002C0140 		.word	1073818624
 510              		.cfi_endproc
 511              	.LFE124:
 513              		.align	2
 514              		.global	SDIO_GetFIFOCount
 515              		.thumb
 516              		.thumb_func
 518              	SDIO_GetFIFOCount:
 519              	.LFB125:
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 520              		.loc 1 584 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 525              		.loc 1 585 0
 526 0150 014B     		ldr	r3, .L39
 527 0152 986C     		ldr	r0, [r3, #72]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 528              		.loc 1 586 0
 529 0154 7047     		bx	lr
 530              	.L40:
 531 0156 00BF     		.align	2
 532              	.L39:
 533 0158 002C0140 		.word	1073818624
 534              		.cfi_endproc
 535              	.LFE125:
 537              		.align	2
 538              		.global	SDIO_StartSDIOReadWait
 539              		.thumb
 540              		.thumb_func
 542              	SDIO_StartSDIOReadWait:
 543              	.LFB126:
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 544              		.loc 1 613 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549              	.LVL30:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 550              		.loc 1 617 0
 551 015c 014B     		ldr	r3, .L42
 552 015e 1860     		str	r0, [r3]
 553 0160 7047     		bx	lr
 554              	.L43:
 555 0162 00BF     		.align	2
 556              	.L42:
 557 0164 A0852542 		.word	1109755296
 558              		.cfi_endproc
 559              	.LFE126:
 561              		.align	2
 562              		.global	SDIO_StopSDIOReadWait
 563              		.thumb
 564              		.thumb_func
 566              	SDIO_StopSDIOReadWait:
 567              	.LFB127:
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 568              		.loc 1 627 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573              	.LVL31:
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 574              		.loc 1 631 0
 575 0168 014B     		ldr	r3, .L45
 576 016a 1860     		str	r0, [r3]
 577 016c 7047     		bx	lr
 578              	.L46:
 579 016e 00BF     		.align	2
 580              	.L45:
 581 0170 A4852542 		.word	1109755300
 582              		.cfi_endproc
 583              	.LFE127:
 585              		.align	2
 586              		.global	SDIO_SetSDIOReadWaitMode
 587              		.thumb
 588              		.thumb_func
 590              	SDIO_SetSDIOReadWaitMode:
 591              	.LFB128:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 592              		.loc 1 643 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL32:
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 598              		.loc 1 647 0
 599 0174 014B     		ldr	r3, .L48
 600 0176 1860     		str	r0, [r3]
 601 0178 7047     		bx	lr
 602              	.L49:
 603 017a 00BF     		.align	2
 604              	.L48:
 605 017c A8852542 		.word	1109755304
 606              		.cfi_endproc
 607              	.LFE128:
 609              		.align	2
 610              		.global	SDIO_SetSDIOOperation
 611              		.thumb
 612              		.thumb_func
 614              	SDIO_SetSDIOOperation:
 615              	.LFB129:
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 616              		.loc 1 657 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL33:
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 622              		.loc 1 661 0
 623 0180 014B     		ldr	r3, .L51
 624 0182 1860     		str	r0, [r3]
 625 0184 7047     		bx	lr
 626              	.L52:
 627 0186 00BF     		.align	2
 628              	.L51:
 629 0188 AC852542 		.word	1109755308
 630              		.cfi_endproc
 631              	.LFE129:
 633              		.align	2
 634              		.global	SDIO_SendSDIOSuspendCmd
 635              		.thumb
 636              		.thumb_func
 638              	SDIO_SendSDIOSuspendCmd:
 639              	.LFB130:
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 640              		.loc 1 671 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL34:
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 646              		.loc 1 675 0
 647 018c 014B     		ldr	r3, .L54
 648 018e 1860     		str	r0, [r3]
 649 0190 7047     		bx	lr
 650              	.L55:
 651 0192 00BF     		.align	2
 652              	.L54:
 653 0194 AC812542 		.word	1109754284
 654              		.cfi_endproc
 655              	.LFE130:
 657              		.align	2
 658              		.global	SDIO_CommandCompletionCmd
 659              		.thumb
 660              		.thumb_func
 662              	SDIO_CommandCompletionCmd:
 663              	.LFB131:
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 664              		.loc 1 703 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL35:
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 670              		.loc 1 707 0
 671 0198 014B     		ldr	r3, .L57
 672 019a 1860     		str	r0, [r3]
 673 019c 7047     		bx	lr
 674              	.L58:
 675 019e 00BF     		.align	2
 676              	.L57:
 677 01a0 B0812542 		.word	1109754288
 678              		.cfi_endproc
 679              	.LFE131:
 681              		.align	2
 682              		.global	SDIO_CEATAITCmd
 683              		.thumb
 684              		.thumb_func
 686              	SDIO_CEATAITCmd:
 687              	.LFB132:
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 688              		.loc 1 717 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL36:
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 694              		.loc 1 721 0
 695 01a4 10F0010F 		tst	r0, #1
 696 01a8 14BF     		ite	ne
 697 01aa 0022     		movne	r2, #0
 698 01ac 0122     		moveq	r2, #1
 699 01ae 014B     		ldr	r3, .L60
 700 01b0 1A60     		str	r2, [r3]
 701 01b2 7047     		bx	lr
 702              	.L61:
 703              		.align	2
 704              	.L60:
 705 01b4 B4812542 		.word	1109754292
 706              		.cfi_endproc
 707              	.LFE132:
 709              		.align	2
 710              		.global	SDIO_SendCEATACmd
 711              		.thumb
 712              		.thumb_func
 714              	SDIO_SendCEATACmd:
 715              	.LFB133:
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 716              		.loc 1 731 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721              	.LVL37:
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 722              		.loc 1 735 0
 723 01b8 014B     		ldr	r3, .L63
 724 01ba 1860     		str	r0, [r3]
 725 01bc 7047     		bx	lr
 726              	.L64:
 727 01be 00BF     		.align	2
 728              	.L63:
 729 01c0 B8812542 		.word	1109754296
 730              		.cfi_endproc
 731              	.LFE133:
 733              		.align	2
 734              		.global	SDIO_DMACmd
 735              		.thumb
 736              		.thumb_func
 738              	SDIO_DMACmd:
 739              	.LFB134:
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 740              		.loc 1 763 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745              	.LVL38:
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 746              		.loc 1 767 0
 747 01c4 014B     		ldr	r3, .L66
 748 01c6 1860     		str	r0, [r3]
 749 01c8 7047     		bx	lr
 750              	.L67:
 751 01ca 00BF     		.align	2
 752              	.L66:
 753 01cc 8C852542 		.word	1109755276
 754              		.cfi_endproc
 755              	.LFE134:
 757              		.align	2
 758              		.global	SDIO_ITConfig
 759              		.thumb
 760              		.thumb_func
 762              	SDIO_ITConfig:
 763              	.LFB135:
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 764              		.loc 1 821 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL39:
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 770              		.loc 1 826 0
 771 01d0 21B1     		cbz	r1, .L69
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 772              		.loc 1 829 0
 773 01d2 054B     		ldr	r3, .L71
 774 01d4 DA6B     		ldr	r2, [r3, #60]
 775 01d6 1043     		orrs	r0, r0, r2
 776              	.LVL40:
 777 01d8 D863     		str	r0, [r3, #60]
 778 01da 7047     		bx	lr
 779              	.LVL41:
 780              	.L69:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 781              		.loc 1 834 0
 782 01dc 024B     		ldr	r3, .L71
 783 01de DA6B     		ldr	r2, [r3, #60]
 784 01e0 22EA0000 		bic	r0, r2, r0
 785              	.LVL42:
 786 01e4 D863     		str	r0, [r3, #60]
 787 01e6 7047     		bx	lr
 788              	.L72:
 789              		.align	2
 790              	.L71:
 791 01e8 002C0140 		.word	1073818624
 792              		.cfi_endproc
 793              	.LFE135:
 795              		.align	2
 796              		.global	SDIO_GetFlagStatus
 797              		.thumb
 798              		.thumb_func
 800              	SDIO_GetFlagStatus:
 801              	.LFB136:
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 802              		.loc 1 869 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL43:
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 808              		.loc 1 875 0
 809 01ec 034B     		ldr	r3, .L76
 810 01ee 5B6B     		ldr	r3, [r3, #52]
 811 01f0 1840     		ands	r0, r0, r3
 812              	.LVL44:
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 813              		.loc 1 884 0
 814 01f2 0030     		adds	r0, r0, #0
 815 01f4 18BF     		it	ne
 816 01f6 0120     		movne	r0, #1
 817              	.LVL45:
 818 01f8 7047     		bx	lr
 819              	.L77:
 820 01fa 00BF     		.align	2
 821              	.L76:
 822 01fc 002C0140 		.word	1073818624
 823              		.cfi_endproc
 824              	.LFE136:
 826              		.align	2
 827              		.global	SDIO_ClearFlag
 828              		.thumb
 829              		.thumb_func
 831              	SDIO_ClearFlag:
 832              	.LFB137:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 833              		.loc 1 906 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838              	.LVL46:
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 839              		.loc 1 910 0
 840 0200 014B     		ldr	r3, .L79
 841 0202 9863     		str	r0, [r3, #56]
 842 0204 7047     		bx	lr
 843              	.L80:
 844 0206 00BF     		.align	2
 845              	.L79:
 846 0208 002C0140 		.word	1073818624
 847              		.cfi_endproc
 848              	.LFE137:
 850              		.align	2
 851              		.global	SDIO_GetITStatus
 852              		.thumb
 853              		.thumb_func
 855              	SDIO_GetITStatus:
 856              	.LFB138:
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 857              		.loc 1 945 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL47:
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 863              		.loc 1 950 0
 864 020c 034B     		ldr	r3, .L84
 865 020e 5B6B     		ldr	r3, [r3, #52]
 866 0210 1840     		ands	r0, r0, r3
 867              	.LVL48:
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 868              		.loc 1 959 0
 869 0212 0030     		adds	r0, r0, #0
 870 0214 18BF     		it	ne
 871 0216 0120     		movne	r0, #1
 872              	.LVL49:
 873 0218 7047     		bx	lr
 874              	.L85:
 875 021a 00BF     		.align	2
 876              	.L84:
 877 021c 002C0140 		.word	1073818624
 878              		.cfi_endproc
 879              	.LFE138:
 881              		.align	2
 882              		.global	SDIO_ClearITPendingBit
 883              		.thumb
 884              		.thumb_func
 886              	SDIO_ClearITPendingBit:
 887              	.LFB139:
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 888              		.loc 1 981 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893              	.LVL50:
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 894              		.loc 1 985 0
 895 0220 014B     		ldr	r3, .L87
 896 0222 9863     		str	r0, [r3, #56]
 897 0224 7047     		bx	lr
 898              	.L88:
 899 0226 00BF     		.align	2
 900              	.L87:
 901 0228 002C0140 		.word	1073818624
 902              		.cfi_endproc
 903              	.LFE139:
 905              	.Letext0:
 906              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\mach
 907              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\stdi
 908              		.file 4 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx\\Include/stm32f4xx.h"
 909              		.file 5 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_sdio.h"
 910              		.file 6 "C:\\Users\\Filip\\Eclipse\\Template\\CMSIS\\Include/core_cm4.h"
 911              		.file 7 "C:\\Users\\Filip\\Eclipse\\Template\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:18     .text:00000000 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:23     .text:00000000 SDIO_DeInit
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:53     .text:00000018 SDIO_Init
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:104    .text:00000048 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:108    .text:0000004c $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:113    .text:0000004c SDIO_StructInit
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:143    .text:0000005c SDIO_ClockCmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:158    .text:00000064 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:162    .text:00000068 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:167    .text:00000068 SDIO_SetPowerState
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:182    .text:00000070 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:186    .text:00000074 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:191    .text:00000074 SDIO_GetPowerState
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:207    .text:00000080 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:211    .text:00000084 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:216    .text:00000084 SDIO_SendCommand
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:261    .text:000000b0 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:265    .text:000000b4 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:270    .text:000000b4 SDIO_CmdStructInit
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:298    .text:000000c4 SDIO_GetCommandResponse
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:314    .text:000000cc $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:318    .text:000000d0 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:323    .text:000000d0 SDIO_GetResponse
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:351    .text:000000e4 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:355    .text:000000e8 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:360    .text:000000e8 SDIO_DataConfig
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:406    .text:00000114 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:410    .text:00000118 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:415    .text:00000118 SDIO_DataStructInit
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:446    .text:0000012c SDIO_GetDataCounter
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:461    .text:00000134 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:465    .text:00000138 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:470    .text:00000138 SDIO_ReadData
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:485    .text:00000140 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:489    .text:00000144 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:494    .text:00000144 SDIO_WriteData
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:509    .text:0000014c $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:513    .text:00000150 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:518    .text:00000150 SDIO_GetFIFOCount
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:533    .text:00000158 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:537    .text:0000015c $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:542    .text:0000015c SDIO_StartSDIOReadWait
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:557    .text:00000164 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:561    .text:00000168 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:566    .text:00000168 SDIO_StopSDIOReadWait
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:581    .text:00000170 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:585    .text:00000174 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:590    .text:00000174 SDIO_SetSDIOReadWaitMode
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:605    .text:0000017c $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:609    .text:00000180 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:614    .text:00000180 SDIO_SetSDIOOperation
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:629    .text:00000188 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:633    .text:0000018c $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:638    .text:0000018c SDIO_SendSDIOSuspendCmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:653    .text:00000194 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:657    .text:00000198 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:662    .text:00000198 SDIO_CommandCompletionCmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:677    .text:000001a0 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:681    .text:000001a4 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:686    .text:000001a4 SDIO_CEATAITCmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:705    .text:000001b4 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:709    .text:000001b8 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:714    .text:000001b8 SDIO_SendCEATACmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:729    .text:000001c0 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:733    .text:000001c4 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:738    .text:000001c4 SDIO_DMACmd
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:753    .text:000001cc $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:757    .text:000001d0 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:762    .text:000001d0 SDIO_ITConfig
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:791    .text:000001e8 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:795    .text:000001ec $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:800    .text:000001ec SDIO_GetFlagStatus
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:822    .text:000001fc $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:826    .text:00000200 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:831    .text:00000200 SDIO_ClearFlag
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:846    .text:00000208 $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:850    .text:0000020c $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:855    .text:0000020c SDIO_GetITStatus
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:877    .text:0000021c $d
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:881    .text:00000220 $t
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:886    .text:00000220 SDIO_ClearITPendingBit
C:\Users\Filip\AppData\Local\Temp\ccFjJxIM.s:901    .text:00000228 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.2bb9d917777380cc06007ef782f1739f
                           .group:00000000 wm4.stm32f4xx.h.48.ab6cfc2433f704442c75c2d67f633280
                           .group:00000000 wm4.core_cm4.h.32.f824aba4d431a5bb4a51726bd5b62834
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.288.7f55b1a1f5e5bad6ffa2308f97f537d1
                           .group:00000000 wm4.stm32f4xx_conf.h.24.a762e2483b8e31b68046e44b31e1d406
                           .group:00000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:00000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:00000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:00000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:00000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:00000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:00000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:00000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:00000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:00000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:00000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:00000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:00000000 wm4.stm32f4xx_pwr.h.25.41ffcb5dc896ed2d26edf4d9bbbfbe6f
                           .group:00000000 wm4.stm32f4xx_rcc.h.24.a10ec6e94989efb0f8f7f56448e9bb60
                           .group:00000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:00000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:00000000 wm4.stm32f4xx_spi.h.25.980a9e96afe182c8b9cb91058a0693d6
                           .group:00000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:00000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:00000000 wm4.stm32f4xx_usart.h.25.32a7aeff79714f90f8c4da45bf79808c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:00000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:00000000 wm4.stm32f4xx.h.6972.f31ddedd83a17c461a3fab76f77123cb
                           .group:00000000 wm4.stm32f4xx_sdio.h.120.96716c0e79bd0f2fbce7b125e62fa523

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
